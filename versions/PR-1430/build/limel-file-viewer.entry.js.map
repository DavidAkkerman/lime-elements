{"version":3,"names":["detectExtension","fileName","url","pathLike","extension","type","split","pop","toLowerCase","Fullscreen","constructor","element","this","enter","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","bind","doc","window","document","exit","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","toggle","isFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","isSupported","fileViewerCss","FileViewer","hostRef","emitOnAction","event","stopPropagation","action","emit","detail","fullscreen","HostElement","render","sameDomain","includes","webserverDomain","filename","startsWith","renderNoFileSupportMessage","renderPdf","renderImage","renderVideo","renderAudio","renderText","renderOffice","getOfficeViewerUrl","officeViewer","buttonStyle","position","float","right","bottom","transition","h","href","style","class","renderActionMenu","src","frameborder","renderButtons","data","controls","alt","name","size","getTranslation","title","role","download","renderFullscreenButtons","target","rel","onClick","actions","items","slot","key","translate","get","language"],"sources":["./src/components/file-viewer/extensionMapping.tsx","./src/components/file-viewer/fullscreen.ts","./src/components/file-viewer/file-viewer.scss?tag=limel-file-viewer&encapsulation=shadow","./src/components/file-viewer/file-viewer.tsx"],"sourcesContent":["/* eslint-disable @stencil/dependency-suggestions */\n\nexport function detectExtension(fileName, url): any {\n    const pathLike = fileName || url;\n    let extension = '';\n    let type = '';\n\n    if (!pathLike) {\n        extension = '';\n        type = 'unknown';\n\n        return;\n    }\n\n    extension = pathLike.split('.').pop().toLowerCase();\n    switch (extension) {\n        case 'pdf':\n            type = 'pdf';\n            break;\n        case 'jpg':\n        case 'jpeg':\n        case 'heic':\n        case 'bmp':\n        case 'png':\n        case 'gif':\n        case 'svg':\n        case 'svgz':\n        case 'ep':\n        case 'eps':\n            type = 'image';\n            break;\n        case 'avi':\n        case 'flv':\n        case 'h264':\n        case 'mov':\n        case 'mp4':\n        case 'mwv':\n        case 'mkv':\n            type = 'video';\n            break;\n        case 'mp3':\n        case 'wav':\n        case 'wma':\n        case 'ogg':\n            type = 'audio';\n            break;\n        case 'txt':\n        case 'json':\n        case 'html':\n        case 'xml':\n            type = 'text';\n            break;\n        case 'doc': // tested\n        case 'docx': // tested\n        case 'ppt': // tested\n        case 'xls': // tested\n        case 'xlsx': // tested\n        case 'odt': // tested\n        case 'ods': // tested\n        case 'odp': // tested\n        case 'dot': // tested\n        case 'dotx': // tested\n        case 'docm': // not supported https://example-files.online-convert.com/document/docm/example.docm\n        case 'dotm': // not yet tested\n        case 'pages': // not supported https://example-files.online-convert.com/document/pages/example.pages\n        case 'pptx': // tested\n        case 'csv': // not supported https://file-examples-com.github.io/uploads/2017/02/file_example_CSV_5000.csv\n        case 'numbers': // not supported https://example-files.online-convert.com/spreadsheet/numbers/example.numbers\n        case 'pot': // not tested\n        case 'pps': // tested\n        case 'ppsx': // tested\n        case 'pptm': // not supported https://israeltekahun.com/pptm.pptm\n        case 'potx': // not supported https://israeltekahun.com/potx.potx\n        case 'potm': // not supported https://israeltekahun.com/potm.potm\n        case 'ppam': // could not find file\n        case 'ppsm': // not supported https://israeltekahun.com/ppsm.ppsm\n        case 'sldx': // not tested\n        case 'sldm': // not tested\n        case 'key': // not tested\n            type = 'office';\n            break;\n        default:\n            type = 'unknown';\n            break;\n    }\n\n    return type;\n}\n","export class Fullscreen {\n    private enter: () => void;\n    private exit: () => void;\n\n    constructor(element: any) {\n        this.enter =\n            element.requestFullscreen ||\n            element.msRequestFullscreen ||\n            element.mozRequestFullScreen ||\n            element.webkitRequestFullscreen;\n        this.enter = this.enter.bind(element);\n        const doc: any = window.document;\n        this.exit =\n            doc.exitFullscreen ||\n            doc.msExitFullscreen ||\n            doc.mozCancelFullScreen ||\n            doc.webkitExitFullscreen;\n        this.requestFullscreen = this.requestFullscreen.bind(this);\n        this.exitFullscreen = this.exitFullscreen.bind(this);\n        this.toggle = this.toggle.bind(this);\n    }\n\n    public requestFullscreen() {\n        if (this.enter) {\n            this.enter();\n        }\n    }\n\n    public exitFullscreen() {\n        if (this.exit) {\n            this.exit.bind(window.document)();\n        }\n    }\n\n    public toggle() {\n        const doc: any = window.document;\n        const isFullscreen =\n            doc.fullscreenElement ||\n            doc.mozFullScreenElement ||\n            doc.webkitFullscreenElement ||\n            doc.msFullscreenElement;\n\n        if (isFullscreen) {\n            this.exitFullscreen();\n        } else {\n            this.requestFullscreen();\n        }\n    }\n\n    public isSupported(): boolean {\n        return !!this.requestFullscreen;\n    }\n}\n","@use '../../style/functions';\n@use '../../style/internal/variables';\n@use '../../style/internal/shared_input-select-picker';\n@use '../../style/mixins';\n\n$size-of-buttons: 2rem;\n$limel-file-viewer-buttons: 1 !default;\n\n:host {\n    isolation: isolate;\n    position: relative;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n}\n\nimg,\nvideo,\naudio,\nobject,\niframe {\n    max-height: 100%;\n    max-width: 100%;\n    box-sizing: border-box;\n}\n\niframe {\n    border: none;\n    width: 100%;\n    height: 100%;\n    min-height: functions.pxToRem(\n        300\n    ); // makes sure to get minimum comfortable space for viewing office files, and Microsoft Office viewers toolbars\n}\n\nimg {\n    min-width: functions.pxToRem(100);\n    object-fit: contain; // increases or decreases the size of the image to fill the box whilst preserving its aspect-ratio.\n}\n\nvideo {\n    width: 100%;\n    height: auto;\n}\n\naudio {\n    width: 100%;\n}\n\nobject[type='application/pdf'] {\n    width: 100%;\n    height: 100%;\n    min-height: functions.pxToRem(\n        300\n    ); // makes sure to get browsers' native controls for the PDF\n}\n\nobject:not([type='application/pdf']) {\n    border-radius: 0.25rem;\n    padding: 0.75rem $size-of-buttons 0.75rem 0.75rem;\n\n    width: 100%;\n    height: 100%;\n    overflow-y: auto;\n\n    color: rgb(var(--contrast-1300));\n    background-color: rgb(var(--contrast-200));\n}\n\n:host(:fullscreen) {\n    background-color: rgb(var(--color-gray-darker));\n\n    object[type='text/plain'] {\n        max-width: functions.pxToRem(800);\n        max-height: calc(100% - 2rem);\n    }\n}\n\n:host(:-webkit-full-screen) {\n    // this is repetition of the previous block, but needed for Safari to work. There is no way to write SCSS rules for `:host` using commas sadly. You have to repeat.\n    background-color: rgb(var(--color-gray-darker));\n\n    object[type='text/plain'] {\n        max-width: functions.pxToRem(800);\n        max-height: calc(100% - 2rem);\n    }\n}\n\n@import './partial-styles/ui-controls.scss';\n","import { Languages, ListItem } from '@limetech/lime-elements';\nimport translate from '../../global/translations';\nimport { detectExtension } from './extensionMapping';\nimport {\n    Component,\n    Element,\n    h,\n    Prop,\n    State,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { Fullscreen } from './fullscreen';\n\n/**\n * This is a smart component that automatically detects\n * the most common file types such as image, audio, video, and text,\n * and properly displays them in the browser.\n * The component is also capable to render the most common office files.\n *\n * :::note\n * Image files will always be contained in their containers, which means\n * they automatically increases or decreases in size to fill their containing box\n * whilst preserving their aspect-ratio.\n *\n * Text and PDF files will also always respect the width and height of the\n * container in which the `limel-file-viewer` is loaded.\n * :::\n *\n * For some file types such as text and images, the component will display a\n * download button and a button to open the file in a new browser tab.\n * This will allow users to preview the file in a fullscreen more with the\n * browser and take advantage of for example native zooming and panning\n * functionalities.\n *\n *:::important\n * The download button will not work here in this documentation,\n * due to the security policies of the web browsers,\n * since example files are not hosted in the same domain.\n *:::\n * @exampleComponent limel-example-file-viewer\n * @exampleComponent limel-example-file-viewer-office\n * @exampleComponent limel-example-file-viewer-filename\n * @exampleComponent limel-example-file-viewer-actions\n * @exampleComponent limel-example-file-viewer-with-picker\n */\n\n@Component({\n    tag: 'limel-file-viewer',\n    shadow: true,\n    styleUrl: 'file-viewer.scss',\n})\nexport class FileViewer {\n    /**\n     * Link to the file\n     */\n    @Prop({ reflect: true })\n    public url: string;\n\n    /**\n     * The name of the file that also contains its extension.\n     * Overrides the filename provided by the URL.\n     * Useful when the URL does not contain the filename.\n     */\n    @Prop({ reflect: true })\n    public filename: string;\n\n    /**\n     * Alternative text for assistive technologies and screen readers,\n     * used for image files.\n     */\n    @Prop({ reflect: true })\n    public alt: string;\n\n    /**\n     * Defines the localization for translations.\n     */\n    @Prop()\n    public language: Languages = 'en';\n\n    /**\n     * Defines the third-party viewer that should be used to render\n     * the content of office files, such as word processing documents,\n     * presentations, or spreadsheets.\n     */\n    @Prop()\n    public officeViewer:\n        | 'microsoft-office'\n        | 'microsoft-sharepoint'\n        | 'google-drive' = 'microsoft-office';\n\n    /**\n     *\n     */\n    @Prop()\n    public actions: ListItem[];\n\n    /**\n     *\n     */\n    @Prop()\n    public webserverDomain: string;\n\n    /**\n     * determines if the document is hosted on the same domain as the current webserver\n     */\n    @State()\n    public sameDomain: boolean = false;\n\n    /**\n     *\n     */\n    @Event()\n    public action: EventEmitter<ListItem>;\n\n    @Element()\n    public HostElement: HTMLLimelFileViewerElement;\n\n    private fullscreen: Fullscreen;\n\n    private type:\n        | 'pdf'\n        | 'image'\n        | 'video'\n        | 'audio'\n        | 'text'\n        | 'office'\n        | 'unknown';\n\n    constructor() {\n        this.fullscreen = new Fullscreen(this.HostElement);\n    }\n\n    public render() {\n        this.sameDomain = this.url.includes(this.webserverDomain);\n\n        if (!this.url) {\n            return;\n        }\n\n        if (!this.type) {\n            this.type = detectExtension(this.filename, this.url);\n        }\n\n        if (\n            this.type === 'office' &&\n            !(this.url.startsWith('http://') || this.url.startsWith('https://'))\n        ) {\n            return this.renderNoFileSupportMessage();\n        }\n\n        switch (this.type) {\n            case 'pdf':\n                return this.renderPdf();\n            case 'image':\n                return this.renderImage();\n            case 'video':\n                return this.renderVideo();\n            case 'audio':\n                return this.renderAudio();\n            case 'text':\n                return this.renderText();\n            case 'office':\n                return this.renderOffice();\n            default:\n                return this.renderNoFileSupportMessage();\n        }\n    }\n\n    private getOfficeViewerUrl() {\n        if (this.officeViewer === 'microsoft-office') {\n            return 'https://view.officeapps.live.com/op/embed.aspx?src=';\n        }\n\n        if (this.officeViewer === 'google-drive') {\n            return 'https://docs.google.com/gview?url=';\n        }\n\n        if (this.officeViewer === 'microsoft-sharepoint') {\n            return;\n            // <iframe src=\"https://limetechab.sharepoint.com/sites/ProductManagement/_layouts/15/Doc.aspx?sourcedoc={89338338-e9e5-43e4-84ce-b3c32d286a1f}&amp;action=embedview\" />\n        }\n    }\n\n    private renderOffice() {\n        // the button needs more styling, it is currently sitting beside the iframe\n        const buttonStyle = {\n            position: 'relative',\n            float: 'right',\n            right: '10px',\n            bottom: '35px',\n            transition: '0.5s',\n        };\n\n        if (this.sameDomain) {\n            return [\n                <a href={this.url} style={buttonStyle}>\n                    download\n                </a>,\n                <div class=\"action-menu-for-office-files\">\n                    {this.renderActionMenu()}\n                </div>,\n                <iframe\n                    src={this.getOfficeViewerUrl() + this.url}\n                    frameborder=\"0\"\n                ></iframe>,\n            ];\n        }\n\n        return [\n            <div class=\"action-menu-for-office-files\">\n                {this.renderActionMenu()}\n            </div>,\n            <iframe\n                src={this.getOfficeViewerUrl() + this.url}\n                frameborder=\"0\"\n            ></iframe>,\n        ];\n    }\n\n    private renderText() {\n        return [\n            this.renderButtons(),\n            <object data={this.url} type=\"text/plain\"></object>,\n        ];\n    }\n\n    private renderVideo() {\n        return (\n            <video controls>\n                <source src={this.url} />\n            </video>\n        );\n    }\n\n    private renderPdf() {\n        return <object data={this.url} type=\"application/pdf\"></object>;\n    }\n\n    private renderImage() {\n        return [this.renderButtons(), <img src={this.url} alt={this.alt} />];\n    }\n\n    private renderAudio() {\n        return (\n            <audio controls>\n                <source src={this.url} />\n            </audio>\n        );\n    }\n\n    private renderNoFileSupportMessage() {\n        return (\n            <div class=\"no-support\">\n                <div class=\"no-support__info\">\n                    <limel-icon\n                        class=\"icon--warning\"\n                        name=\"brake_warning\"\n                        size=\"large\"\n                    ></limel-icon>\n                    <div>\n                        {this.getTranslation('message.unsupported-filetype')}\n                    </div>\n                </div>\n                <a\n                    href={this.url}\n                    title=\"download\"\n                    class=\"button--download\"\n                    role=\"button\"\n                    download\n                >\n                    <limel-icon name=\"download_2\" size=\"large\" />\n                </a>\n            </div>\n        );\n    }\n\n    private renderButtons() {\n        return (\n            <div class=\"buttons\">\n                {this.renderActionMenu()}\n                {this.renderFullscreenButtons()}\n                <a\n                    href={this.url}\n                    title={this.getTranslation('title.download')}\n                    class=\"button--download\"\n                    role=\"button\"\n                    download={this.filename}\n                    target=\"_blank\"\n                >\n                    <limel-icon name=\"download_2\" size=\"small\" />\n                </a>\n                <a\n                    class=\"button--new-tab\"\n                    role=\"button\"\n                    href={this.url}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    title={this.getTranslation('title.open-in-new-tab')}\n                >\n                    <limel-icon name=\"external_link\" size=\"small\" />\n                </a>\n            </div>\n        );\n    }\n\n    private renderFullscreenButtons() {\n        if (this.fullscreen.isSupported()) {\n            return [\n                <a\n                    class=\"button--exit-fullscreen\"\n                    role=\"button\"\n                    onClick={this.fullscreen.toggle}\n                    title={this.getTranslation('title.exit-fullscreen')}\n                >\n                    <limel-icon name=\"multiply\" size=\"small\" />\n                </a>,\n                <a\n                    class=\"button--enter-fullscreen\"\n                    role=\"button\"\n                    onClick={this.fullscreen.toggle}\n                    title={this.getTranslation('title.open-in-fullscreen')}\n                >\n                    <limel-icon name=\"fit_to_width\" size=\"small\" />\n                </a>,\n            ];\n        }\n    }\n\n    private renderActionMenu() {\n        if (!this.actions) {\n            return;\n        }\n\n        return (\n            <limel-menu\n                class=\"action-menu\"\n                items={this.actions}\n                // onSelect={this.emitOnAction}\n                open-direction=\"left\"\n            >\n                <a title=\"More...\" class=\"button--action\" slot=\"trigger\">\n                    <limel-icon name=\"menu_2\" size=\"small\" />\n                </a>\n            </limel-menu>\n        );\n    }\n\n    private emitOnAction = (event: CustomEvent<ListItem>) => {\n        event.stopPropagation();\n        this.action.emit(event.detail);\n    };\n\n    private getTranslation(key: string) {\n        return translate.get(`file-viewer.${key}`, this.language);\n    }\n}\n"],"mappings":"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"}