{"version":3,"names":["PickerStaticActionsExample","constructor","hostRef","this","allItems","text","value","actions","icon","iconColor","id","actionPositions","actionScrollBehaviors","search","bind","onChange","onAction","setBehavior","setPosition","render","h","label","selectedItem","searchLabel","searcher","onInteract","actionScrollBehavior","_a","actionPosition","_b","style","class","options","lastUsedAction","query","Promise","resolve","filteredItems","filter","item","toLowerCase","includes","event","detail","console","log"],"sources":["./src/components/picker/examples/picker-static-action.tsx"],"sourcesContent":["import {\n    Action,\n    ActionPosition,\n    ActionScrollBehavior,\n    LimelPickerCustomEvent,\n    LimelSelectCustomEvent,\n    ListItem,\n    Option,\n} from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * With static actions\n *\n * Static items can be added to the picker to enable triggering custom actions\n * directly from the results dropdown list.\n *\n * :::tip\n * A typical use case of such actions is scenarios in which the picker's search\n * results or suggestions list does not include what the user wants to pick. By\n * offering custom actions right in the list, we can enable users to add missing\n * items.\n * :::\n */\n@Component({\n    tag: 'limel-example-picker-static-actions',\n    shadow: true,\n})\nexport class PickerStaticActionsExample {\n    private allItems: Array<ListItem<number>> = [\n        { text: 'Admiral Swiggins', value: 1 },\n        { text: 'Ayla', value: 2 },\n        { text: 'Clunk', value: 3 },\n        { text: 'Coco', value: 4 },\n        { text: 'Derpl', value: 5 },\n        { text: 'Froggy G', value: 6 },\n        { text: 'Gnaw', value: 7 },\n        { text: 'Lonestar', value: 8 },\n        { text: 'Leon', value: 9 },\n        { text: 'Raelynn', value: 10 },\n        { text: 'Sk√∏lldir', value: 11 },\n        { text: 'Voltar', value: 12 },\n        { text: 'Yuri', value: 13 },\n    ];\n\n    private actions: Array<ListItem<Action>> = [\n        {\n            text: 'Add a dog',\n            icon: 'dog',\n            iconColor: 'rgb(var(--color-orange-default))',\n            value: { id: 'dog' },\n        },\n        {\n            text: 'Add a cat',\n            icon: 'cat',\n            iconColor: 'rgb(var(--color-green-default))',\n            value: { id: 'cat' },\n        },\n    ];\n\n    private actionPositions: Array<Option<ActionPosition>> = [\n        { text: 'Bottom', value: 'bottom' },\n        { text: 'Top', value: 'top' },\n    ];\n\n    private actionScrollBehaviors: Array<Option<ActionScrollBehavior>> = [\n        { text: 'Sticky', value: 'sticky' },\n        { text: 'Scroll', value: 'scroll' },\n    ];\n\n    @State()\n    private selectedItem: ListItem<number> = null;\n\n    @State()\n    private lastUsedAction: Action = null;\n\n    @State()\n    private actionScrollBehavior: Option<ActionScrollBehavior> =\n        this.actionScrollBehaviors[0];\n\n    @State()\n    private actionPosition: Option<ActionPosition> = this.actionPositions[0];\n\n    constructor() {\n        this.search = this.search.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onAction = this.onAction.bind(this);\n        this.setBehavior = this.setBehavior.bind(this);\n        this.setPosition = this.setPosition.bind(this);\n    }\n\n    public render() {\n        return [\n            <limel-picker\n                label=\"Select your favorite pet\"\n                value={this.selectedItem}\n                searchLabel={'Search your awesomenaut'}\n                searcher={this.search}\n                onChange={this.onChange}\n                onInteract={this.onInteract}\n                onAction={this.onAction}\n                actions={this.actions}\n                actionScrollBehavior={this.actionScrollBehavior?.value}\n                actionPosition={this.actionPosition?.value}\n            />,\n            <limel-example-controls\n                style={{ '--example-controls-max-columns-width': '10rem' }}\n            >\n                <limel-select\n                    class=\"is-narrow\"\n                    label=\"Action Scroll Behavior\"\n                    onChange={this.setBehavior}\n                    value={this.actionScrollBehavior}\n                    options={this.actionScrollBehaviors}\n                />\n\n                <limel-select\n                    class=\"is-narrow\"\n                    label=\"Action Position\"\n                    onChange={this.setPosition}\n                    value={this.actionPosition}\n                    options={this.actionPositions}\n                />\n            </limel-example-controls>,\n            <limel-example-value\n                label=\"Last pressed action\"\n                value={this.lastUsedAction}\n            />,\n        ];\n    }\n\n    private search(query: string): Promise<ListItem[]> {\n        return new Promise((resolve) => {\n            if (query === '') {\n                resolve(this.allItems);\n            }\n\n            const filteredItems = this.allItems.filter((item) => {\n                return item.text.toLowerCase().includes(query.toLowerCase());\n            });\n            resolve(filteredItems);\n        });\n    }\n\n    private onChange(event: LimelPickerCustomEvent<ListItem<number>>) {\n        this.selectedItem = event.detail;\n    }\n\n    private onAction(event: CustomEvent<Action>) {\n        this.lastUsedAction = event.detail;\n    }\n\n    private onInteract(event) {\n        console.log('Value interacted with:', event.detail);\n    }\n\n    private setBehavior(\n        event: LimelSelectCustomEvent<Option<ActionScrollBehavior>>\n    ) {\n        this.actionScrollBehavior = event.detail;\n    }\n\n    private setPosition(event: LimelSelectCustomEvent<Option<ActionPosition>>) {\n        this.actionPosition = event.detail;\n    }\n}\n"],"mappings":"qDA4BaA,EAA0B,MAuDnCC,YAAAC,G,UAtDQC,KAAAC,SAAoC,CACxC,CAAEC,KAAM,mBAAoBC,MAAO,GACnC,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,QAASC,MAAO,GACxB,CAAED,KAAM,WAAYC,MAAO,GAC3B,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,WAAYC,MAAO,GAC3B,CAAED,KAAM,OAAQC,MAAO,GACvB,CAAED,KAAM,UAAWC,MAAO,IAC1B,CAAED,KAAM,WAAYC,MAAO,IAC3B,CAAED,KAAM,SAAUC,MAAO,IACzB,CAAED,KAAM,OAAQC,MAAO,KAGnBH,KAAAI,QAAmC,CACvC,CACIF,KAAM,YACNG,KAAM,MACNC,UAAW,mCACXH,MAAO,CAAEI,GAAI,QAEjB,CACIL,KAAM,YACNG,KAAM,MACNC,UAAW,kCACXH,MAAO,CAAEI,GAAI,SAIbP,KAAAQ,gBAAiD,CACrD,CAAEN,KAAM,SAAUC,MAAO,UACzB,CAAED,KAAM,MAAOC,MAAO,QAGlBH,KAAAS,sBAA6D,CACjE,CAAEP,KAAM,SAAUC,MAAO,UACzB,CAAED,KAAM,SAAUC,MAAO,W,kBAIY,K,oBAGR,K,0BAI7BH,KAAKS,sBAAsB,G,oBAGkBT,KAAKQ,gBAAgB,GAGlER,KAAKU,OAASV,KAAKU,OAAOC,KAAKX,MAC/BA,KAAKY,SAAWZ,KAAKY,SAASD,KAAKX,MACnCA,KAAKa,SAAWb,KAAKa,SAASF,KAAKX,MACnCA,KAAKc,YAAcd,KAAKc,YAAYH,KAAKX,MACzCA,KAAKe,YAAcf,KAAKe,YAAYJ,KAAKX,K,CAGtCgB,S,QACH,MAAO,CACHC,EAAA,gBACIC,MAAM,2BACNf,MAAOH,KAAKmB,aACZC,YAAa,0BACbC,SAAUrB,KAAKU,OACfE,SAAUZ,KAAKY,SACfU,WAAYtB,KAAKsB,WACjBT,SAAUb,KAAKa,SACfT,QAASJ,KAAKI,QACdmB,sBAAsBC,EAAAxB,KAAKuB,wBAAoB,MAAAC,SAAA,SAAAA,EAAErB,MACjDsB,gBAAgBC,EAAA1B,KAAKyB,kBAAc,MAAAC,SAAA,SAAAA,EAAEvB,QAEzCc,EAAA,0BACIU,MAAO,CAAE,uCAAwC,UAEjDV,EAAA,gBACIW,MAAM,YACNV,MAAM,yBACNN,SAAUZ,KAAKc,YACfX,MAAOH,KAAKuB,qBACZM,QAAS7B,KAAKS,wBAGlBQ,EAAA,gBACIW,MAAM,YACNV,MAAM,kBACNN,SAAUZ,KAAKe,YACfZ,MAAOH,KAAKyB,eACZI,QAAS7B,KAAKQ,mBAGtBS,EAAA,uBACIC,MAAM,sBACNf,MAAOH,KAAK8B,iB,CAKhBpB,OAAOqB,GACX,OAAO,IAAIC,SAASC,IAChB,GAAIF,IAAU,GAAI,CACdE,EAAQjC,KAAKC,S,CAGjB,MAAMiC,EAAgBlC,KAAKC,SAASkC,QAAQC,GACjCA,EAAKlC,KAAKmC,cAAcC,SAASP,EAAMM,iBAElDJ,EAAQC,EAAc,G,CAItBtB,SAAS2B,GACbvC,KAAKmB,aAAeoB,EAAMC,M,CAGtB3B,SAAS0B,GACbvC,KAAK8B,eAAiBS,EAAMC,M,CAGxBlB,WAAWiB,GACfE,QAAQC,IAAI,yBAA0BH,EAAMC,O,CAGxC1B,YACJyB,GAEAvC,KAAKuB,qBAAuBgB,EAAMC,M,CAG9BzB,YAAYwB,GAChBvC,KAAKyB,eAAiBc,EAAMC,M"}