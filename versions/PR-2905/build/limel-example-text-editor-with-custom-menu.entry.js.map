{"version":3,"names":["TextEditorWithCustomMenuExample","this","handleChange","event","stopPropagation","text","detail","html","render","h","onChange","value"],"sources":["./src/components/text-editor/examples/text-editor-with-custom-menu.tsx"],"sourcesContent":["import { LimelTextEditorCustomEvent } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n// import { EditorPluginButton } from '../menu/types';\n/**\n * Example with custom menu\n *\n * New items, such as \"undo\" and \"redo\", can be added to the\n * default menu using the menuItems prop\n *\n * @private\n *\n * TODO Add a reference to this component at a later time, or delete it\n */\n@Component({\n    tag: 'limel-example-text-editor-with-custom-menu',\n    shadow: true,\n})\nexport class TextEditorWithCustomMenuExample {\n    @State()\n    private text: { html: string } = { html: '' };\n\n    public render() {\n        // const menuItems: EditorPluginButton[] = ['undo', 'redo'];\n\n        return [\n            <limel-text-editor\n                onChange={this.handleChange}\n                // additionalMenuItems={menuItems}\n            />,\n            <limel-example-value value={this.text} />,\n        ];\n    }\n\n    private handleChange = (\n        event: LimelTextEditorCustomEvent<{ html: string }>,\n    ): void => {\n        event.stopPropagation();\n        this.text = event.detail;\n    };\n}\n"],"mappings":"qDAiBaA,EAA+B,M,yBAgBhCC,KAAAC,aACJC,IAEAA,EAAMC,kBACNH,KAAKI,KAAOF,EAAMG,MAAM,E,UAlBK,CAAEC,KAAM,G,CAElCC,SAGH,MAAO,CACHC,EAAA,qBACIC,SAAUT,KAAKC,eAGnBO,EAAA,uBAAqBE,MAAOV,KAAKI,O"}