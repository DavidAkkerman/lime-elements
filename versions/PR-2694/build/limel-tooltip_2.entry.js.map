{"version":3,"names":["tooltipCss","DEFAULT_MAX_LENGTH","Tooltip","constructor","hostRef","this","showTooltip","tooltipDelay","showTooltipTimeoutHandle","window","setTimeout","open","hideTooltip","clearTimeout","portalId","createRandomString","tooltipId","connectedCallback","ownerElement","getOwnerElement","setOwnerAriaLabel","addListeners","disconnectedCallback","removeListeners","render","tooltipZIndex","getComputedStyle","host","getPropertyValue","h","class","openDirection","visible","containerId","containerStyle","anchor","label","helperLabel","maxlength","role","id","_a","setAttribute","addEventListener","_b","_c","removeEventListener","element","parentNode","nodeType","Node","DOCUMENT_FRAGMENT_NODE","DOCUMENT_NODE","getElementById","elementId","tooltipContentCss","TooltipContent","isLabelsTextLong","length","props","style","Object","assign"],"sources":["./src/components/tooltip/tooltip.scss?tag=limel-tooltip&encapsulation=shadow","./src/components/tooltip/tooltip.tsx","./src/components/tooltip/tooltip-content.scss?tag=limel-tooltip-content&encapsulation=shadow","./src/components/tooltip/tooltip-content.tsx"],"sourcesContent":["/**\n * @prop --tooltip-z-index: z-index of the tooltip.\n */\n\n:host(limel-tooltip) {\n    // Absolutely positioning ensures that this invisible element\n    // does not occupy visible space in the UI.\n    // Without this, `limel-tooltip` could in many cases\n    // mess up the layout, where it is used.\n    // For example, inside a `grid` or `flex` section,\n    // every instance of the tooltip would take some space,\n    // creating gaps and empty holes.\n    position: absolute;\n    pointer-events: none;\n}\n","import { Component, h, Prop, Element, State } from '@stencil/core';\nimport { JSX } from 'react';\nimport { createRandomString } from '../../util/random-string';\nimport { OpenDirection } from '../../interface';\n\nconst DEFAULT_MAX_LENGTH = 50;\n\n/**\n * A tooltip can be used to display a descriptive text for any element.\n * The displayed content must be a brief and supplemental string of text,\n * identifying the element or describing its function for the user,\n * helping them better understand unfamiliar objects that aren't described\n * directly in the UI.\n *\n * ## Interaction\n * The tooltip appears after a slight delay, when the element is hovered;\n * and disappears as soon as the cursor leaves the element.\n * Therefore, users cannot interact with the tip, but if the trigger element\n * itself is interactive, it will remain interactible even with a tooltip bound\n * to it.\n *\n * :::note\n * In order to display the tooltip, the tooltip element and its trigger element\n * must be within the same document or document fragment (the same shadowRoot).\n * Often, it's easiest to just place them next to each other like in the example\n * below, but if you need to, you can place them differently.\n *\n * ```html\n * <limel-button icon=\"search\" id=\"tooltip-example\" />\n * <limel-tooltip label=\"Search\" elementId=\"tooltip-example\" />\n * ```\n * :::\n *\n * ## Usage\n * - Keep in mind that tooltips can be distracting, and can be perceived as an interruption.\n * Use them only when they add significant value.\n * - A good tip is concise, helpful, and informative.\n * Don't explain the obvious or simply repeat what is already on the screen.\n * When used correctly, supplemental info of a tooltip helps to [declutter the UI](/#/DesignGuidelines/decluttering.md/).\n * - If the tip is essential to the primary tasks that the user is performing,\n * such as warnings or important notes, include the information directly in the\n * interface instead.\n * - When a component offers a helper text (e.g. [Input field](/#/component/limel-input-field/)),\n * use that, not a tooltip.\n * - Make sure to use the tooltip on an element that users naturally and\n * effortlessly recognize can be hovered.\n *\n * @exampleComponent limel-example-tooltip-basic\n * @exampleComponent limel-example-tooltip-max-character\n * @exampleComponent limel-example-tooltip-composite\n */\n@Component({\n    tag: 'limel-tooltip',\n    shadow: true,\n    styleUrl: 'tooltip.scss',\n})\nexport class Tooltip {\n    /**\n     * ID of the owner element that the tooltip should describe.\n     * Must be a child within the same document fragment as the tooltip element\n     * itself.\n     */\n    @Prop({ reflect: true })\n    public elementId!: string;\n\n    /**\n     * Short descriptive text of the owner element.\n     */\n    @Prop({ reflect: true })\n    public label!: string;\n\n    /**\n     * Additional helper text for the element.\n     * Example usage can be a keyboard shortcut to activate the function of the\n     * owner element.\n     */\n    @Prop({ reflect: true })\n    public helperLabel?: string;\n\n    /**\n     * The maximum amount of characters before rendering 'label' and\n     * 'helperLabel' in two rows.\n     */\n    @Prop({ reflect: true })\n    public maxlength?: number = DEFAULT_MAX_LENGTH;\n\n    /**\n     * Decides the tooltip's location in relation to its trigger.\n     */\n    @Prop({ reflect: true })\n    public openDirection: OpenDirection = 'top';\n\n    @Element()\n    private host: HTMLLimelTooltipElement;\n\n    @State()\n    private open: boolean;\n\n    private portalId: string;\n    private tooltipId: string;\n    private showTooltipTimeoutHandle: number;\n    private ownerElement: HTMLElement;\n\n    public constructor() {\n        this.portalId = createRandomString();\n        this.tooltipId = createRandomString();\n    }\n\n    public connectedCallback() {\n        this.ownerElement = this.getOwnerElement();\n        this.setOwnerAriaLabel();\n        this.addListeners();\n    }\n\n    public disconnectedCallback() {\n        this.removeListeners();\n    }\n\n    public render(): JSX.Element {\n        const tooltipZIndex = getComputedStyle(this.host).getPropertyValue(\n            '--tooltip-z-index',\n        );\n\n        return (\n            <div class=\"trigger-anchor\">\n                <limel-portal\n                    openDirection={this.openDirection}\n                    visible={this.open}\n                    containerId={this.portalId}\n                    containerStyle={{\n                        'z-index': tooltipZIndex,\n                        'pointer-events': 'none',\n                    }}\n                    anchor={this.ownerElement}\n                >\n                    <limel-tooltip-content\n                        label={this.label}\n                        helperLabel={this.helperLabel}\n                        maxlength={this.maxlength}\n                        role=\"tooltip\"\n                        aria-hidden={!this.open}\n                        id={this.tooltipId}\n                    />\n                </limel-portal>\n            </div>\n        );\n    }\n\n    private setOwnerAriaLabel() {\n        this.ownerElement?.setAttribute('aria-describedby', this.tooltipId);\n    }\n\n    private addListeners() {\n        this.ownerElement?.addEventListener('mouseover', this.showTooltip);\n        this.ownerElement?.addEventListener('mouseout', this.hideTooltip);\n        this.ownerElement?.addEventListener('click', this.hideTooltip);\n    }\n\n    private removeListeners() {\n        this.ownerElement?.removeEventListener('mouseover', this.showTooltip);\n        this.ownerElement?.removeEventListener('mouseout', this.hideTooltip);\n        this.ownerElement?.removeEventListener('click', this.hideTooltip);\n    }\n\n    private showTooltip = () => {\n        const tooltipDelay = 500;\n        this.showTooltipTimeoutHandle = window.setTimeout(() => {\n            this.open = true;\n        }, tooltipDelay);\n    };\n\n    private hideTooltip = () => {\n        clearTimeout(this.showTooltipTimeoutHandle);\n        this.open = false;\n    };\n\n    private getOwnerElement(): HTMLElement | undefined {\n        let element: Node = this.host;\n\n        do {\n            element = element.parentNode;\n        } while (\n            element &&\n            element.nodeType !== Node.DOCUMENT_FRAGMENT_NODE &&\n            element.nodeType !== Node.DOCUMENT_NODE\n        );\n\n        return (element as ShadowRoot)?.getElementById(this.elementId);\n    }\n}\n",":host(limel-tooltip-content) {\n    animation: display-tooltip 0.2s ease;\n    display: flex;\n\n    border-radius: 0.25rem;\n    padding: 0.25rem 0.5rem;\n    background-color: rgb(var(--contrast-1300));\n    box-shadow: var(--shadow-depth-16);\n}\n\ntext {\n    font-size: 0.875rem; // 14px\n    line-height: 1.25;\n    display: flex;\n    column-gap: 1rem;\n\n    &.has-column-layout {\n        display: table-cell;\n        width: fit-content;\n        max-width: min(var(--tooltip-max-width-of-text), 80vw);\n        .label {\n            padding-bottom: 0.5rem;\n        }\n        .helper-label {\n            padding-bottom: 0.25rem;\n        }\n    }\n}\n\n.label {\n    color: rgb(var(--contrast-200));\n}\n\n.helper-label {\n    color: rgb(var(--contrast-800));\n\n    &:empty {\n        display: none;\n    }\n}\n\n@keyframes display-tooltip {\n    0% {\n        opacity: 0;\n        transform: translate3d(0, 0, 0) scale(0.94);\n    }\n    100% {\n        opacity: 1;\n        transform: translate3d(0, 0, 0) scale(1);\n    }\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n/**\n * This component is used internally by `limel-tooltip`.\n *\n * @private\n */\n@Component({\n    tag: 'limel-tooltip-content',\n    shadow: true,\n    styleUrl: 'tooltip-content.scss',\n})\nexport class TooltipContent {\n    /**\n     * Read more in tooltip.tsx\n     */\n    @Prop({ reflect: true })\n    label!: string;\n\n    /**\n     * Read more in tooltip.tsx\n     */\n    @Prop({ reflect: true })\n    helperLabel?: string;\n\n    /**\n     * Read more in tooltip.tsx\n     */\n    @Prop({ reflect: true })\n    maxlength?: number;\n\n    public render() {\n        let isLabelsTextLong = false;\n        if (this.helperLabel && this.maxlength) {\n            isLabelsTextLong =\n                this.label.length + this.helperLabel.length > this.maxlength;\n        }\n\n        const props: any = {};\n        if (this.maxlength) {\n            props.style = {\n                '--tooltip-max-width-of-text': `${this.maxlength}` + 'ch',\n            };\n        }\n\n        return [\n            <text class={{ 'has-column-layout': isLabelsTextLong }} {...props}>\n                <div class=\"label\">{this.label}</div>\n                <div class=\"helper-label\">{this.helperLabel}</div>\n            </text>,\n        ];\n    }\n}\n"],"mappings":"sGAAA,MAAMA,EAAa,8DCKnB,MAAMC,EAAqB,G,MAmDdC,EAAO,MA+ChBC,YAAAC,G,UA6DQC,KAAAC,YAAc,KAClB,MAAMC,EAAe,IACrBF,KAAKG,yBAA2BC,OAAOC,YAAW,KAC9CL,KAAKM,KAAO,IAAI,GACjBJ,EAAa,EAGZF,KAAAO,YAAc,KAClBC,aAAaR,KAAKG,0BAClBH,KAAKM,KAAO,KAAK,E,wFAzFOV,E,mBAMU,M,oBAclCI,KAAKS,SAAWC,IAChBV,KAAKW,UAAYD,G,CAGdE,oBACHZ,KAAKa,aAAeb,KAAKc,kBACzBd,KAAKe,oBACLf,KAAKgB,c,CAGFC,uBACHjB,KAAKkB,iB,CAGFC,SACH,MAAMC,EAAgBC,iBAAiBrB,KAAKsB,MAAMC,iBAC9C,qBAGJ,OACIC,EAAA,OAAKC,MAAM,kBACPD,EAAA,gBACIE,cAAe1B,KAAK0B,cACpBC,QAAS3B,KAAKM,KACdsB,YAAa5B,KAAKS,SAClBoB,eAAgB,CACZ,UAAWT,EACX,iBAAkB,QAEtBU,OAAQ9B,KAAKa,cAEbW,EAAA,yBACIO,MAAO/B,KAAK+B,MACZC,YAAahC,KAAKgC,YAClBC,UAAWjC,KAAKiC,UAChBC,KAAK,UAAS,eACAlC,KAAKM,KACnB6B,GAAInC,KAAKW,a,CAOrBI,oB,OACJqB,EAAApC,KAAKa,gBAAY,MAAAuB,SAAA,SAAAA,EAAEC,aAAa,mBAAoBrC,KAAKW,U,CAGrDK,e,WACJoB,EAAApC,KAAKa,gBAAY,MAAAuB,SAAA,SAAAA,EAAEE,iBAAiB,YAAatC,KAAKC,cACtDsC,EAAAvC,KAAKa,gBAAY,MAAA0B,SAAA,SAAAA,EAAED,iBAAiB,WAAYtC,KAAKO,cACrDiC,EAAAxC,KAAKa,gBAAY,MAAA2B,SAAA,SAAAA,EAAEF,iBAAiB,QAAStC,KAAKO,Y,CAG9CW,kB,WACJkB,EAAApC,KAAKa,gBAAY,MAAAuB,SAAA,SAAAA,EAAEK,oBAAoB,YAAazC,KAAKC,cACzDsC,EAAAvC,KAAKa,gBAAY,MAAA0B,SAAA,SAAAA,EAAEE,oBAAoB,WAAYzC,KAAKO,cACxDiC,EAAAxC,KAAKa,gBAAY,MAAA2B,SAAA,SAAAA,EAAEC,oBAAoB,QAASzC,KAAKO,Y,CAejDO,kBACJ,IAAI4B,EAAgB1C,KAAKsB,KAEzB,EAAG,CACCoB,EAAUA,EAAQC,U,OAElBD,GACAA,EAAQE,WAAaC,KAAKC,wBAC1BJ,EAAQE,WAAaC,KAAKE,eAG9B,OAAQL,IAAsB,MAAtBA,SAAO,SAAPA,EAAwBM,eAAehD,KAAKiD,U,uCC3L5D,MAAMC,EAAoB,kvB,MCYbC,EAAc,M,kGAmBhBhC,SACH,IAAIiC,EAAmB,MACvB,GAAIpD,KAAKgC,aAAehC,KAAKiC,UAAW,CACpCmB,EACIpD,KAAK+B,MAAMsB,OAASrD,KAAKgC,YAAYqB,OAASrD,KAAKiC,S,CAG3D,MAAMqB,EAAa,GACnB,GAAItD,KAAKiC,UAAW,CAChBqB,EAAMC,MAAQ,CACV,8BAA+B,GAAGvD,KAAKiC,YAAc,K,CAI7D,MAAO,CACHT,EAAA,OAAAgC,OAAAC,OAAA,CAAMhC,MAAO,CAAE,oBAAqB2B,IAAwBE,GACxD9B,EAAA,OAAKC,MAAM,SAASzB,KAAK+B,OACzBP,EAAA,OAAKC,MAAM,gBAAgBzB,KAAKgC,c"}