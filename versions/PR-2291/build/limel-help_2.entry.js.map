{"version":3,"names":["helpCss","Help","this","openPopover","event","stopPropagation","isOpen","onPopoverClose","render","h","open","onClose","openDirection","slot","onClick","class","trigger","value","readMoreLink","limelHelpContentCss","HelpContent","renderReadMoreLink","linkStyle","color","position","bottom","style","href","_a","target","_b","title","_c","tabindex","_d","text"],"sources":["./src/components/help/help.scss?tag=limel-help&encapsulation=shadow","./src/components/help/help.tsx","./src/components/help/limel-help-content.scss?tag=limel-help-content&encapsulation=shadow","./src/components/help/help-content.tsx"],"sourcesContent":["@use '../../style/mixins';\n\nlimel-popover {\n    display: flex;\n    --popover-surface-width: min(calc(100vw - 4rem), 22rem);\n}\n\nbutton[slot='trigger'] {\n    all: unset;\n\n    @include mixins.is-flat-clickable(\n        $color--hovered: rgb(var(--color-sky-dark)),\n        $background-color: var(--lime-elevated-surface-background-color)\n    );\n    @include mixins.visualize-keyboard-focus;\n\n    cursor: help;\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    color: rgb(var(--color-sky-default));\n    border-radius: 50%;\n    box-shadow: 0 0 0 1px rgb(var(--color-sky-lighter), 0.7);\n    width: 0.875rem;\n    height: 0.875rem;\n    font-size: 0.75rem;\n\n    &.is-open {\n        color: rgb(var(--color-white));\n        background-color: rgb(var(--color-sky-default));\n        box-shadow: var(--button-shadow-inset);\n    }\n}\n","import { Component, h, Prop, State } from '@stencil/core';\nimport { OpenDirection } from '../menu/menu.types';\nimport { Link } from '../../interface';\n\n/**\n * A good design is self-explanatory! However, sometimes concepts are\n * too complex to understand, no matter how well-designed a user interface is.\n * In such cases, contextual help can be a great way to provide users with\n * help precisely where and when users need it.\n *\n * In app interface design, providing contextual help emerges as a viable practice\n * for enhancing user experience and usability.\n * Contextual help serves as a quick-to-access guiding,\n * empowering users to more easily understand and navigate through\n * the intricacies of an application.\n *\n * Using this component designers empower users to grasp the functionality\n * of an app more effortlessly, minimizes the learning curve,\n * transforming complex features into accessible opportunities for exploration.\n * @exampleComponent limel-example-help\n * @exampleComponent limel-example-read-more\n * @exampleComponent limel-example-open-direction\n * @exampleComponent limel-example-placement\n */\n@Component({\n    tag: 'limel-help',\n    shadow: true,\n    styleUrl: 'help.scss',\n})\nexport class Help {\n    /**\n     * The markdown content that will be displayed in the popover.\n     */\n    @Prop()\n    public value: string;\n\n    /**\n     * Visualizes the trigger element. Defaults to: **?**\n     * :::important\n     * Be consistent across the product if you want to change it to a custom character.\n     * All instances of the help component should have the same trigger visualization.\n     * :::\n     */\n    @Prop()\n    public trigger: string = '?';\n\n    /**\n     * If supplied, it will render a \"Read more\" link at the bottom of the content.\n     * Even though you can add a link anywhere in the content, it is recommended to\n     * use the read more link. Because it will always be displayed at the bottom\n     * of the popover after the content, does not scroll away with the content,\n     * and it will be styled in a consistent way.\n     */\n    @Prop()\n    public readMoreLink?: Link;\n\n    /**\n     * Decides the popover's location in relation to the trigger.\n     */\n    @Prop({ reflect: true })\n    public openDirection: OpenDirection = 'top-start';\n\n    // TODO: We need to enable consumers to open the popover programmatically as well.\n    // Not just by clicking the trigger.\n    // /**\n    //  * Decides if the popover is open or not.\n    // */\n    // @Prop({reflect: true})\n    // public open: boolean = false;\n\n    @State()\n    private isOpen = false;\n\n    // private rootElement: HTMLDivElement;\n\n    // @Watch('text')\n    // public async textChanged() {\n    //     const html = await markdownToHTML(this.text, {\n    //         forceHardLineBreaks: true,\n    //     });\n    //     this.rootElement.innerHTML = html;\n    // }\n\n    // public async componentDidLoad() {\n    //     // this.textChanged();\n    // }\n\n    public render() {\n        return [\n            <limel-popover\n                open={this.isOpen}\n                onClose={this.onPopoverClose}\n                openDirection={this.openDirection}\n            >\n                <button\n                    slot=\"trigger\"\n                    onClick={this.openPopover}\n                    class={{\n                        'is-open': this.isOpen,\n                    }}\n                >\n                    {this.trigger}\n                </button>\n                <limel-help-content\n                    value={this.value}\n                    readMoreLink={this.readMoreLink}\n                />\n            </limel-popover>,\n        ];\n    }\n\n    private openPopover = (event: MouseEvent) => {\n        event.stopPropagation();\n        this.isOpen = true;\n    };\n\n    private onPopoverClose = (event: CustomEvent) => {\n        event.stopPropagation();\n        this.isOpen = false;\n    };\n}\n",":host(limel-help-content) {\n    display: flex;\n    box-sizing: border-box;\n    flex-direction: column;\n    gap: 0.5rem;\n    padding: 0.5rem 1rem;\n}\n\nlimel-markdown {\n    max-height: 30rem;\n    overflow: hidden auto;\n}\n\na {\n    transition: color 0.2s ease;\n    position: sticky;\n    bottom: 0;\n\n    text-decoration: none;\n    font-size: 0.875rem;\n\n    color: rgb(var(--color-blue-default));\n\n    &:before {\n        transition: opacity 0.2s ease, transform 0.3s ease-out;\n        content: '';\n        position: absolute;\n        inset: auto 0 0 0;\n\n        width: calc(100% - 0.5rem);\n        margin: auto;\n        height: 0.125rem;\n        border-radius: 1rem;\n\n        opacity: 0;\n        transform: scale(0.6);\n    }\n\n    &:hover {\n        color: rgb(var(--color-blue-dark));\n        &:before {\n            opacity: 0.3;\n            transform: scale(1);\n        }\n    }\n}\n","import { Component, Prop, h } from '@stencil/core';\nimport { Link } from '../../interface';\n\n/**\n * Help content\n * This is scrollable content that is placed in the popover of the Help component.\n * Moved here mostly to avoid having inlined styles in the parent component.\n * Since you cannot send styles to the Portal component, we need to have this\n * child component.\n * @private\n */\n@Component({\n    tag: 'limel-help-content',\n    shadow: true,\n    styleUrl: 'limel-help-content.scss',\n})\nexport class HelpContent {\n    @Prop()\n    public value: string;\n\n    @Prop()\n    public readMoreLink?: Link;\n\n    public render() {\n        return [\n            <limel-markdown value={this.value} />,\n            this.renderReadMoreLink(),\n        ];\n    }\n\n    private renderReadMoreLink = () => {\n        if (!this.readMoreLink) {\n            return;\n        }\n\n        const linkStyle = {\n            color: 'rgb(var(--color-sky-default))',\n            'text-decoration': 'none',\n            'font-size': '0.875rem',\n            position: 'sticky',\n            bottom: '0',\n        };\n\n        return (\n            <a\n                style={linkStyle}\n                href={this.readMoreLink?.href}\n                target={this.readMoreLink?.target}\n                title={this.readMoreLink?.title}\n                tabindex=\"0\"\n            >\n                {this.readMoreLink?.text}\n            </a>\n        );\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAU,+lC,MC6BHC,EAAI,M,yBAkFLC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,OAAS,IAAI,EAGdJ,KAAAK,eAAkBH,IACtBA,EAAMC,kBACNH,KAAKI,OAAS,KAAK,E,kCA1EE,I,+CAgBa,Y,YAWrB,K,CAgBVE,SACH,MAAO,CACHC,EAAA,iBACIC,KAAMR,KAAKI,OACXK,QAAST,KAAKK,eACdK,cAAeV,KAAKU,eAEpBH,EAAA,UACII,KAAK,UACLC,QAASZ,KAAKC,YACdY,MAAO,CACH,UAAWb,KAAKI,SAGnBJ,KAAKc,SAEVP,EAAA,sBACIQ,MAAOf,KAAKe,MACZC,aAAchB,KAAKgB,gB,aCzGvC,MAAMC,EAAsB,0lB,MCgBfC,EAAW,M,yBAcZlB,KAAAmB,mBAAqB,K,YACzB,IAAKnB,KAAKgB,aAAc,CACpB,M,CAGJ,MAAMI,EAAY,CACdC,MAAO,gCACP,kBAAmB,OACnB,YAAa,WACbC,SAAU,SACVC,OAAQ,KAGZ,OACIhB,EAAA,KACIiB,MAAOJ,EACPK,MAAMC,EAAA1B,KAAKgB,gBAAY,MAAAU,SAAA,SAAAA,EAAED,KACzBE,QAAQC,EAAA5B,KAAKgB,gBAAY,MAAAY,SAAA,SAAAA,EAAED,OAC3BE,OAAOC,EAAA9B,KAAKgB,gBAAY,MAAAc,SAAA,SAAAA,EAAED,MAC1BE,SAAS,MAERC,EAAAhC,KAAKgB,gBAAY,MAAAgB,SAAA,SAAAA,EAAEC,KACpB,E,iDA7BL3B,SACH,MAAO,CACHC,EAAA,kBAAgBQ,MAAOf,KAAKe,QAC5Bf,KAAKmB,qB"}