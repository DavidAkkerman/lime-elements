{"version":3,"names":["menuOpenSubMenuProgramaticallyCss","MenuOpenSubMenuProgramaticallyExample","this","rootItems","CascadingMenuItems","buttonClick","currentSubmenu","text","parentItem","submenuToDisplay","icon","selectedMenuItem","items","openMenu","handleSelect","event","lastSelectedItem","detail","render","h","Host","renderMenu","label","value","class","open","onSelect","onNavigateMenu","async","onCancel","slot","primary","onClick"],"sources":["./src/components/menu/examples/menu-open-sub-menu-programatically.scss?tag=limel-example-menu-open-sub-menu-programatically&encapsulation=shadow","./src/components/menu/examples/menu-open-sub-menu-programatically.tsx"],"sourcesContent":[":host(limel-example-menu-open-sub-menu-programatically) {\n    display: flex;\n    flex-direction: column;\n}\n\n.menu-container {\n    display: flex;\n    gap: 2rem;\n}\n","import {\n    MenuItem,\n    ListSeparator,\n    LimelMenuCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, State, h, Host } from '@stencil/core';\nimport { CascadingMenuItems } from './item-constants';\n\n/**\n * Opening sub-menus programatically\n *\n * It is possible to open any sub-menu in the menu-hierarchy.\n * This is done by using the parentItem property of the MenuItem class.\n * @link item-constants.ts\n */\n@Component({\n    tag: 'limel-example-menu-open-sub-menu-programatically',\n    shadow: true,\n    styleUrl: 'menu-open-sub-menu-programatically.scss',\n})\nexport class MenuOpenSubMenuProgramaticallyExample {\n    private readonly rootItems: Array<MenuItem | ListSeparator> =\n        CascadingMenuItems;\n\n    @State()\n    private items: Array<MenuItem | ListSeparator> = this.rootItems;\n\n    @State()\n    private lastSelectedItem: string;\n\n    @State()\n    private selectedMenuItem: MenuItem;\n\n    @State()\n    private openMenu: boolean = false;\n\n    public render() {\n        return (\n            <Host>\n                {this.renderMenu()}\n                <limel-example-value\n                    label=\"Last selected item\"\n                    value={this.lastSelectedItem}\n                />\n            </Host>\n        );\n    }\n\n    private renderMenu() {\n        return (\n            <div class=\"menu-container\">\n                <limel-menu\n                    items={this.items}\n                    open={this.openMenu}\n                    selectedMenuItem={this.selectedMenuItem}\n                    onSelect={this.handleSelect}\n                    onNavigateMenu={async (\n                        event: LimelMenuCustomEvent<MenuItem>\n                    ) => {\n                        if (!event.detail) {\n                            this.items = this.rootItems;\n                        }\n                    }}\n                    onCancel={() => {\n                        this.items = this.rootItems;\n                        this.openMenu = false;\n                    }}\n                >\n                    <limel-button label=\"Menu\" slot=\"trigger\" />\n                </limel-menu>\n                <limel-button\n                    label=\"Shortcut to Lists\"\n                    primary={true}\n                    onClick={this.buttonClick}\n                />\n            </div>\n        );\n    }\n\n    private buttonClick = () => {\n        const currentSubmenu: MenuItem = {\n            text: 'Lists',\n            parentItem: this.rootItems[0] as MenuItem,\n        };\n        const submenuToDisplay: MenuItem[] = [\n            {\n                text: 'Numbered list',\n                icon: 'numbered_list',\n                parentItem: currentSubmenu,\n            },\n            {\n                text: 'Bullet list',\n                icon: 'bulleted_list',\n                parentItem: currentSubmenu,\n            },\n            {\n                text: 'Checklist',\n                icon: 'todo_list',\n                parentItem: currentSubmenu,\n            },\n        ];\n        this.selectedMenuItem = currentSubmenu;\n        this.items = submenuToDisplay;\n        this.openMenu = true;\n    };\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        this.selectedMenuItem = null;\n        this.items = this.rootItems;\n        this.lastSelectedItem = event.detail.text;\n        this.openMenu = false;\n    };\n}\n"],"mappings":"uGAAA,MAAMA,EAAoC,oI,MCoB7BC,EAAqC,M,yBAC7BC,KAAAC,UACbC,EAyDIF,KAAAG,YAAc,KAClB,MAAMC,EAA2B,CAC7BC,KAAM,QACNC,WAAYN,KAAKC,UAAU,IAE/B,MAAMM,EAA+B,CACjC,CACIF,KAAM,gBACNG,KAAM,gBACNF,WAAYF,GAEhB,CACIC,KAAM,cACNG,KAAM,gBACNF,WAAYF,GAEhB,CACIC,KAAM,YACNG,KAAM,YACNF,WAAYF,IAGpBJ,KAAKS,iBAAmBL,EACxBJ,KAAKU,MAAQH,EACbP,KAAKW,SAAW,IAAI,EAGhBX,KAAAY,aAAgBC,IACpBb,KAAKS,iBAAmB,KACxBT,KAAKU,MAAQV,KAAKC,UAClBD,KAAKc,iBAAmBD,EAAME,OAAOV,KACrCL,KAAKW,SAAW,KAAK,E,WArFwBX,KAAKC,U,8EAS1B,K,CAErBe,SACH,OACIC,EAACC,EAAI,KACAlB,KAAKmB,aACNF,EAAA,uBACIG,MAAM,qBACNC,MAAOrB,KAAKc,mB,CAMpBK,aACJ,OACIF,EAAA,OAAKK,MAAM,kBACPL,EAAA,cACIP,MAAOV,KAAKU,MACZa,KAAMvB,KAAKW,SACXF,iBAAkBT,KAAKS,iBACvBe,SAAUxB,KAAKY,aACfa,eAAgBC,MACZb,IAEA,IAAKA,EAAME,OAAQ,CACff,KAAKU,MAAQV,KAAKC,S,GAG1B0B,SAAU,KACN3B,KAAKU,MAAQV,KAAKC,UAClBD,KAAKW,SAAW,KAAK,GAGzBM,EAAA,gBAAcG,MAAM,OAAOQ,KAAK,aAEpCX,EAAA,gBACIG,MAAM,oBACNS,QAAS,KACTC,QAAS9B,KAAKG,c"}