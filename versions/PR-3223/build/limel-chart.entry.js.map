{"version":3,"names":["chartCss","PERCENT","Chart","render","this","items","length","h","class","renderItems","totalValue","maxValue","reduce","acc","item","value","cumulativeRotation","map","itemId","createRandomString","percentage","startValue","type","style","color","id","text","tabIndex","renderTooltip","prefix","suffix","PERCENT_DECIMAL","formattedValue","tooltipProps","label","helperLabel","elementId","toFixed","Object","assign"],"sources":["./src/components/chart/chart.scss?tag=limel-chart&encapsulation=shadow","./src/components/chart/chart.tsx"],"sourcesContent":["*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\n:host(limel-chart) {\n    isolation: isolate;\n    box-sizing: border-box;\n}\n\n.chart {\n    flex-grow: 1;\n    width: inherit;\n    height: inherit;\n\n    &:has(.item:hover),\n    &:has(.item:focus-visible) {\n        .item {\n            opacity: 0.4;\n        }\n    }\n}\n\n.item {\n    transition:\n        background-color 0.2s ease,\n        opacity 0.4s ease;\n    cursor: help;\n\n    &:focus-visible,\n    &:hover {\n        opacity: 1 !important;\n    }\n}\n\n@import './partial-styles/_bar-gantt-scatter';\n@import './partial-styles/_pie-doughnut';\n@import './partial-styles/_stacked-bar';\n","import { Component, h, Prop } from '@stencil/core';\nimport { ChartItem } from './chart.types';\nimport { createRandomString } from '../../util/random-string';\nconst PERCENT = 100;\n\n/**\n * A chart is a graphical representation of data, in which\n * visual symbols such as such bars, dots, lines, or slices, represent\n * each data point, in comparison to others.\n *\n * @exampleComponent limel-example-chart-basic\n * @exampleComponent limel-example-chart-max-value\n * @exampleComponent limel-example-chart-orientation\n * @exampleComponent limel-example-chart-type-bar\n * @exampleComponent limel-example-chart-type-scatter\n * @exampleComponent limel-example-chart-type-doughnut\n * @exampleComponent limel-example-chart-type-pie\n * @exampleComponent limel-example-chart-type-gantt\n * @Beta\n */\n\n@Component({\n    tag: 'limel-chart',\n    shadow: true,\n    styleUrl: 'chart.scss',\n})\nexport class Chart {\n    /**\n     * List of items in the chart,\n     * each representing a data point.\n     */\n    @Prop()\n    public items!: ChartItem[];\n\n    /**\n     * Defines how items are visualized in the chart.\n     */\n    @Prop({ reflect: true })\n    public type:\n        | 'bar'\n        | 'gantt'\n        | 'stacked-bar'\n        | 'pie'\n        | 'doughnut'\n        | 'scatter' = 'stacked-bar';\n\n    /**\n     * Defines how the bars in the chart `bar` and `stacked-bar` types\n     * are stretched.\n     */\n    @Prop({ reflect: true })\n    public orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n    /**\n     * Specifies the maximum value used to calculate\n     * the size of each item in the chart.\n     * If `maxValue` is not provided, the size of items will be\n     * visualized in relation to each other.\n     */\n    @Prop({ reflect: true })\n    public maxValue?: number;\n\n    /**\n     *\n     */\n    @Prop({ reflect: true })\n    public legend: boolean = true;\n\n    public render() {\n        if (!this.items || this.items.length === 0) {\n            return;\n        }\n\n        return <div class=\"chart\">{this.renderItems()}</div>;\n    }\n\n    private renderItems() {\n        const totalValue =\n            this.maxValue ||\n            this.items.reduce((acc, item) => acc + item.value, 0);\n\n        let cumulativeRotation = 0;\n\n        return this.items.map((item) => {\n            const itemId = createRandomString();\n\n            const percentage = (item.value / totalValue) * PERCENT;\n\n            let startValue: number;\n            if (this.type === 'pie' || this.type === 'doughnut') {\n                startValue = cumulativeRotation;\n                cumulativeRotation += percentage / PERCENT;\n            } else {\n                startValue = item.startValue || 0;\n            }\n\n            return [\n                <span\n                    class=\"item\"\n                    style={{\n                        '--limel-chart-item-color': item.color,\n                        '--limel-chart-item-start-value': `${startValue}`,\n                        '--limel-chart-item-value': `${percentage}`,\n                    }}\n                    id={itemId}\n                    data-item-text={item.text}\n                    tabIndex={0}\n                />,\n                this.renderTooltip(\n                    itemId,\n                    item.text,\n                    item.value,\n                    item.prefix,\n                    item.suffix,\n                    percentage,\n                ),\n            ];\n        });\n    }\n\n    private renderTooltip(\n        itemId: string,\n        text: string,\n        value: number,\n        prefix: string = '',\n        suffix: string = '',\n        percentage: number,\n    ) {\n        const PERCENT_DECIMAL = 2;\n\n        const formattedValue = `${prefix}${value}${suffix}`;\n\n        const tooltipProps: any = {\n            label: `${text}`,\n            helperLabel: `${formattedValue}`,\n            elementId: itemId,\n        };\n\n        if (this.type !== 'bar' && this.type !== 'scatter') {\n            tooltipProps.label = `${text} (${percentage.toFixed(PERCENT_DECIMAL)}%)`;\n        }\n\n        return <limel-tooltip {...tooltipProps} />;\n    }\n}\n"],"mappings":"+FAAA,MAAMA,EAAW,++LCGjB,MAAMC,EAAU,I,MAuBHC,EAAK,M,wDAkBI,c,iBAO8B,a,oCAevB,I,CAElBC,SACH,IAAKC,KAAKC,OAASD,KAAKC,MAAMC,SAAW,EAAG,CACxC,M,CAGJ,OAAOC,EAAA,OAAKC,MAAM,SAASJ,KAAKK,c,CAG5BA,cACJ,MAAMC,EACFN,KAAKO,UACLP,KAAKC,MAAMO,QAAO,CAACC,EAAKC,IAASD,EAAMC,EAAKC,OAAO,GAEvD,IAAIC,EAAqB,EAEzB,OAAOZ,KAAKC,MAAMY,KAAKH,IACnB,MAAMI,EAASC,IAEf,MAAMC,EAAcN,EAAKC,MAAQL,EAAcT,EAE/C,IAAIoB,EACJ,GAAIjB,KAAKkB,OAAS,OAASlB,KAAKkB,OAAS,WAAY,CACjDD,EAAaL,EACbA,GAAsBI,EAAanB,C,KAChC,CACHoB,EAAaP,EAAKO,YAAc,C,CAGpC,MAAO,CACHd,EAAA,QACIC,MAAM,OACNe,MAAO,CACH,2BAA4BT,EAAKU,MACjC,iCAAkC,GAAGH,IACrC,2BAA4B,GAAGD,KAEnCK,GAAIP,EAAM,iBACMJ,EAAKY,KACrBC,SAAU,IAEdvB,KAAKwB,cACDV,EACAJ,EAAKY,KACLZ,EAAKC,MACLD,EAAKe,OACLf,EAAKgB,OACLV,GAEP,G,CAIDQ,cACJV,EACAQ,EACAX,EACAc,EAAiB,GACjBC,EAAiB,GACjBV,GAEA,MAAMW,EAAkB,EAExB,MAAMC,EAAiB,GAAGH,IAASd,IAAQe,IAE3C,MAAMG,EAAoB,CACtBC,MAAO,GAAGR,IACVS,YAAa,GAAGH,IAChBI,UAAWlB,GAGf,GAAId,KAAKkB,OAAS,OAASlB,KAAKkB,OAAS,UAAW,CAChDW,EAAaC,MAAQ,GAAGR,MAASN,EAAWiB,QAAQN,M,CAGxD,OAAOxB,EAAA,gBAAA+B,OAAAC,OAAA,GAAmBN,G"}