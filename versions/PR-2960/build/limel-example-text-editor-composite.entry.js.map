{"version":3,"names":["TextEditorCompositeExample","this","disabled","setReadonly","event","stopPropagation","readonly","detail","setRequired","required","setInvalid","invalid","setDisabled","handleLabelChange","label","handleHelperTextChange","helperText","handlePlaceholderChange","placeholder","handleChange","value","render","h","onChange","checked","style","checkValidity"],"sources":["./src/components/text-editor/examples/text-editor-composite.tsx"],"sourcesContent":["import { Component, h, State, Watch } from '@stencil/core';\n/**\n * Composite example\n */\n@Component({\n    tag: 'limel-example-text-editor-composite',\n    shadow: true,\n})\nexport class TextEditorCompositeExample {\n    @State()\n    private value: string = 'Hello, world!';\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private invalid = false;\n\n    @State()\n    private required = false;\n    private disabled = false;\n\n    @State()\n    private label: string;\n\n    @State()\n    private placeholder: string;\n\n    @State()\n    private helperText: string;\n\n    public render() {\n        return [\n            <limel-text-editor\n                label={this.label}\n                helperText={this.helperText}\n                value={this.value}\n                onChange={this.handleChange}\n                readonly={this.readonly}\n                required={this.required}\n                disabled={this.disabled}\n                invalid={this.invalid}\n                placeholder={this.placeholder}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.invalid}\n                    label=\"Invalid\"\n                    onChange={this.setInvalid}\n                />\n                <limel-checkbox\n                    checked={this.required}\n                    label=\"Required\"\n                    onChange={this.setRequired}\n                />\n                <limel-checkbox\n                    checked={this.disabled}\n                    label=\"Disabled\"\n                    onChange={this.setDisabled}\n                />\n                <hr\n                    style={{\n                        'grid-column': '1/-1',\n                    }}\n                />\n                <limel-input-field\n                    label=\"label\"\n                    value={this.label}\n                    onChange={this.handleLabelChange}\n                />\n                <limel-input-field\n                    label=\"helperText\"\n                    value={this.helperText}\n                    onChange={this.handleHelperTextChange}\n                />\n                <limel-input-field\n                    label=\"placeholder\"\n                    value={this.placeholder}\n                    onChange={this.handlePlaceholderChange}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    @Watch('required')\n    @Watch('value')\n    protected checkValidity() {\n        this.invalid = this.required && !this.value;\n    }\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n\n    private setInvalid = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.invalid = event.detail;\n    };\n\n    private setDisabled = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.disabled = event.detail;\n    };\n\n    private handleLabelChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.label = event.detail;\n    };\n\n    private handleHelperTextChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.helperText = event.detail;\n    };\n\n    private handlePlaceholderChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.placeholder = event.detail;\n    };\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"qDAQaA,EAA0B,M,yBAY3BC,KAAAC,SAAW,MA4EXD,KAAAE,YAAeC,IACnBA,EAAMC,kBACNJ,KAAKK,SAAWF,EAAMG,MAAM,EAGxBN,KAAAO,YAAeJ,IACnBA,EAAMC,kBACNJ,KAAKQ,SAAWL,EAAMG,MAAM,EAGxBN,KAAAS,WAAcN,IAClBA,EAAMC,kBACNJ,KAAKU,QAAUP,EAAMG,MAAM,EAGvBN,KAAAW,YAAeR,IACnBA,EAAMC,kBACNJ,KAAKC,SAAWE,EAAMG,MAAM,EAGxBN,KAAAY,kBAAqBT,IACzBA,EAAMC,kBACNJ,KAAKa,MAAQV,EAAMG,MAAM,EAGrBN,KAAAc,uBAA0BX,IAC9BA,EAAMC,kBACNJ,KAAKe,WAAaZ,EAAMG,MAAM,EAG1BN,KAAAgB,wBAA2Bb,IAC/BA,EAAMC,kBACNJ,KAAKiB,YAAcd,EAAMG,MAAM,EAG3BN,KAAAkB,aAAgBf,IACpBH,KAAKmB,MAAQhB,EAAMG,MAAM,E,WA1HL,gB,cAGL,M,aAGD,M,cAGC,M,0EAYZc,SACH,MAAO,CACHC,EAAA,qBACIR,MAAOb,KAAKa,MACZE,WAAYf,KAAKe,WACjBI,MAAOnB,KAAKmB,MACZG,SAAUtB,KAAKkB,aACfb,SAAUL,KAAKK,SACfG,SAAUR,KAAKQ,SACfP,SAAUD,KAAKC,SACfS,QAASV,KAAKU,QACdO,YAAajB,KAAKiB,cAEtBI,EAAA,8BACIA,EAAA,kBACIE,QAASvB,KAAKK,SACdQ,MAAM,WACNS,SAAUtB,KAAKE,cAEnBmB,EAAA,kBACIE,QAASvB,KAAKU,QACdG,MAAM,UACNS,SAAUtB,KAAKS,aAEnBY,EAAA,kBACIE,QAASvB,KAAKQ,SACdK,MAAM,WACNS,SAAUtB,KAAKO,cAEnBc,EAAA,kBACIE,QAASvB,KAAKC,SACdY,MAAM,WACNS,SAAUtB,KAAKW,cAEnBU,EAAA,MACIG,MAAO,CACH,cAAe,UAGvBH,EAAA,qBACIR,MAAM,QACNM,MAAOnB,KAAKa,MACZS,SAAUtB,KAAKY,oBAEnBS,EAAA,qBACIR,MAAM,aACNM,MAAOnB,KAAKe,WACZO,SAAUtB,KAAKc,yBAEnBO,EAAA,qBACIR,MAAM,cACNM,MAAOnB,KAAKiB,YACZK,SAAUtB,KAAKgB,2BAGvBK,EAAA,uBAAqBF,MAAOnB,KAAKmB,Q,CAM/BM,gBACNzB,KAAKU,QAAUV,KAAKQ,WAAaR,KAAKmB,K"}