{"version":3,"names":["SearchMenuItems","searchValue","menuItems","toLowerCase","flattenedItems","flattenMenuItems","filter","i","_a","text","includes","flatten","menuItem","push","Array","isArray","items","subItem","MenuSubItemsExample","this","icon","separator","from","_value","index","handleSearch","async","queryString","handleSelect","event","lastSelectedItem","detail","render","h","searcher","onSelect","label","slot","value","_b"],"sources":["./src/components/menu/examples/subitems-search.ts","./src/components/menu/examples/menu-searchable.tsx"],"sourcesContent":["import { MenuItem, ListSeparator } from '@limetech/lime-elements';\n\nexport function SearchMenuItems(\n    searchValue: string,\n    menuItems: Array<MenuItem | ListSeparator>\n): MenuItem[] {\n    if (!searchValue) {\n        return [];\n    }\n\n    searchValue = searchValue?.toLowerCase();\n    const flattenedItems = flattenMenuItems(menuItems);\n\n    return flattenedItems.filter(\n        (i) =>\n            !('separator' in i) && i.text?.toLowerCase().includes(searchValue)\n    );\n}\n\nfunction flattenMenuItems(\n    menuItems: Array<MenuItem | ListSeparator>\n): MenuItem[] {\n    const flattenedItems: MenuItem[] = [];\n\n    function flatten(menuItem: MenuItem) {\n        flattenedItems.push(menuItem);\n\n        if (Array.isArray(menuItem.items)) {\n            for (const subItem of menuItem.items) {\n                if (!('separator' in subItem)) {\n                    flatten(subItem as MenuItem);\n                }\n            }\n        }\n    }\n\n    for (const menuItem of menuItems) {\n        if (!('separator' in menuItem)) {\n            flatten(menuItem as MenuItem);\n        }\n    }\n\n    return flattenedItems;\n}\n","import {\n    MenuItem,\n    ListSeparator,\n    LimelMenuCustomEvent,\n} from '@limetech/lime-elements';\nimport { Component, State, h } from '@stencil/core';\nimport { SearchMenuItems } from './subitems-search';\n\n/**\n * Searchable items\n * @link subitems-search.ts\n */\n@Component({\n    tag: 'limel-example-menu-searchable',\n    shadow: true,\n})\nexport class MenuSubItemsExample {\n    private items: Array<MenuItem | ListSeparator> = [\n        {\n            text: 'Format',\n            items: [\n                {\n                    text: 'Bold',\n                    icon: 'bold',\n                },\n                {\n                    text: 'Italic',\n                    icon: 'italic',\n                },\n                {\n                    text: 'Bullets and numbering',\n                    icon: 'bulleted_list',\n                    items: [\n                        {\n                            text: 'Numbered list',\n                            icon: 'numbered_list',\n                        },\n                        {\n                            text: 'Bullet list',\n                            icon: 'bulleted_list',\n                        },\n                        {\n                            text: 'Checklist',\n                            icon: 'todo_list',\n                        },\n                    ],\n                },\n            ],\n        },\n        {\n            text: 'Edit',\n            items: [\n                {\n                    text: 'Copy',\n                    icon: 'copy',\n                },\n                {\n                    text: 'Cut',\n                    icon: 'cut',\n                },\n                { separator: true },\n                {\n                    text: 'Paste',\n                    icon: 'paste',\n                },\n            ],\n        },\n        {\n            text: 'Long sub list',\n            items: Array.from(Array(50), (_value, index) => {\n                return {\n                    text: `Item ${index + 1}`,\n                };\n            }),\n        },\n    ];\n\n    @State()\n    private lastSelectedItem: MenuItem;\n\n    public render() {\n        return [\n            <limel-menu\n                items={this.items}\n                searcher={this.handleSearch}\n                onSelect={this.handleSelect}\n            >\n                <limel-button label=\"Menu\" slot=\"trigger\" />\n            </limel-menu>,\n            <limel-example-value\n                label=\"Last selected item\"\n                value={this.lastSelectedItem?.text ?? ''}\n            />,\n        ];\n    }\n\n    private handleSearch = async (queryString: string) => {\n        return SearchMenuItems(queryString, this.items);\n    };\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        this.lastSelectedItem = event.detail;\n    };\n}\n"],"mappings":"wDAEgBA,EACZC,EACAC,GAEA,IAAKD,EAAa,CACd,MAAO,E,CAGXA,EAAcA,IAAW,MAAXA,SAAW,SAAXA,EAAaE,cAC3B,MAAMC,EAAiBC,EAAiBH,GAExC,OAAOE,EAAeE,QACjBC,IAAC,IAAAC,EACE,QAAE,cAAeD,MAAMC,EAAAD,EAAEE,QAAI,MAAAD,SAAA,SAAAA,EAAEL,cAAcO,SAAST,GAAY,GAE9E,CAEA,SAASI,EACLH,GAEA,MAAME,EAA6B,GAEnC,SAASO,EAAQC,GACbR,EAAeS,KAAKD,GAEpB,GAAIE,MAAMC,QAAQH,EAASI,OAAQ,CAC/B,IAAK,MAAMC,KAAWL,EAASI,MAAO,CAClC,KAAM,cAAeC,GAAU,CAC3BN,EAAQM,E,IAMxB,IAAK,MAAML,KAAYV,EAAW,CAC9B,KAAM,cAAeU,GAAW,CAC5BD,EAAQC,E,EAIhB,OAAOR,CACX,C,MC3Bac,EAAmB,M,yBACpBC,KAAAH,MAAyC,CAC7C,CACIP,KAAM,SACNO,MAAO,CACH,CACIP,KAAM,OACNW,KAAM,QAEV,CACIX,KAAM,SACNW,KAAM,UAEV,CACIX,KAAM,wBACNW,KAAM,gBACNJ,MAAO,CACH,CACIP,KAAM,gBACNW,KAAM,iBAEV,CACIX,KAAM,cACNW,KAAM,iBAEV,CACIX,KAAM,YACNW,KAAM,iBAM1B,CACIX,KAAM,OACNO,MAAO,CACH,CACIP,KAAM,OACNW,KAAM,QAEV,CACIX,KAAM,MACNW,KAAM,OAEV,CAAEC,UAAW,MACb,CACIZ,KAAM,QACNW,KAAM,WAIlB,CACIX,KAAM,gBACNO,MAAOF,MAAMQ,KAAKR,MAAM,KAAK,CAACS,EAAQC,KAC3B,CACHf,KAAM,QAAQe,EAAQ,UAyB9BL,KAAAM,aAAeC,MAAOC,GACnB3B,EAAgB2B,EAAaR,KAAKH,OAGrCG,KAAAS,aAAgBC,IACpBV,KAAKW,iBAAmBD,EAAME,MAAM,E,gCArBjCC,S,QACH,MAAO,CACHC,EAAA,cACIjB,MAAOG,KAAKH,MACZkB,SAAUf,KAAKM,aACfU,SAAUhB,KAAKS,cAEfK,EAAA,gBAAcG,MAAM,OAAOC,KAAK,aAEpCJ,EAAA,uBACIG,MAAM,qBACNE,OAAOC,GAAA/B,EAAAW,KAAKW,oBAAgB,MAAAtB,SAAA,SAAAA,EAAEC,QAAI,MAAA8B,SAAA,EAAAA,EAAI,K"}