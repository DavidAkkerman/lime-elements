{"version":3,"names":["breadcrumbsCss","Breadcrumbs","this","renderSteps","items","allStepsWithoutLast","slice","isButtonStyling","map","renderButtons","renderLinks","h","icon","label","name","onClick","handleClick","href","url","size","renderLastStep","lastItem","event","altKey","ctrlKey","metaKey","shiftKey","preventDefault","alert","render"],"sources":["./src/components/breadcrumbs/breadcrumbs.scss?tag=limel-breadcrumbs&encapsulation=shadow","./src/components/breadcrumbs/breadcrumbs.tsx"],"sourcesContent":[null,"import { Component, h, Prop } from '@stencil/core';\nimport { Items } from './breadcrumbs.types';\n/**\n * A Breadcrumb consists of a list of distinct \"places\" that user has gone through,\n * before ending up where they are right now, in a website or an application.\n *\n * These \"places\" can be for example _pages_ of a website, which are hierarchically\n * before the current page that the user is looking at.\n * They could also be _steps_ which the user has gone through, which perhaps have no\n * hierarchal relation with each other, but has eventually led the user \"here\".\n *\n * :::note\n * - Where the user currently is, is always the last step of the breadcrumb.\n * - A breadcrumbs never shows where users can go after this place.\n * It only illustrates where user has been before ending up here.\n * If the path that a user can take is not changing and if next steps are clear,\n * you can use the [Progress flow component](#/component/limel-progress-flow) instead.\n * :::\n *\n * Breadcrumbs are often placed horizontally before the main content of the current screen.\n * @exampleComponent limel-example-breadcrumbs-basic\n */\n\n@Component({\n    tag: 'limel-breadcrumbs',\n    shadow: true,\n    styleUrl: 'breadcrumbs.scss',\n})\nexport class Breadcrumbs {\n    @Prop()\n    public items: Items[];\n\n    @Prop()\n    public isButtonStyling: boolean = false;\n\n    public render() {\n        return (\n            <nav aria-label=\"Breadcrumb\">\n                <ol>\n                    <li>{this.renderSteps(this.items)}</li>\n                    <li>{this.renderLastStep(this.items)}</li>\n                </ol>\n            </nav>\n        );\n    }\n\n    private renderSteps = (items) => {\n        const allStepsWithoutLast = items.slice(0, -1);\n\n        if (this.isButtonStyling) {\n            return allStepsWithoutLast.map(this.renderButtons);\n        }\n\n        return allStepsWithoutLast.map(this.renderLinks);\n    };\n\n    private renderButtons = (items) => {\n        return (\n            <limel-button\n                icon={items.icon}\n                label={items.name}\n                onClick={this.handleClick}\n            />\n        );\n    };\n\n    private renderLinks = (items) => {\n        return (\n            <a href={items.url}>\n                <limel-icon name={items.icon} size=\"x-small\" />\n                <span>{items.name}</span>\n            </a>\n        );\n    };\n\n    private renderLastStep = (items) => {\n        const lastItem = items.slice(-1);\n\n        return [\n            <limel-icon name={lastItem[0].icon} size=\"x-small\" />,\n            <span aria-current=\"page\">{lastItem[0].name}</span>,\n        ];\n    };\n\n    private handleClick = (event: PointerEvent) => {\n        if (\n            !(event.altKey || event.ctrlKey || event.metaKey || event.shiftKey)\n        ) {\n            event.preventDefault();\n            alert(\n                \"No modifier key pressed. Link should open in current window, but we might want to handle the navigation with our application's router, to avoid reloading the whole application (if we're in a single page app, like Lime CRM Web Client).\\n\\nTry holding down a modifier key, like Shift, while clicking.\"\n            );\n        }\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAiB,G,MC4BVC,EAAW,M,yBAkBZC,KAAAC,YAAeC,IACnB,MAAMC,EAAsBD,EAAME,MAAM,GAAI,GAE5C,GAAIJ,KAAKK,gBAAiB,CACtB,OAAOF,EAAoBG,IAAIN,KAAKO,c,CAGxC,OAAOJ,EAAoBG,IAAIN,KAAKQ,YAAY,EAG5CR,KAAAO,cAAiBL,GAEjBO,EAAA,gBACIC,KAAMR,EAAMQ,KACZC,MAAOT,EAAMU,KACbC,QAASb,KAAKc,cAKlBd,KAAAQ,YAAeN,GAEfO,EAAA,KAAGM,KAAMb,EAAMc,KACXP,EAAA,cAAYG,KAAMV,EAAMQ,KAAMO,KAAK,YACnCR,EAAA,YAAOP,EAAMU,OAKjBZ,KAAAkB,eAAkBhB,IACtB,MAAMiB,EAAWjB,EAAME,OAAO,GAE9B,MAAO,CACHK,EAAA,cAAYG,KAAMO,EAAS,GAAGT,KAAMO,KAAK,YACzCR,EAAA,uBAAmB,QAAQU,EAAS,GAAGP,MAC1C,EAGGZ,KAAAc,YAAeM,IACnB,KACMA,EAAMC,QAAUD,EAAME,SAAWF,EAAMG,SAAWH,EAAMI,UAC5D,CACEJ,EAAMK,iBACNC,MACI,6S,6CAzDsB,K,CAE3BC,SACH,OACIlB,EAAA,oBAAgB,cACZA,EAAA,UACIA,EAAA,UAAKT,KAAKC,YAAYD,KAAKE,QAC3BO,EAAA,UAAKT,KAAKkB,eAAelB,KAAKE,S"}