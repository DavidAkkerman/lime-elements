import{r as i,h as e}from"./index-6156b4fd.js";const n="";const t=class{constructor(n){i(this,n);this.renderSteps=i=>{const e=i.slice(0,-1);if(this.isButtonStyling){return e.map(this.renderButtons)}return e.map(this.renderLinks)};this.renderButtons=i=>e("limel-button",{icon:i.icon,label:i.name,onClick:this.handleClick});this.renderLinks=i=>e("a",{href:i.url},e("limel-icon",{name:i.icon,size:"x-small"}),e("span",null,i.name));this.renderLastStep=i=>{const n=i.slice(-1);return[e("limel-icon",{name:n[0].icon,size:"x-small"}),e("span",{"aria-current":"page"},n[0].name)]};this.handleClick=i=>{if(!(i.altKey||i.ctrlKey||i.metaKey||i.shiftKey)){i.preventDefault();alert("No modifier key pressed. Link should open in current window, but we might want to handle the navigation with our application's router, to avoid reloading the whole application (if we're in a single page app, like Lime CRM Web Client).\n\nTry holding down a modifier key, like Shift, while clicking.")}};this.items=undefined;this.isButtonStyling=false}render(){return e("nav",{"aria-label":"Breadcrumb"},e("ol",null,e("li",null,this.renderSteps(this.items)),e("li",null,this.renderLastStep(this.items))))}};t.style=n;export{t as limel_breadcrumbs};
//# sourceMappingURL=limel-breadcrumbs.entry.js.map