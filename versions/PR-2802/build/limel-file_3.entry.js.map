{"version":3,"names":["DEFAULT_ICON_BACKGROUND_COLOR","CALENDAR_ICON_BACKGROUND_COLOR","EMAIL_ICON_BACKGROUND_COLOR","HTML_ICON_BACKGROUND_COLOR","TEXT_ICON_BACKGROUND_COLOR","EXCEL_ICON_BACKGROUND_COLOR","POWERPOINT_ICON_BACKGROUND_COLOR","WORD_ICON_BACKGROUND_COLOR","IMAGE_ICON_BACKGROUND_COLOR","VECTOR_GRAPHIC_ICON_BACKGROUND_COLOR","PRESENTATION_BACKGROUND_COLOR","DOCUMENT_ICON_BACKGROUND_COLOR","SPREADSHEET_ICON_BACKGROUND_COLOR","AUDIO_ICON_BACKGROUND_COLOR","VIDEO_ICON_BACKGROUND_COLOR","COMPRESSED_ICON_BACKGROUND_COLOR","MESSAGE_ICON_BACKGROUND_COLOR","PDF_ICON_BACKGROUND_COLOR","DATA_ICON_BACKGROUND_COLOR","filetypeBackgroundColorTable","msg","ics","ical","icalendar","ifb","email","eml","oft","ost","emlx","html","xml","txt","rtf","dot","doc","docx","dotx","docm","dotm","odt","pages","pdf","ppt","pot","pps","pptx","pptm","potx","potm","ppam","ppsx","ppsm","sldx","sldm","odp","key","xls","xlsx","csv","numbers","bmp","jpg","jpeg","heic","png","gif","psd","ai","svg","svgz","ep","eps","sketch","mp3","wav","wma","ogg","flv","h264","mov","mp4","mwv","zip","rar","json","yaml","sql","db","dbf","getIconBackgroundColorForFile","extension","toLowerCase","DEFAULT_ICON_FILL_COLOR","CALENDAR_ICON_FILL_COLOR","EMAIL_ICON_FILL_COLOR","HTML_ICON_FILL_COLOR","TEXT_ICON_FILL_COLOR","EXCEL_ICON_FILL_COLOR","POWERPOINT_ICON_FILL_COLOR","WORD_ICON_FILL_COLOR","IMAGE_ICON_FILL_COLOR","VECTOR_GRAPHIC_FILL_COLOR","PRESENTATION_ICON_FILL_COLOR","DOCUMENT_ICON_FILL_COLOR","SPREADSHEET_ICON_FILL_COLOR","AUDIO_ICON_FILL_COLOR","VIDEO_ICON_FILL_COLOR","COMPRESSED_ICON_FILL_COLOR","MESSAGE_ICON_FILL_COLOR","PDF_ICON_FILL_COLOR","DATA_ICON_FILL_COLOR","filetypeFillColorTable","getIconFillColorForFile","DEFAULT_ICON","CALENDAR_ICON","EMAIL_ICON","HTML_ICON","TEXT_ICON","EXCEL_ICON","WORD_ICON","POWERPOINT_ICON","IMAGE_ICON","PHOTO_ICON","VECTOR_GRAPHIC_ICON","PRESENTATION_ICON","DOCUMENT_ICON","SPREADSHEET_ICON","AUDIO_ICON","VIDEO_ICON","COMPRESSED_ICON","MESSAGE_ICON","DATA_ICON","filetypeIconTable","avi","getIconForFile","getFileIcon","file","name","getIconName","icon","getExtension","getFileColor","color","getIconColor","iconColor","getFileBackgroundColor","backgroundColor","getIconBackgroundColor","iconBackgroundColor","getFileExtensionTitle","filename","split","pop","fileCss","CHIP_SET_TAG_NAME","DEFAULT_FILE_CHIP","id","text","removable","File","this","handleNewFiles","event","preventAndStop","change","emit","detail","handleChipSetChange","stopPropagation","length","chipSet","blur","required","mdcTextField","valid","handleChipInteract","preventDefault","interact","connectedCallback","initialize","componentDidLoad","element","shadowRoot","querySelector","MDCTextField","disconnectedCallback","destroy","render","h","Host","onNewFiles","disabled","readonly","value","accept","renderChipSet","invalid","label","leadingIcon","language","onChange","onInteract","type","chipArray","title","getTranslation","href","translate","get","createFileInfo","limeFile","createRandomString","contentType","size","fileContent","Object","assign","fileDropzoneCss","FileDropzone","handleDrop","files","Array","from","dataTransfer","newFiles","map","filter","isAccepted","undefined","acceptList","some","acceptedType","endsWith","baseType","startsWith","onDrop","onDragOver","handleDragOver","FileInput","fileInputId","handleClick","triggerFileDialog","handleKeyUp","code","handleFileChange","fileInput","getElementById","onClick","onKeyUp","onKeyDown","handleKeyDown","hidden","click"],"sources":["./src/components/file/icon-background-colors.ts","./src/components/file/icon-fill-colors.ts","./src/components/file/icons.ts","./src/util/file-metadata.ts","./src/components/file/file.scss?tag=limel-file&encapsulation=shadow","./src/components/file/file.tsx","./src/util/files.ts","./src/components/file-dropzone/file-dropzone.scss?tag=limel-file-dropzone&encapsulation=shadow","./src/components/file-dropzone/file-dropzone.tsx","./src/components/file-input/file-input.tsx"],"sourcesContent":["const DEFAULT_ICON_BACKGROUND_COLOR = 'rgba(var(--color-gray-lighter), 0.4)';\nconst CALENDAR_ICON_BACKGROUND_COLOR = 'rgba(var(--color-cyan-lighter), 0.4)';\nconst EMAIL_ICON_BACKGROUND_COLOR = 'rgba(var(--color-gray-lighter), 0.4)';\nconst HTML_ICON_BACKGROUND_COLOR = 'rgba(var(--color-blue-lighter), 0.4)';\nconst TEXT_ICON_BACKGROUND_COLOR = 'rgba(var(--color-yellow-lighter), 0.4)';\nconst EXCEL_ICON_BACKGROUND_COLOR = 'rgba(var(--color-green-lighter), 0.4)';\nconst POWERPOINT_ICON_BACKGROUND_COLOR =\n    'rgba(var(--color-coral-lighter), 0.4)';\nconst WORD_ICON_BACKGROUND_COLOR = 'rgba(var(--color-sky-lighter), 0.4)';\nconst IMAGE_ICON_BACKGROUND_COLOR = 'rgba(var(--color-lime-lighter), 0.4)';\nconst VECTOR_GRAPHIC_ICON_BACKGROUND_COLOR =\n    'rgba(var(--color-magenta-lighter), 0.4)';\nconst PRESENTATION_BACKGROUND_COLOR = 'rgba(var(--color-blue-lighter), 0.4)';\nconst DOCUMENT_ICON_BACKGROUND_COLOR = 'rgba(var(--color-orange-lighter), 0.4)';\nconst SPREADSHEET_ICON_BACKGROUND_COLOR =\n    'rgba(var(--color-green-lighter), 0.4)';\nconst AUDIO_ICON_BACKGROUND_COLOR = 'rgba(var(--color-indigo-lighter), 0.4)';\nconst VIDEO_ICON_BACKGROUND_COLOR = 'rgba(var(--color-red-lighter), 0.4)';\nconst COMPRESSED_ICON_BACKGROUND_COLOR =\n    'rgba(var(--color-orange-lighter), 0.4)';\nconst MESSAGE_ICON_BACKGROUND_COLOR = 'rgba(var(--color-yellow-lighter), 0.4)';\nconst PDF_ICON_BACKGROUND_COLOR = 'rgba(var(--color-red-lighter), 0.4)';\nconst DATA_ICON_BACKGROUND_COLOR = 'rgba(var(--color-glaucous-lighter), 0.4)';\n\nconst filetypeBackgroundColorTable: Record<string, string> = {\n    // Message\n    msg: MESSAGE_ICON_BACKGROUND_COLOR,\n\n    // Calendar\n    ics: CALENDAR_ICON_BACKGROUND_COLOR,\n    ical: CALENDAR_ICON_BACKGROUND_COLOR,\n    icalendar: CALENDAR_ICON_BACKGROUND_COLOR,\n\n    // Email\n    ifb: CALENDAR_ICON_BACKGROUND_COLOR,\n    email: EMAIL_ICON_BACKGROUND_COLOR,\n    eml: EMAIL_ICON_BACKGROUND_COLOR,\n    oft: EMAIL_ICON_BACKGROUND_COLOR,\n    ost: EMAIL_ICON_BACKGROUND_COLOR,\n    emlx: EMAIL_ICON_BACKGROUND_COLOR,\n\n    // Web\n    html: HTML_ICON_BACKGROUND_COLOR,\n    xml: HTML_ICON_BACKGROUND_COLOR,\n\n    // Editable text\n    txt: TEXT_ICON_BACKGROUND_COLOR,\n    rtf: TEXT_ICON_BACKGROUND_COLOR,\n\n    // Editable document\n    dot: WORD_ICON_BACKGROUND_COLOR,\n    doc: WORD_ICON_BACKGROUND_COLOR,\n    docx: WORD_ICON_BACKGROUND_COLOR,\n    dotx: WORD_ICON_BACKGROUND_COLOR,\n    docm: WORD_ICON_BACKGROUND_COLOR,\n    dotm: WORD_ICON_BACKGROUND_COLOR,\n    odt: DOCUMENT_ICON_BACKGROUND_COLOR,\n    pages: DOCUMENT_ICON_BACKGROUND_COLOR,\n\n    // Portable document\n    pdf: PDF_ICON_BACKGROUND_COLOR,\n\n    // Presentation\n    ppt: POWERPOINT_ICON_BACKGROUND_COLOR,\n    pot: POWERPOINT_ICON_BACKGROUND_COLOR,\n    pps: POWERPOINT_ICON_BACKGROUND_COLOR,\n    pptx: POWERPOINT_ICON_BACKGROUND_COLOR,\n    pptm: POWERPOINT_ICON_BACKGROUND_COLOR,\n    potx: POWERPOINT_ICON_BACKGROUND_COLOR,\n    potm: POWERPOINT_ICON_BACKGROUND_COLOR,\n    ppam: POWERPOINT_ICON_BACKGROUND_COLOR,\n    ppsx: POWERPOINT_ICON_BACKGROUND_COLOR,\n    ppsm: POWERPOINT_ICON_BACKGROUND_COLOR,\n    sldx: POWERPOINT_ICON_BACKGROUND_COLOR,\n    sldm: POWERPOINT_ICON_BACKGROUND_COLOR,\n    odp: PRESENTATION_BACKGROUND_COLOR,\n    key: PRESENTATION_BACKGROUND_COLOR,\n\n    // Spreadsheet\n    xls: EXCEL_ICON_BACKGROUND_COLOR,\n    xlsx: EXCEL_ICON_BACKGROUND_COLOR,\n    csv: DEFAULT_ICON_BACKGROUND_COLOR,\n    numbers: SPREADSHEET_ICON_BACKGROUND_COLOR,\n\n    // Image\n    bmp: IMAGE_ICON_BACKGROUND_COLOR,\n    jpg: IMAGE_ICON_BACKGROUND_COLOR,\n    jpeg: IMAGE_ICON_BACKGROUND_COLOR,\n    heic: IMAGE_ICON_BACKGROUND_COLOR,\n    png: IMAGE_ICON_BACKGROUND_COLOR,\n    gif: IMAGE_ICON_BACKGROUND_COLOR,\n\n    // Editable image\n    psd: PRESENTATION_BACKGROUND_COLOR,\n    ai: DOCUMENT_ICON_BACKGROUND_COLOR,\n\n    // Vector graphic\n    svg: VECTOR_GRAPHIC_ICON_BACKGROUND_COLOR,\n    svgz: VECTOR_GRAPHIC_ICON_BACKGROUND_COLOR,\n    ep: VECTOR_GRAPHIC_ICON_BACKGROUND_COLOR,\n    eps: VECTOR_GRAPHIC_ICON_BACKGROUND_COLOR,\n    sketch: VECTOR_GRAPHIC_ICON_BACKGROUND_COLOR,\n\n    // Audio\n    mp3: AUDIO_ICON_BACKGROUND_COLOR,\n    wav: AUDIO_ICON_BACKGROUND_COLOR,\n    wma: AUDIO_ICON_BACKGROUND_COLOR,\n    ogg: AUDIO_ICON_BACKGROUND_COLOR,\n\n    // Video\n    flv: VIDEO_ICON_BACKGROUND_COLOR,\n    h264: VIDEO_ICON_BACKGROUND_COLOR,\n    mov: VIDEO_ICON_BACKGROUND_COLOR,\n    mp4: VIDEO_ICON_BACKGROUND_COLOR,\n    mwv: VIDEO_ICON_BACKGROUND_COLOR,\n\n    // Compressed:\n    zip: COMPRESSED_ICON_BACKGROUND_COLOR,\n    '7z': COMPRESSED_ICON_BACKGROUND_COLOR,\n    rar: COMPRESSED_ICON_BACKGROUND_COLOR,\n\n    // Data\n    json: DATA_ICON_BACKGROUND_COLOR,\n    yaml: DATA_ICON_BACKGROUND_COLOR,\n    sql: DATA_ICON_BACKGROUND_COLOR,\n    db: DATA_ICON_BACKGROUND_COLOR,\n    dbf: DATA_ICON_BACKGROUND_COLOR,\n};\n\nexport function getIconBackgroundColorForFile(extension: string): string {\n    return (\n        filetypeBackgroundColorTable[extension.toLowerCase()] ||\n        DEFAULT_ICON_BACKGROUND_COLOR\n    );\n}\n","const DEFAULT_ICON_FILL_COLOR = 'rgb(var(--color-gray-dark))';\nconst CALENDAR_ICON_FILL_COLOR = 'rgb(var(--color-cyan-dark))';\nconst EMAIL_ICON_FILL_COLOR = 'rgb(var(--color-gray-dark))';\nconst HTML_ICON_FILL_COLOR = 'rgb(var(--color-blue-dark))';\nconst TEXT_ICON_FILL_COLOR = 'rgb(var(--color-yellow-darker))';\nconst EXCEL_ICON_FILL_COLOR = 'rgb(var(--color-green-dark))';\nconst POWERPOINT_ICON_FILL_COLOR = 'rgb(var(--color-coral-dark))';\nconst WORD_ICON_FILL_COLOR = 'rgb(var(--color-sky-dark))';\nconst IMAGE_ICON_FILL_COLOR = 'rgb(var(--color-lime-dark))';\nconst VECTOR_GRAPHIC_FILL_COLOR = 'rgb(var(--color-magenta-dark))';\nconst PRESENTATION_ICON_FILL_COLOR = 'rgb(var(--color-blue-dark))';\nconst DOCUMENT_ICON_FILL_COLOR = 'rgb(var(--color-orange-dark))';\nconst SPREADSHEET_ICON_FILL_COLOR = 'rgb(var(--color-green-dark))';\nconst AUDIO_ICON_FILL_COLOR = 'rgb(var(--color-indigo-dark))';\nconst VIDEO_ICON_FILL_COLOR = 'rgb(var(--color-red-dark))';\nconst COMPRESSED_ICON_FILL_COLOR = 'rgb(var(--color-brown-default))';\nconst MESSAGE_ICON_FILL_COLOR = 'rgb(var(--color-yellow-dark))';\nconst PDF_ICON_FILL_COLOR = 'rgb(var(--color-red-dark))';\nconst DATA_ICON_FILL_COLOR = 'rgb(var(--color-glaucous-dark))';\n\nconst filetypeFillColorTable: Record<string, string> = {\n    // Message\n    msg: MESSAGE_ICON_FILL_COLOR,\n\n    // Calendar\n    ics: CALENDAR_ICON_FILL_COLOR,\n    ical: CALENDAR_ICON_FILL_COLOR,\n    icalendar: CALENDAR_ICON_FILL_COLOR,\n    ifb: CALENDAR_ICON_FILL_COLOR,\n\n    // Email\n    email: EMAIL_ICON_FILL_COLOR,\n    eml: EMAIL_ICON_FILL_COLOR,\n    oft: EMAIL_ICON_FILL_COLOR,\n    ost: EMAIL_ICON_FILL_COLOR,\n    emlx: EMAIL_ICON_FILL_COLOR,\n\n    // Web\n    html: HTML_ICON_FILL_COLOR,\n    xml: HTML_ICON_FILL_COLOR,\n\n    // Editable text\n    txt: TEXT_ICON_FILL_COLOR,\n    rtf: TEXT_ICON_FILL_COLOR,\n\n    // Editable document\n    dot: WORD_ICON_FILL_COLOR,\n    doc: WORD_ICON_FILL_COLOR,\n    docx: WORD_ICON_FILL_COLOR,\n    dotx: WORD_ICON_FILL_COLOR,\n    docm: WORD_ICON_FILL_COLOR,\n    dotm: WORD_ICON_FILL_COLOR,\n    odt: DOCUMENT_ICON_FILL_COLOR,\n    pages: DOCUMENT_ICON_FILL_COLOR,\n\n    // Portable document\n    pdf: PDF_ICON_FILL_COLOR,\n\n    // Presentation\n    ppt: POWERPOINT_ICON_FILL_COLOR,\n    pot: POWERPOINT_ICON_FILL_COLOR,\n    pps: POWERPOINT_ICON_FILL_COLOR,\n    pptx: POWERPOINT_ICON_FILL_COLOR,\n    pptm: POWERPOINT_ICON_FILL_COLOR,\n    potx: POWERPOINT_ICON_FILL_COLOR,\n    potm: POWERPOINT_ICON_FILL_COLOR,\n    ppam: POWERPOINT_ICON_FILL_COLOR,\n    ppsx: POWERPOINT_ICON_FILL_COLOR,\n    ppsm: POWERPOINT_ICON_FILL_COLOR,\n    sldx: POWERPOINT_ICON_FILL_COLOR,\n    sldm: POWERPOINT_ICON_FILL_COLOR,\n    odp: PRESENTATION_ICON_FILL_COLOR,\n    key: PRESENTATION_ICON_FILL_COLOR,\n\n    // Spreadsheet\n    xls: EXCEL_ICON_FILL_COLOR,\n    xlsx: EXCEL_ICON_FILL_COLOR,\n    csv: DEFAULT_ICON_FILL_COLOR,\n    numbers: SPREADSHEET_ICON_FILL_COLOR,\n\n    // Image\n    bmp: IMAGE_ICON_FILL_COLOR,\n    jpg: IMAGE_ICON_FILL_COLOR,\n    jpeg: IMAGE_ICON_FILL_COLOR,\n    heic: IMAGE_ICON_FILL_COLOR,\n    png: IMAGE_ICON_FILL_COLOR,\n    gif: IMAGE_ICON_FILL_COLOR,\n\n    // Editable image\n    psd: PRESENTATION_ICON_FILL_COLOR,\n    ai: DOCUMENT_ICON_FILL_COLOR,\n\n    // Vector graphic\n    svg: VECTOR_GRAPHIC_FILL_COLOR,\n    svgz: VECTOR_GRAPHIC_FILL_COLOR,\n    ep: VECTOR_GRAPHIC_FILL_COLOR,\n    eps: VECTOR_GRAPHIC_FILL_COLOR,\n    sketch: VECTOR_GRAPHIC_FILL_COLOR,\n\n    // Audio\n    mp3: AUDIO_ICON_FILL_COLOR,\n    wav: AUDIO_ICON_FILL_COLOR,\n    wma: AUDIO_ICON_FILL_COLOR,\n    ogg: AUDIO_ICON_FILL_COLOR,\n\n    // Video\n    flv: VIDEO_ICON_FILL_COLOR,\n    h264: VIDEO_ICON_FILL_COLOR,\n    mov: VIDEO_ICON_FILL_COLOR,\n    mp4: VIDEO_ICON_FILL_COLOR,\n    mwv: VIDEO_ICON_FILL_COLOR,\n\n    // Compressed\n    zip: COMPRESSED_ICON_FILL_COLOR,\n    '7z': COMPRESSED_ICON_FILL_COLOR,\n    rar: COMPRESSED_ICON_FILL_COLOR,\n\n    // Data\n    json: DATA_ICON_FILL_COLOR,\n    yaml: DATA_ICON_FILL_COLOR,\n    sql: DATA_ICON_FILL_COLOR,\n    db: DATA_ICON_FILL_COLOR,\n    dbf: DATA_ICON_FILL_COLOR,\n};\n\nexport function getIconFillColorForFile(extension: string): string {\n    return (\n        filetypeFillColorTable[extension.toLowerCase()] ||\n        DEFAULT_ICON_FILL_COLOR\n    );\n}\n","const DEFAULT_ICON = 'file';\nconst CALENDAR_ICON = 'tear_off_calendar';\nconst EMAIL_ICON = 'email';\nconst HTML_ICON = 'internet';\nconst TEXT_ICON = 'text_box';\nconst EXCEL_ICON = 'ms_excel_copyrighted';\nconst WORD_ICON = 'ms_word_copyrighted';\nconst POWERPOINT_ICON = 'ms_powerpoint_copyrighted';\nconst IMAGE_ICON = 'picture';\nconst PHOTO_ICON = 'camera';\nconst VECTOR_GRAPHIC_ICON = 'vector';\nconst PRESENTATION_ICON = 'presentation_filled';\nconst DOCUMENT_ICON = 'overview_pages_2';\nconst SPREADSHEET_ICON = 'data_sheet';\nconst AUDIO_ICON = 'audio_wave';\nconst VIDEO_ICON = 'video_file';\nconst COMPRESSED_ICON = 'condom_package';\nconst MESSAGE_ICON = 'ms_outlook_copyrighted';\nconst DATA_ICON = 'database';\n\nconst filetypeIconTable: Record<string, string> = {\n    // Message\n    msg: MESSAGE_ICON,\n\n    // Calendar\n    ics: CALENDAR_ICON,\n    ical: CALENDAR_ICON,\n    icalendar: CALENDAR_ICON,\n    ifb: CALENDAR_ICON,\n\n    // Email\n    email: EMAIL_ICON,\n    eml: EMAIL_ICON,\n    oft: EMAIL_ICON,\n    ost: EMAIL_ICON,\n    emlx: EMAIL_ICON,\n\n    // Web\n    html: HTML_ICON,\n    xml: HTML_ICON,\n\n    // Editable text\n    txt: TEXT_ICON,\n    rtf: TEXT_ICON,\n\n    // Editable document\n    dot: WORD_ICON,\n    doc: WORD_ICON,\n    docx: WORD_ICON,\n    dotx: WORD_ICON,\n    docm: WORD_ICON,\n    dotm: WORD_ICON,\n    odt: DOCUMENT_ICON,\n    pages: DOCUMENT_ICON,\n\n    // Portable document\n    pdf: 'PDF_2',\n\n    // Presentation\n    ppt: POWERPOINT_ICON,\n    pot: POWERPOINT_ICON,\n    pps: POWERPOINT_ICON,\n    pptx: POWERPOINT_ICON,\n    pptm: POWERPOINT_ICON,\n    potx: POWERPOINT_ICON,\n    potm: POWERPOINT_ICON,\n    ppam: POWERPOINT_ICON,\n    ppsx: POWERPOINT_ICON,\n    ppsm: POWERPOINT_ICON,\n    sldx: POWERPOINT_ICON,\n    sldm: POWERPOINT_ICON,\n    odp: PRESENTATION_ICON,\n    key: PRESENTATION_ICON,\n\n    // Spreadsheet\n    xls: EXCEL_ICON,\n    xlsx: EXCEL_ICON,\n    csv: SPREADSHEET_ICON,\n    numbers: SPREADSHEET_ICON,\n\n    // Image\n    jpg: PHOTO_ICON,\n    jpeg: PHOTO_ICON,\n    heic: PHOTO_ICON,\n    bmp: IMAGE_ICON,\n    png: IMAGE_ICON,\n    gif: IMAGE_ICON,\n\n    // Editable image\n    psd: 'adobe_photoshop_copyrighted',\n    ai: 'adobe_illustrator_copyrighted',\n\n    // Vector graphic\n    svg: VECTOR_GRAPHIC_ICON,\n    svgz: VECTOR_GRAPHIC_ICON,\n    ep: VECTOR_GRAPHIC_ICON,\n    eps: VECTOR_GRAPHIC_ICON,\n    sketch: VECTOR_GRAPHIC_ICON,\n\n    // Audio\n    mp3: AUDIO_ICON,\n    wav: AUDIO_ICON,\n    wma: AUDIO_ICON,\n    ogg: AUDIO_ICON,\n\n    // Video\n    avi: VIDEO_ICON,\n    flv: VIDEO_ICON,\n    h264: VIDEO_ICON,\n    mov: VIDEO_ICON,\n    mp4: VIDEO_ICON,\n    mwv: VIDEO_ICON,\n\n    // Compressed\n    zip: COMPRESSED_ICON,\n    '7z': COMPRESSED_ICON,\n    rar: COMPRESSED_ICON,\n\n    // Data\n    json: 'json',\n    yaml: DATA_ICON,\n    sql: DATA_ICON,\n    db: DATA_ICON,\n    dbf: DATA_ICON,\n};\n\nexport function getIconForFile(extension: string): string {\n    return filetypeIconTable[extension.toLowerCase()] || DEFAULT_ICON;\n}\n","import { FileInfo } from 'src/interface';\nimport { getIconBackgroundColorForFile } from 'src/components/file/icon-background-colors';\nimport { getIconFillColorForFile } from 'src/components/file/icon-fill-colors';\nimport { getIconForFile } from 'src/components/file/icons';\nimport {\n    getIconBackgroundColor,\n    getIconColor,\n    getIconName,\n} from 'src/components/icon/get-icon-props';\n\nexport function getFileIcon(file: FileInfo) {\n    const name = getIconName(file.icon);\n\n    if (name) {\n        return name;\n    }\n\n    const extension = getExtension(file);\n    if (!extension) {\n        return;\n    }\n\n    return getIconForFile(extension);\n}\n\nexport function getFileColor(file: FileInfo) {\n    const color = getIconColor(file.icon, file.iconColor);\n\n    if (color) {\n        return color;\n    }\n\n    const extension = getExtension(file);\n    if (!extension) {\n        return;\n    }\n\n    return getIconFillColorForFile(extension);\n}\n\nexport function getFileBackgroundColor(file: FileInfo) {\n    const backgroundColor = getIconBackgroundColor(\n        file.icon,\n        file.iconBackgroundColor,\n    );\n\n    if (backgroundColor) {\n        return backgroundColor;\n    }\n\n    const extension = getExtension(file);\n    if (!extension) {\n        return;\n    }\n\n    return getIconBackgroundColorForFile(extension);\n}\n\nexport function getFileExtensionTitle(file: FileInfo) {\n    const name = getIconName(file.icon);\n\n    if (name) {\n        return name;\n    }\n\n    return getExtension(file);\n}\n\nexport function getExtension(file: FileInfo) {\n    if (!file) {\n        return;\n    }\n\n    return file.filename.split('.').pop();\n}\n","/**\n * @prop --icon-background-color: Background color of the icon. Defaults to `--contrast-400`.\n * @prop --icon-color: Color of the icon. Defaults to `--contrast-1100`.\n */\n\n:host {\n    --icon-background-color: rgb(var(--contrast-400));\n    --icon-color: rgb(var(--contrast-1100));\n}\n","import translate from '../../global/translations';\nimport { Chip } from '../chip-set/chip.types';\nimport { Languages } from '../date-picker/date.types';\nimport { MDCTextField } from '@material/textfield';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n} from '@stencil/core';\nimport {\n    getFileBackgroundColor,\n    getFileColor,\n    getFileExtensionTitle,\n    getFileIcon,\n} from '../../util/file-metadata';\nimport { FileInfo } from 'src/interface';\n\nconst CHIP_SET_TAG_NAME = 'limel-chip-set';\nconst DEFAULT_FILE_CHIP: Chip = {\n    id: null,\n    text: null,\n    removable: true,\n};\n\n/**\n * This component lets end-users select a *single* file from their device\n * storage. Regardless of the user's device or operating system, this component\n * opens up a file picker dialog that allows the user to choose a file.\n *\n * ## Using correct labels\n *\n * This file picker can be used in different contexts. The component's distinct\n * visual design including the upload icon hints end-users that this is not a\n * normal input field like other fields in the form for example.\n *\n * :::important\n * you need to use a descriptive `label` that clarifies the\n * functionality of the file picker, and/or provides users with clear\n * instructions.\n *\n * Depending on the context, you may need to avoid labels such as:\n * - File\n * - Document\n *\n * and instead consider using labels like:\n * - Attach a file\n * - Upload a file\n * - Choose a document\n * - Choose a file\n *\n * and similar phrases...\n * :::\n *\n * @exampleComponent limel-example-file\n * @exampleComponent limel-example-file-custom-icon\n * @exampleComponent limel-example-file-accepted-types\n * @exampleComponent limel-example-file-composite\n */\n@Component({\n    tag: 'limel-file',\n    shadow: true,\n    styleUrl: 'file.scss',\n})\nexport class File {\n    /**\n     * The selected file.\n     */\n    @Prop()\n    public value: FileInfo;\n\n    /**\n     * The input label.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Set to `true` to indicate that the field is required.\n     */\n    @Prop({ reflect: true })\n    public required: boolean = false;\n\n    /**\n     * True if the input should be disabled\n     */\n    @Prop({ reflect: true })\n    public disabled: boolean = false;\n\n    /**\n     * Set to `true` to disable adding and removing files, but allow interaction\n     * with any already existing file.\n     */\n    @Prop({ reflect: true })\n    public readonly: boolean = false;\n\n    /**\n     * Set to `true` to indicate that the current value of the chosen file is\n     * invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid = false;\n\n    /**\n     * The [accepted file types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers)\n     */\n    @Prop({ reflect: true })\n    public accept: string = '*';\n\n    /**\n     * Defines the localisation for translations.\n     */\n    @Prop()\n    public language: Languages = 'en';\n\n    /**\n     * Dispatched when a file is selected/deselected\n     */\n    @Event()\n    private change: EventEmitter<FileInfo>;\n\n    /**\n     * Dispatched when clicking on a chip\n     */\n    @Event()\n    private interact: EventEmitter<number | string>;\n\n    @Element()\n    private element: HTMLLimelFileElement;\n\n    private chipSet;\n    private mdcTextField;\n\n    public connectedCallback() {\n        this.initialize();\n    }\n\n    public componentDidLoad() {\n        this.chipSet = this.element.shadowRoot.querySelector(CHIP_SET_TAG_NAME);\n        this.initialize();\n    }\n\n    private initialize() {\n        if (!this.chipSet) {\n            return;\n        }\n\n        this.mdcTextField = new MDCTextField(\n            this.chipSet.shadowRoot.querySelector('.mdc-text-field'),\n        );\n    }\n\n    public disconnectedCallback() {\n        if (this.mdcTextField) {\n            this.mdcTextField.destroy();\n        }\n    }\n\n    public render() {\n        return (\n            <Host onNewFiles={this.handleNewFiles}>\n                <limel-file-dropzone\n                    disabled={this.disabled || this.readonly || !!this.value}\n                    accept={this.accept}\n                >\n                    {this.renderChipSet()}\n                </limel-file-dropzone>\n            </Host>\n        );\n    }\n\n    private renderChipSet() {\n        const chipSet = (\n            <limel-chip-set\n                disabled={this.disabled}\n                readonly={this.readonly}\n                invalid={this.invalid}\n                label={this.label}\n                leadingIcon=\"upload_to_cloud\"\n                language={this.language}\n                onChange={this.handleChipSetChange}\n                onInteract={this.handleChipInteract}\n                required={this.required}\n                type=\"input\"\n                value={this.chipArray}\n                title={this.getTranslation('drag-and-drop-tips')}\n            />\n        );\n\n        if (!this.value) {\n            return (\n                <limel-file-input\n                    accept={this.accept}\n                    disabled={this.disabled || this.readonly || !!this.value}\n                >\n                    {chipSet}\n                </limel-file-input>\n            );\n        }\n\n        return chipSet;\n    }\n\n    private handleNewFiles = (event: CustomEvent<FileInfo[]>) => {\n        this.preventAndStop(event);\n        this.change.emit(event.detail[0]);\n    };\n\n    private get chipArray() {\n        if (!this.value) {\n            return [];\n        }\n\n        return [\n            {\n                ...DEFAULT_FILE_CHIP,\n                text: this.value.filename,\n                id: this.value.id,\n                icon: {\n                    name: getFileIcon(this.value),\n                    title: getFileExtensionTitle(this.value),\n                    color: getFileColor(this.value),\n                    backgroundColor: getFileBackgroundColor(this.value),\n                },\n                href: this.value.href,\n            },\n        ];\n    }\n\n    private handleChipSetChange = (event: CustomEvent) => {\n        event.stopPropagation();\n        const file = !event.detail.length ? event.detail[0] : null;\n        this.chipSet.blur();\n        if (!file) {\n            this.change.emit(file);\n            if (this.required) {\n                this.mdcTextField.valid = false;\n            }\n        }\n    };\n\n    private handleChipInteract = (event: CustomEvent<Chip>) => {\n        event.stopPropagation();\n        event.preventDefault();\n        this.interact.emit(event.detail.id);\n    };\n\n    private preventAndStop(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    private getTranslation(key: string) {\n        return translate.get(`file.${key}`, this.language);\n    }\n}\n","import { FileInfo } from 'src/global/shared-types/file.types';\nimport { createRandomString } from './random-string';\nimport {\n    getFileBackgroundColor,\n    getFileColor,\n    getFileExtensionTitle,\n    getFileIcon,\n} from './file-metadata';\n\nexport function createFileInfo(file: File): FileInfo {\n    let limeFile: FileInfo = {\n        id: createRandomString(),\n        filename: file.name,\n        contentType: file.type,\n        size: file.size,\n        fileContent: file,\n    };\n    limeFile = {\n        ...limeFile,\n        icon: {\n            name: getFileIcon(limeFile),\n            title: getFileExtensionTitle(limeFile),\n            color: getFileColor(limeFile),\n            backgroundColor: getFileBackgroundColor(limeFile),\n        },\n    };\n\n    return limeFile;\n}\n",null,"import { Component, h, Event, EventEmitter, Host, Prop } from '@stencil/core';\nimport { FileInfo } from 'src/interface';\nimport { createFileInfo } from 'src/util/files';\n\n/**\n * This component enables you to seamlessly convert any region of the user interface into\n * a file dropzone area, just by wrapping it inside the `limel-file-dropzone`.\n *\n * The file dropzone can then be used to allow end-users to upload files\n * by dragging and dropping them into the specified area.\n *\n * After receiving the files, the component emits a `newFiles` event.\n * The event detail would be an array of `FileInfo` objects,\n * each representing a file dropped into the dropzone.\n * @exampleComponent limel-example-file-dropzone\n */\n@Component({\n    tag: 'limel-file-dropzone',\n    shadow: true,\n    styleUrl: 'file-dropzone.scss',\n})\nexport class FileDropzone {\n    /**\n     * Used to specify the types of files that the dropzone will accept.\n     * By default, it accepts all file types (`*`).\n     * For media files, it is possible to specify any format, using:\n     * `audio/*`, `video/*`, `image/*`.\n     * Additionally, you can use unique file type specifier, such as:\n     * `.jpg`, or `.pdf`; or use a comma-separated list of file extensions or MIME types,\n     * for instance: `image/png, image/jpeg` or `.png, .jpg, .jpeg`.\n     *\n     * Read more about\n     * [HTML attribute: accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept)\n     */\n    @Prop({ reflect: true })\n    public accept: string = '*';\n\n    /**\n     * Set to `true` to disable the file dropzone.\n     */\n    @Prop()\n    public disabled: boolean = false;\n\n    @Event()\n    newFiles: EventEmitter<FileInfo[]>;\n\n    public render() {\n        return (\n            <Host onDrop={this.handleDrop} onDragOver={this.handleDragOver}>\n                <slot />\n            </Host>\n        );\n    }\n\n    private handleDrop = (event: DragEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (this.disabled) {\n            return;\n        }\n\n        const files: File[] = Array.from(event.dataTransfer.files);\n\n        this.newFiles.emit(files.map(createFileInfo).filter(this.isAccepted));\n    };\n\n    private handleDragOver(event: DragEvent) {\n        event.preventDefault();\n    }\n\n    private isAccepted = (file: FileInfo): boolean => {\n        if (this.accept === undefined || this.accept === '*') {\n            return true;\n        }\n\n        const acceptList = this.accept.split(',');\n\n        return acceptList.some((acceptedType) => {\n            if (acceptedType === file.contentType) {\n                return true;\n            }\n\n            if (acceptedType.endsWith('/*')) {\n                const baseType = acceptedType.split('/')[0];\n\n                return file.contentType.startsWith(`${baseType}/`);\n            }\n        });\n    };\n}\n","import {\n    h,\n    Event,\n    EventEmitter,\n    Host,\n    Component,\n    Element,\n    Prop,\n} from '@stencil/core';\nimport { createRandomString } from 'src/util/random-string';\nimport { FileInfo } from '../../global/shared-types/file.types';\nimport { createFileInfo } from 'src/util/files';\n\n/**\n * @exampleComponent limel-example-file-input\n */\n@Component({\n    tag: 'limel-file-input',\n    shadow: true,\n})\nexport class FileInput {\n    @Prop({ reflect: true })\n    public accept: string = '*';\n\n    @Prop()\n    public disabled: boolean = false;\n\n    @Event()\n    newFiles: EventEmitter<FileInfo[]>;\n\n    @Element()\n    private element: HTMLLimelFileElement;\n\n    private fileInput: HTMLInputElement;\n    private fileInputId = createRandomString();\n\n    public componentDidLoad() {\n        this.fileInput = this.element.shadowRoot.getElementById(\n            this.fileInputId,\n        ) as HTMLInputElement;\n    }\n\n    public render() {\n        return (\n            <Host\n                onClick={this.handleClick}\n                onKeyUp={this.handleKeyUp}\n                onKeyDown={this.handleKeyDown}\n            >\n                <input\n                    hidden={true}\n                    id={this.fileInputId}\n                    onChange={this.handleFileChange}\n                    type=\"file\"\n                    accept={this.accept}\n                    disabled={this.disabled}\n                />\n                <slot></slot>\n            </Host>\n        );\n    }\n\n    private handleClick = (event: Event) => {\n        if (this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n\n            return;\n        }\n\n        this.triggerFileDialog();\n\n        event.stopPropagation();\n    };\n\n    private handleKeyUp = (event: KeyboardEvent) => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (event.code === 'Enter') {\n            this.triggerFileDialog();\n        }\n    };\n\n    private handleKeyDown(event: KeyboardEvent) {\n        if (\n            event.code === 'Tab' ||\n            event.code === 'Backspace' ||\n            event.code === 'Enter'\n        ) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private triggerFileDialog() {\n        this.fileInput.click();\n    }\n\n    private handleFileChange = (event: Event) => {\n        const files = Array.from(this.fileInput.files);\n        if (files.length > 0) {\n            event.stopPropagation();\n            this.newFiles.emit(files.map(createFileInfo));\n            this.fileInput.value = '';\n        }\n    };\n}\n"],"mappings":"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"}