{"version":3,"names":["fileDropzoneTypeFilteringCss","FileDropzoneTypeFilteringExample","this","handleDrop","event","files","concat","detail","render","h","onFilesSelected","accept","map","file","text","filename","icon","value"],"sources":["./src/components/file-dropzone/examples/file-dropzone-type-filtering.scss?tag=limel-example-file-dropzone-type-filtering&encapsulation=shadow","./src/components/file-dropzone/examples/file-dropzone-type-filtering.tsx"],"sourcesContent":[null,"import { FileInfo } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * File type filtering\n * The component allows you to specify the types of files that the dropzone will accept.\n * By default, it accepts all file types (`*`).\n *\n * For media files, it is possible to specify any format, using:\n * `audio/*`, `video/*`, `image/*`.\n *\n * Additionally, you can use unique file type specifiers, such as:\n * `.jpg`, or `.pdf`; or use a comma-separated list of file extensions or MIME types,\n * for instance: `image/png, image/jpeg` or `.png, .jpg, .jpeg`.\n *\n * Read more about\n * [HTML attribute: accept](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/accept)\n */\n@Component({\n    tag: 'limel-example-file-dropzone-type-filtering',\n    shadow: true,\n    styleUrl: 'file-dropzone-type-filtering.scss',\n})\nexport class FileDropzoneTypeFilteringExample {\n    @State()\n    private files: FileInfo[] = [];\n\n    public render() {\n        return [\n            <limel-file-dropzone\n                onFilesSelected={this.handleDrop}\n                accept=\"image/*\"\n            >\n                <p>Upload image files</p>\n            </limel-file-dropzone>,\n            <limel-file-dropzone\n                onFilesSelected={this.handleDrop}\n                accept=\"image/*, video/*\"\n            >\n                <p>Upload image and video files</p>\n            </limel-file-dropzone>,\n            this.files.map((file) => (\n                <limel-chip text={file.filename} icon={file.icon} />\n            )),\n            <limel-example-value value={this.files} />,\n        ];\n    }\n\n    private handleDrop = (event: CustomEvent<FileInfo[]>) => {\n        this.files = [...this.files.concat(event.detail)];\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAA+B,G,MCuBxBC,EAAgC,M,yBAyBjCC,KAAAC,WAAcC,IAClBF,KAAKG,MAAQ,IAAIH,KAAKG,MAAMC,OAAOF,EAAMG,QAAQ,E,WAxBzB,E,CAErBC,SACH,MAAO,CACHC,EAAA,uBACIC,gBAAiBR,KAAKC,WACtBQ,OAAO,WAEPF,EAAA,gCAEJA,EAAA,uBACIC,gBAAiBR,KAAKC,WACtBQ,OAAO,oBAEPF,EAAA,0CAEJP,KAAKG,MAAMO,KAAKC,GACZJ,EAAA,cAAYK,KAAMD,EAAKE,SAAUC,KAAMH,EAAKG,SAEhDP,EAAA,uBAAqBQ,MAAOf,KAAKG,Q"}