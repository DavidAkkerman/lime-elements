{"version":3,"names":["progressFlowCss","ProgressFlow","this","renderRegularFlowItem","item","index","array","h","class","first","last","length","passed","selectedItemIndex","selected","style","getItemStyle","disabled","readonly","onInteract","handleFlowItemClick","value","renderEndPhaseItem","flowItem","change","emit","componentDidRender","scrollToSelectedItem","render","regularFlowItems","flowItems","filter","isOffProgress","endPhaseItems","findIndex","map","selectedColor","passedColor","iconColor","selectedElement","getElementForSelectedItem","selectedItemLeftPosition","offsetLeft","element","selectedElementLeftPositionCentered","offsetWidth","selectedElementCentered","scrollTo","behavior","left","shadowRoot","querySelector","progressFlowItemCss","ProgressFlowItem","handleClick","interact","tabindex","title","getToolTipText","type","step","_a","isDisabled","onClick","renderIcon","text","renderDivider","renderSecondaryText","secondaryText","join","icon","name","size"],"sources":["./src/components/progress-flow/progress-flow.scss?tag=limel-progress-flow&encapsulation=shadow","./src/components/progress-flow/progress-flow.tsx","./src/components/progress-flow/progress-flow-item/progress-flow-item.scss?tag=limel-progress-flow-item","./src/components/progress-flow/progress-flow-item/progress-flow-item.tsx"],"sourcesContent":["@use '../../style/functions';\n@use '../../style/internal/variables';\n\n/**\n* @prop --progress-flow-step-background-color: Background color of steps, defaults to `--contrast-600`.\n* @prop --progress-flow-step-background-color--selected: Background color of selected step, defaults to `--lime-primary-color`.\n* @prop --progress-flow-step-background-color--passed: Background color of passed steps, defaults to the background color the step has when selected.\n* @prop --progress-flow-step-text-color: Text of steps, defaults to `--contrast-1200`.\n* @prop --progress-flow-step-text-color--selected: Text color of selected step, defaults to `--lime-primary-color`.\n* @prop --progress-flow-step-text-color--passed: Text color of passed steps, defaults to the text color the step has when selected.\n* @prop --progress-flow-step-divider-color: Color of the arrow shaped dividers between steps which must be the same as component's background, defaults to `--contrast-100`.\n* @prop --progress-flow-icon-color--inactive: Color of the optional icons used in each step. Only affects inactive steps, defaults to text colors for inactive, active, or passed step.\n*/\n\n:host {\n    --step-height: 2.5rem;\n    --selected-indicator-right: -0.5rem;\n    --max-text-width: 10rem;\n\n    isolation: isolate;\n    box-sizing: border-box;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n\n    overflow-x: auto;\n    scrollbar-width: none; // This hides the scrollbars appearing under in Firefox\n    -ms-overflow-style: none; // Same as above for IE 11\n    padding: functions.pxToRem(4); // needed for the focus effect\n\n    &::-webkit-scrollbar {\n        display: none; // This hides the scrollbars appearing under in Chrome\n    }\n}\n\n:host(.is-narrow) {\n    --step-height: 1.5rem;\n    --selected-indicator-right: 0;\n}\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Prop,\n} from '@stencil/core';\nimport { FlowItem } from '../../interface';\n\n/**\n * @exampleComponent limel-example-progress-flow-basic\n * @exampleComponent limel-example-progress-flow-secondary-text\n * @exampleComponent limel-example-progress-flow-disabled-step\n * @exampleComponent limel-example-progress-flow-colors\n * @exampleComponent limel-example-progress-flow-colors-css\n * @exampleComponent limel-example-progress-flow-off-progress-steps\n * @exampleComponent limel-example-progress-flow-narrow\n */\n@Component({\n    tag: 'limel-progress-flow',\n    shadow: true,\n    styleUrl: 'progress-flow.scss',\n})\nexport class ProgressFlow {\n    @Element()\n    public element: HTMLLimelProgressFlowElement;\n\n    /**\n     * What flow items to render\n     */\n    @Prop()\n    public flowItems: FlowItem[] = [];\n\n    /**\n     * Set to `true` to disable the progress flow.\n     * Use `disabled` to indicate that the component can normally be interacted\n     * with, but is currently disabled. This tells the user that if certain\n     * requirements are met, the field may become enabled again.\n     */\n    @Prop()\n    public disabled = false;\n\n    /**\n     * Disables the progress flow when `true`.\n     * This does not visualize the component that much differently.\n     * But since the component does not provide any feedback that users can\n     * interact with the component, it makes it perfect for illustrative and\n     * informative porpuses.\n     */\n    @Prop()\n    public readonly = false;\n\n    /**\n     * Fired when a new value has been selected from the progress flow\n     */\n    @Event()\n    public change: EventEmitter<FlowItem>;\n\n    private selectedItemIndex: number;\n\n    public componentDidRender() {\n        this.scrollToSelectedItem();\n    }\n\n    public render() {\n        const regularFlowItems = this.flowItems.filter((item) => {\n            return !item.isOffProgress;\n        });\n        const endPhaseItems = this.flowItems.filter((item) => {\n            return item.isOffProgress;\n        });\n        this.selectedItemIndex = regularFlowItems.findIndex((item) => {\n            return item.selected;\n        });\n\n        return [\n            regularFlowItems.map(this.renderRegularFlowItem),\n            endPhaseItems.map(this.renderEndPhaseItem),\n        ];\n    }\n\n    private renderRegularFlowItem = (\n        item: FlowItem,\n        index: number,\n        array: FlowItem[]\n    ) => {\n        return (\n            <limel-progress-flow-item\n                class={{\n                    'flow-item': true,\n                    first: index === 0,\n                    last: index === array.length - 1,\n                    passed: index < this.selectedItemIndex,\n                    selected: item.selected,\n                }}\n                style={this.getItemStyle(item)}\n                disabled={this.disabled || this.readonly}\n                readonly={this.readonly}\n                item={item}\n                onInteract={this.handleFlowItemClick(item)}\n                data-tracking-value={item.value}\n            />\n        );\n    };\n\n    private renderEndPhaseItem = (\n        item: FlowItem,\n        index: number,\n        array: FlowItem[]\n    ) => {\n        return (\n            <limel-progress-flow-item\n                class={{\n                    'flow-item': true,\n                    'off-progress-item': true,\n                    selected: item.selected,\n                    'first-off-progress-item': index === 0,\n                    'last-off-progress-item': index === array.length - 1,\n                }}\n                style={this.getItemStyle(item)}\n                disabled={this.disabled || this.readonly}\n                readonly={this.readonly}\n                item={item}\n                onInteract={this.handleFlowItemClick(item)}\n                data-tracking-value={item.value}\n            />\n        );\n    };\n\n    private handleFlowItemClick = (flowItem: FlowItem) => () => {\n        if (!flowItem.selected && !flowItem.disabled && !this.disabled) {\n            this.change.emit(flowItem);\n        }\n    };\n\n    private getItemStyle(flowItem: FlowItem) {\n        const style: any = {};\n        if (flowItem?.selectedColor) {\n            style['--progress-flow-step-background-color--selected'] =\n                flowItem.selectedColor;\n        }\n\n        if (flowItem?.passedColor) {\n            style['--progress-flow-step-background-color--passed'] =\n                flowItem.passedColor;\n        }\n\n        if (flowItem?.iconColor) {\n            style['--progress-flow-icon-color--inactive'] = flowItem.iconColor;\n        }\n\n        return style;\n    }\n\n    private scrollToSelectedItem() {\n        const selectedElement = this.getElementForSelectedItem();\n        if (selectedElement) {\n            const selectedItemLeftPosition =\n                selectedElement.offsetLeft - this.element.offsetLeft;\n            const selectedElementLeftPositionCentered =\n                // eslint-disable-next-line no-magic-numbers\n                selectedItemLeftPosition - this.element.offsetWidth / 2;\n            const selectedElementCentered =\n                selectedElementLeftPositionCentered +\n                // eslint-disable-next-line no-magic-numbers\n                selectedElement.offsetWidth / 2;\n            this.element.scrollTo({\n                behavior: 'smooth',\n                left: selectedElementCentered,\n            });\n        }\n    }\n\n    private getElementForSelectedItem(): HTMLLimelProgressFlowItemElement {\n        return this.element.shadowRoot.querySelector('.flow-item.selected');\n    }\n}\n","@use '../../../style/mixins';\n@use '../../../style/functions';\n@use '../../../style/internal/variables';\n\n$limel-progress-flow-step-content: 2;\n$limel-progress-flow-divider: 1;\n\n.flow-item {\n    --step-background: var(\n        --progress-flow-step-background-color,\n        rgb(var(--contrast-600))\n    );\n    --step-background--selected: var(\n        --progress-flow-step-background-color--selected,\n        var(--mdc-theme-primary)\n    );\n    --step-background--passed: var(\n        --progress-flow-step-background-color--passed,\n        var(--step-background--selected)\n    );\n\n    --step-text: var(\n        --progress-flow-step-text-color,\n        rgb(var(--contrast-1200))\n    );\n    --step-text--selected: var(\n        --progress-flow-step-text-color--selected,\n        var(--mdc-theme-on-primary)\n    );\n    --step-text--passed: var(\n        --progress-flow-step-text-color--passed,\n        var(--step-text--selected)\n    );\n\n    --step-divider-color: var(\n        --progress-flow-step-divider-color,\n        rgb(var(--contrast-100))\n    );\n\n    position: relative;\n    width: 100%;\n\n    display: flex;\n    flex-direction: column;\n    align-items: stretch;\n\n    &:not(.off-progress-item, .last) {\n        .divider {\n            &:after {\n                content: '';\n            }\n        }\n    }\n\n    &.off-progress-item {\n        padding-left: functions.pxToRem(8);\n    }\n\n    &.first-off-progress-item {\n        padding-left: functions.pxToRem(16);\n    }\n}\n\n.step {\n    transition:\n        background-color 0.2s ease,\n        box-shadow 0.2s ease;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    width: 100%;\n    height: var(--step-height);\n    border: none;\n    font-size: functions.pxToRem(14);\n\n    &.disabled {\n        cursor: not-allowed;\n\n        &.readonly {\n            opacity: 1;\n            cursor: default;\n        }\n    }\n\n    &:focus {\n        outline: none;\n    }\n\n    &:focus-visible {\n        box-shadow: var(--shadow-depth-8-focused);\n    }\n\n    .flow-item:not(.off-progress-item, .first) & {\n        padding-left: calc(var(--step-height) / 2);\n    }\n\n    .flow-item:not(.selected) & {\n        &:not(.disabled) {\n            cursor: pointer;\n            &:hover {\n                box-shadow: var(--button-shadow-normal);\n            }\n            &:active {\n                box-shadow: var(--button-shadow-pressed);\n            }\n        }\n    }\n\n    .off-progress-item & {\n        border-radius: functions.pxToRem(4);\n        padding: 0 functions.pxToRem(12);\n\n        .icon {\n            margin-left: 0;\n        }\n    }\n    .flow-item.first & {\n        border-top-left-radius: var(--step-height);\n        border-bottom-left-radius: var(--step-height);\n        padding-left: functions.pxToRem(20);\n    }\n    .flow-item.last & {\n        border-top-right-radius: var(--step-height);\n        border-bottom-right-radius: var(--step-height);\n        padding-right: functions.pxToRem(20);\n    }\n}\n\n.divider {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: var(--step-height);\n    height: var(--step-height);\n\n    position: absolute;\n    z-index: $limel-progress-flow-divider;\n    right: calc(var(--step-height) / 2 * -1);\n    overflow: hidden;\n\n    &:after {\n        position: absolute;\n        display: block;\n\n        box-sizing: border-box;\n        transition: background-color 0.2s ease;\n\n        width: 100%;\n        height: 100%;\n        right: calc(var(--step-height) / 5);\n        transform: rotate(45deg);\n        border: {\n            style: solid;\n            width: functions.pxToRem(2) functions.pxToRem(2) 0 0;\n            radius: 0 functions.pxToRem(8) 0 0;\n            color: var(--step-divider-color);\n        }\n    }\n    .flow-item.last & {\n        width: 0;\n    }\n}\n\n.text,\n.secondary-text {\n    @include mixins.truncate-text();\n    max-width: var(--max-text-width);\n    z-index: $limel-progress-flow-step-content;\n}\n\n.secondary-text {\n    font-size: functions.pxToRem(12);\n    margin: auto;\n    padding-left: calc(var(--step-height) / 2);\n}\n\n.icon {\n    margin: 0 functions.pxToRem(8) 0 functions.pxToRem(4);\n    z-index: $limel-progress-flow-step-content;\n}\n\n@import './partial-styles/_selected-indicator';\n@import './partial-styles/_colors';\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Prop,\n} from '@stencil/core';\nimport { FlowItem } from '../../../interface';\n\n/**\n * @private\n */\n@Component({\n    tag: 'limel-progress-flow-item',\n    shadow: false,\n    styleUrl: 'progress-flow-item.scss',\n})\nexport class ProgressFlowItem {\n    @Element()\n    public element: HTMLLimelProgressFlowItemElement;\n\n    /**\n     * The flow item that should be rendered\n     */\n    @Prop()\n    public item: FlowItem = null;\n\n    /**\n     * True if the flow item should be disabled\n     */\n    @Prop()\n    public disabled = false;\n\n    /**\n     * True if the flow item should be readonly\n     */\n    @Prop()\n    public readonly = false;\n\n    /**\n     * Fired when clicking on the flow item\n     */\n    @Event()\n    public interact: EventEmitter<void>;\n\n    public render() {\n        if (!this.item) {\n            return;\n        }\n\n        return [\n            <button\n                tabindex=\"0\"\n                title={this.getToolTipText()}\n                type=\"button\"\n                class={{\n                    step: true,\n                    selected: this.item?.selected,\n                    disabled: this.isDisabled(),\n                    readonly: this.readonly,\n                }}\n                onClick={this.handleClick}\n                disabled={this.isDisabled()}\n            >\n                {this.renderIcon()}\n                <span class=\"text\">{this.item.text}</span>\n                {this.renderDivider()}\n            </button>,\n            this.renderSecondaryText(),\n        ];\n    }\n\n    private isDisabled() {\n        return this.item?.disabled || this.readonly || this.disabled;\n    }\n\n    private getToolTipText() {\n        if (!this.item.secondaryText) {\n            return this.item.text;\n        }\n\n        return [this.item.text, this.item.secondaryText].join(' · ');\n    }\n\n    private handleClick = () => {\n        this.interact.emit();\n    };\n\n    private renderSecondaryText() {\n        if (!this.item?.secondaryText) {\n            return;\n        }\n\n        return <div class=\"secondary-text\">{this.item.secondaryText}</div>;\n    }\n\n    private renderIcon() {\n        if (!this.item.icon) {\n            return;\n        }\n\n        return <limel-icon name={this.item.icon} size=\"small\" class=\"icon\" />;\n    }\n\n    private renderDivider() {\n        if (this.item.isOffProgress) {\n            return;\n        }\n\n        return <div class=\"divider\" />;\n    }\n}\n"],"mappings":"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"}