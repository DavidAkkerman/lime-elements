{"version":3,"names":["InteractionTrigger","strings","ARIA_HIDDEN","INTERACTION_EVENT","NAVIGATION_EVENT","TAB_INDEX","MDCChipTrailingActionFoundation","_super","__extends","adapter","call","this","__assign","defaultAdapter","Object","defineProperty","get","enumerable","configurable","focus","undefined","getAttribute","setAttribute","notifyInteraction","notifyNavigation","prototype","handleClick","evt","stopPropagation","CLICK","handleKeydown","key","normalizeKey","shouldNotifyInteractionFromKey","trigger","getTriggerFromKey","isNavigationEvent","removeFocus","isNavigable","isFromActionKey","KEY","ENTER","SPACEBAR","isFromDeleteKey","BACKSPACE","DELETE","SPACEBAR_KEY","ENTER_KEY","DELETE_KEY","BACKSPACE_KEY","UNSPECIFIED","MDCFoundation","MDCChipTrailingAction","apply","arguments","rippleSurface","attachTo","root","initialize","rippleFactory","el","foundation","MDCRipple","rippleAdapter","createAdapter","MDCRippleFoundation","initialSyncWithDOM","_this","listen","destroy","unlisten","getDefaultFoundation","attr","emit","value","MDCComponent","Direction","EventSource","ADDED_ANNOUNCEMENT_ATTRIBUTE","ARIA_CHECKED","ARROW_DOWN_KEY","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","ARROW_UP_KEY","CHECKMARK_SELECTOR","END_KEY","ENTRY_ANIMATION_NAME","HOME_KEY","IE_ARROW_DOWN_KEY","IE_ARROW_LEFT_KEY","IE_ARROW_RIGHT_KEY","IE_ARROW_UP_KEY","IE_DELETE_KEY","LEADING_ICON_SELECTOR","PRIMARY_ACTION_SELECTOR","REMOVED_ANNOUNCEMENT_ATTRIBUTE","REMOVAL_EVENT","SELECTION_EVENT","TRAILING_ACTION_SELECTOR","TRAILING_ICON_INTERACTION_EVENT","TRAILING_ICON_SELECTOR","cssClasses","CHECKMARK","CHIP_EXIT","DELETABLE","EDITABLE","EDITING","HIDDEN_LEADING_ICON","LEADING_ICON","PRIMARY_ACTION","PRIMARY_ACTION_FOCUSED","SELECTED","TEXT","TRAILING_ACTION","TRAILING_ICON","navigationKeys","Set","add","jumpChipKeys","emptyClientRect","bottom","height","left","right","top","width","FocusBehavior","MDCChipFoundation","shouldRemoveOnTrailingIconClick","shouldFocusPrimaryActionOnClick","addClass","addClassToLeadingIcon","eventTargetHasClass","focusPrimaryAction","focusTrailingAction","getCheckmarkBoundingClientRect","getComputedStyleValue","getRootBoundingClientRect","hasClass","hasLeadingIcon","isRTL","isTrailingActionNavigable","notifyEditFinish","notifyEditStart","notifyRemoval","notifySelection","notifyTrailingIconInteraction","removeClass","removeClassFromLeadingIcon","removeTrailingActionFocus","setPrimaryActionAttr","setStyleProperty","isSelected","isEditable","isEditing","setSelected","selected","setSelectedImpl","setSelectedFromChipSet","shouldNotifyClients","notifyIgnoredSelection","getShouldRemoveOnTrailingIconClick","setShouldRemoveOnTrailingIconClick","shouldRemove","setShouldFocusPrimaryActionOnClick","shouldFocus","getDimensions","getRootRect","getCheckmarkRect","checkmarkRect","rootRect","beginExit","setPrimaryActionFocusable","getFocusBehavior","handleDoubleClick","startEditing","handleTransitionEnd","shouldHandle","target","widthIsAnimating","propertyName","opacityIsAnimating","chipWidth_1","requestAnimationFrame","removedAnnouncement","shouldHideLeadingIcon","shouldShowLeadingIcon","handleFocusIn","eventFromPrimaryAction","handleFocusOut","finishEditing","handleTrailingActionInteraction","removeChip","shouldFinishEditing","preventDefault","shouldStartEditing","shouldNotifyInteraction","isDeleteAction","has","focusNextAction","PRIMARY","handleTrailingActionNavigation","detail","TRAILING","SHOULD_FOCUS","trailingActionIsNavigable","focusBehavior","SHOULD_NOT_FOCUS","source","dir","getDirection","RIGHT","LEFT","NONE","isLeftKey","isRightKey","isDeletable","MDCChip","set","id","trailingActionFactory","leadingIcon","querySelector","checkmark","primaryAction","trailingActionEl","trailingAction","computeBoundingRect","trailingActionStrings","className","classList","contains","getBoundingClientRect","window","getComputedStyle","getPropertyValue","chipId","shouldIgnore","remove","style","setProperty","parent","parentNode","removeChild","AnnouncerPriority","DATA_MDC_DOM_ANNOUNCE","announce","message","options","Announcer","getInstance","say","liveRegions","Map","instance","_a","_b","priority","POLITE","ownerDocument","document","liveRegion","getLiveRegion","textContent","setTimeout","addEventListener","clearLiveRegion","removeEventListener","documentLiveRegions","existingLiveRegion","body","createLiveRegion","createElement","position","overflow","appendChild","CHIP_SELECTOR","CHOICE","FILTER","MDCChipSetFoundation","selectedChipIds","announceMessage","focusChipPrimaryActionAtIndex","focusChipTrailingActionAtIndex","getChipListCount","getIndexOfChipById","removeChipAtIndex","removeFocusFromChipAtIndex","selectChipAtIndex","getSelectedChipIds","slice","select","selectImpl","handleChipInteraction","index","removeFocusFromChipsExcept","toggleSelect","handleChipSelection","chipIsSelected","indexOf","deselectImpl","handleChipRemoval","deselectAndNotifyClients","maxIndex","nextIndex","Math","min","handleChipNavigation","chipStrings","isDownKey","shouldIncrement","isHome","isEnd","focusChipAction","shouldJumpChips","splice","chipIndex","selectAndNotifyClients","chipCount","i","length","previouslySelectedChip","previouslySelectedIndex","push","idCounter","MDCChipSet","chipsList","chipFactory","instantiateChips","e_1","__values","_c","next","done","chip","e_1_1","error","return","e_2","e_2_1","addChip","chipEl","chips","findChipIndex","chipElements","querySelectorAll","map","handleKeyboardEvent","event","textValue","isLeft","ARROW_LEFT","keyCode","ARROW_LEFT_KEY_CODE","isRight","ARROW_RIGHT","ARROW_RIGHT_KEY_CODE","isEnter","ENTER_KEY_CODE","isDelete","DELETE_KEY_CODE","isBackspace","BACKSPACE_KEY_CODE","isEscape","ESCAPE","ESCAPE_KEY_CODE","handleLeft","handleRight","handleEnter","handleDelete","handleBackspace","handleEscape","host","inputChipIndexSelected","emitInteraction","repeat","chipSetCss","SELECTED_CHIP_CLASS","INPUT_FIELD_TABINDEX","ChipSet","constructor","hostRef","handleKeyDown","renderEmptyValueForReadonly","readonly","h","class","floatLabelAbove","editMode","dropZoneTip","translate","language","hasHelperText","helperText","renderHelperLine","maxItems","maxLength","invalid","isInvalid","clearAllChipsLabel","removeChipLabel","renderChip","bind","renderInputChip","isFull","handleInteractionEvent","handleSelection","handleTextFieldFocus","handleInputBlur","handleTextInput","inputFieldOnChange","inputHidden","handleDeleteAllIconClick","renderDelimiter","async","emptyInput","disabled","shadowRoot","startEdit","syncEmptyInput","componentDidLoad","triggerIconColorWarning","type","mdcTextField","MDCTextField","createMDCChipSet","componentWillUpdate","destroyMDCChipSet","componentDidUpdate","input","disconnectedCallback","render","renderInputChips","classes","chipSetLabel","renderChipSetLabel","role","handleChangeChips","newValue","oldValue","isEqual","mdcChipSet","label","clearAllButton","onClick","tabIndex","inputType","hidden","onBlur","onFocus","onKeyDown","onInput","onChange","placeholder","searchLabel","required","renderLabel","renderLeadingIcon","renderClearAllChipsButton","labelClassList","htmlFor","blurred","emptyInputOnBlur","stopEdit","trim","find","item","interact","assign","change","filter","renderFilterChip","renderDefaultChip","icon","renderChipIcon","text","renderChipLabel","attributes","href","getHref","getTarget","tabindex","viewBox","fill","stroke","d","renderBadge","catchInputChipClicks","renderChipRemoveButton","name","getIconName","color","getIconColor","iconFillColor","backgroundColor","getIconBackgroundColor","iconBackgroundColor","title","getIconTitle","iconTitle","size","badge","removable","svgData","removeFunc","innerHTML","delimiter","console","warn"],"sources":["./node_modules/@material/chips/deprecated/trailingaction/constants.js","./node_modules/@material/chips/deprecated/trailingaction/foundation.js","./node_modules/@material/chips/deprecated/trailingaction/component.js","./node_modules/@material/chips/deprecated/chip/constants.js","./node_modules/@material/chips/deprecated/chip/foundation.js","./node_modules/@material/chips/deprecated/chip/component.js","./node_modules/@material/dom/announce.js","./node_modules/@material/chips/deprecated/chip-set/constants.js","./node_modules/@material/chips/deprecated/chip-set/foundation.js","./node_modules/@material/chips/deprecated/chip-set/component.js","./src/components/chip-set/chip-set-input-helpers.ts","./src/components/chip-set/chip-set.scss?tag=limel-chip-set&encapsulation=shadow","./src/components/chip-set/chip-set.tsx"],"sourcesContent":["/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var InteractionTrigger;\n(function (InteractionTrigger) {\n    InteractionTrigger[InteractionTrigger[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n    InteractionTrigger[InteractionTrigger[\"CLICK\"] = 1] = \"CLICK\";\n    InteractionTrigger[InteractionTrigger[\"BACKSPACE_KEY\"] = 2] = \"BACKSPACE_KEY\";\n    InteractionTrigger[InteractionTrigger[\"DELETE_KEY\"] = 3] = \"DELETE_KEY\";\n    InteractionTrigger[InteractionTrigger[\"SPACEBAR_KEY\"] = 4] = \"SPACEBAR_KEY\";\n    InteractionTrigger[InteractionTrigger[\"ENTER_KEY\"] = 5] = \"ENTER_KEY\";\n})(InteractionTrigger || (InteractionTrigger = {}));\nexport var strings = {\n    ARIA_HIDDEN: 'aria-hidden',\n    INTERACTION_EVENT: 'MDCChipTrailingAction:interaction',\n    NAVIGATION_EVENT: 'MDCChipTrailingAction:navigation',\n    TAB_INDEX: 'tabindex',\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { isNavigationEvent, KEY, normalizeKey } from '@material/dom/keyboard';\nimport { InteractionTrigger, strings } from './constants';\nvar MDCChipTrailingActionFoundation = /** @class */ (function (_super) {\n    __extends(MDCChipTrailingActionFoundation, _super);\n    function MDCChipTrailingActionFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCChipTrailingActionFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCChipTrailingActionFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipTrailingActionFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                focus: function () { return undefined; },\n                getAttribute: function () { return null; },\n                setAttribute: function () { return undefined; },\n                notifyInteraction: function () { return undefined; },\n                notifyNavigation: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChipTrailingActionFoundation.prototype.handleClick = function (evt) {\n        evt.stopPropagation();\n        this.adapter.notifyInteraction(InteractionTrigger.CLICK);\n    };\n    MDCChipTrailingActionFoundation.prototype.handleKeydown = function (evt) {\n        evt.stopPropagation();\n        var key = normalizeKey(evt);\n        if (this.shouldNotifyInteractionFromKey(key)) {\n            var trigger = this.getTriggerFromKey(key);\n            this.adapter.notifyInteraction(trigger);\n            return;\n        }\n        if (isNavigationEvent(evt)) {\n            this.adapter.notifyNavigation(key);\n            return;\n        }\n    };\n    MDCChipTrailingActionFoundation.prototype.removeFocus = function () {\n        this.adapter.setAttribute(strings.TAB_INDEX, '-1');\n    };\n    MDCChipTrailingActionFoundation.prototype.focus = function () {\n        this.adapter.setAttribute(strings.TAB_INDEX, '0');\n        this.adapter.focus();\n    };\n    MDCChipTrailingActionFoundation.prototype.isNavigable = function () {\n        return this.adapter.getAttribute(strings.ARIA_HIDDEN) !== 'true';\n    };\n    MDCChipTrailingActionFoundation.prototype.shouldNotifyInteractionFromKey = function (key) {\n        var isFromActionKey = key === KEY.ENTER || key === KEY.SPACEBAR;\n        var isFromDeleteKey = key === KEY.BACKSPACE || key === KEY.DELETE;\n        return isFromActionKey || isFromDeleteKey;\n    };\n    MDCChipTrailingActionFoundation.prototype.getTriggerFromKey = function (key) {\n        if (key === KEY.SPACEBAR) {\n            return InteractionTrigger.SPACEBAR_KEY;\n        }\n        if (key === KEY.ENTER) {\n            return InteractionTrigger.ENTER_KEY;\n        }\n        if (key === KEY.DELETE) {\n            return InteractionTrigger.DELETE_KEY;\n        }\n        if (key === KEY.BACKSPACE) {\n            return InteractionTrigger.BACKSPACE_KEY;\n        }\n        // Default case, should never be returned\n        return InteractionTrigger.UNSPECIFIED;\n    };\n    return MDCChipTrailingActionFoundation;\n}(MDCFoundation));\nexport { MDCChipTrailingActionFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipTrailingActionFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { strings } from './constants';\nimport { MDCChipTrailingActionFoundation } from './foundation';\nvar MDCChipTrailingAction = /** @class */ (function (_super) {\n    __extends(MDCChipTrailingAction, _super);\n    function MDCChipTrailingAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCChipTrailingAction.prototype, \"ripple\", {\n        get: function () {\n            return this.rippleSurface;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChipTrailingAction.attachTo = function (root) {\n        return new MDCChipTrailingAction(root);\n    };\n    MDCChipTrailingAction.prototype.initialize = function (rippleFactory) {\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) {\n            return new MDCRipple(el, foundation);\n        }; }\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var rippleAdapter = MDCRipple.createAdapter(this);\n        this.rippleSurface =\n            rippleFactory(this.root, new MDCRippleFoundation(rippleAdapter));\n    };\n    MDCChipTrailingAction.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleClick = function (evt) {\n            _this.foundation.handleClick(evt);\n        };\n        this.handleKeydown = function (evt) {\n            _this.foundation.handleKeydown(evt);\n        };\n        this.listen('click', this.handleClick);\n        this.listen('keydown', this.handleKeydown);\n    };\n    MDCChipTrailingAction.prototype.destroy = function () {\n        this.rippleSurface.destroy();\n        this.unlisten('click', this.handleClick);\n        this.unlisten('keydown', this.handleKeydown);\n        _super.prototype.destroy.call(this);\n    };\n    MDCChipTrailingAction.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            focus: function () {\n                // TODO(b/157231863): Migate MDCComponent#root to HTMLElement\n                _this.root.focus();\n            },\n            getAttribute: function (attr) { return _this.root.getAttribute(attr); },\n            notifyInteraction: function (trigger) {\n                return _this.emit(strings.INTERACTION_EVENT, { trigger: trigger }, true /* shouldBubble */);\n            },\n            notifyNavigation: function (key) {\n                _this.emit(strings.NAVIGATION_EVENT, { key: key }, true /* shouldBubble */);\n            },\n            setAttribute: function (attr, value) {\n                _this.root.setAttribute(attr, value);\n            },\n        };\n        return new MDCChipTrailingActionFoundation(adapter);\n    };\n    MDCChipTrailingAction.prototype.isNavigable = function () {\n        return this.foundation.isNavigable();\n    };\n    MDCChipTrailingAction.prototype.focus = function () {\n        this.foundation.focus();\n    };\n    MDCChipTrailingAction.prototype.removeFocus = function () {\n        this.foundation.removeFocus();\n    };\n    return MDCChipTrailingAction;\n}(MDCComponent));\nexport { MDCChipTrailingAction };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"left\";\n    Direction[\"RIGHT\"] = \"right\";\n})(Direction || (Direction = {}));\nexport var EventSource;\n(function (EventSource) {\n    EventSource[\"PRIMARY\"] = \"primary\";\n    EventSource[\"TRAILING\"] = \"trailing\";\n    EventSource[\"NONE\"] = \"none\";\n})(EventSource || (EventSource = {}));\nexport var strings = {\n    ADDED_ANNOUNCEMENT_ATTRIBUTE: 'data-mdc-chip-added-announcement',\n    ARIA_CHECKED: 'aria-checked',\n    ARROW_DOWN_KEY: 'ArrowDown',\n    ARROW_LEFT_KEY: 'ArrowLeft',\n    ARROW_RIGHT_KEY: 'ArrowRight',\n    ARROW_UP_KEY: 'ArrowUp',\n    BACKSPACE_KEY: 'Backspace',\n    CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n    DELETE_KEY: 'Delete',\n    END_KEY: 'End',\n    ENTER_KEY: 'Enter',\n    ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n    HOME_KEY: 'Home',\n    IE_ARROW_DOWN_KEY: 'Down',\n    IE_ARROW_LEFT_KEY: 'Left',\n    IE_ARROW_RIGHT_KEY: 'Right',\n    IE_ARROW_UP_KEY: 'Up',\n    IE_DELETE_KEY: 'Del',\n    INTERACTION_EVENT: 'MDCChip:interaction',\n    LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n    NAVIGATION_EVENT: 'MDCChip:navigation',\n    PRIMARY_ACTION_SELECTOR: '.mdc-chip__primary-action',\n    REMOVED_ANNOUNCEMENT_ATTRIBUTE: 'data-mdc-chip-removed-announcement',\n    REMOVAL_EVENT: 'MDCChip:removal',\n    SELECTION_EVENT: 'MDCChip:selection',\n    SPACEBAR_KEY: ' ',\n    TAB_INDEX: 'tabindex',\n    TRAILING_ACTION_SELECTOR: '.mdc-chip-trailing-action',\n    TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n    TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\nexport var cssClasses = {\n    CHECKMARK: 'mdc-chip__checkmark',\n    CHIP_EXIT: 'mdc-chip--exit',\n    DELETABLE: 'mdc-chip--deletable',\n    EDITABLE: 'mdc-chip--editable',\n    EDITING: 'mdc-chip--editing',\n    HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n    LEADING_ICON: 'mdc-chip__icon--leading',\n    PRIMARY_ACTION: 'mdc-chip__primary-action',\n    PRIMARY_ACTION_FOCUSED: 'mdc-chip--primary-action-focused',\n    SELECTED: 'mdc-chip--selected',\n    TEXT: 'mdc-chip__text',\n    TRAILING_ACTION: 'mdc-chip__trailing-action',\n    TRAILING_ICON: 'mdc-chip__icon--trailing',\n};\nexport var navigationKeys = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nnavigationKeys.add(strings.ARROW_LEFT_KEY);\nnavigationKeys.add(strings.ARROW_RIGHT_KEY);\nnavigationKeys.add(strings.ARROW_DOWN_KEY);\nnavigationKeys.add(strings.ARROW_UP_KEY);\nnavigationKeys.add(strings.END_KEY);\nnavigationKeys.add(strings.HOME_KEY);\nnavigationKeys.add(strings.IE_ARROW_LEFT_KEY);\nnavigationKeys.add(strings.IE_ARROW_RIGHT_KEY);\nnavigationKeys.add(strings.IE_ARROW_DOWN_KEY);\nnavigationKeys.add(strings.IE_ARROW_UP_KEY);\nexport var jumpChipKeys = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\njumpChipKeys.add(strings.ARROW_UP_KEY);\njumpChipKeys.add(strings.ARROW_DOWN_KEY);\njumpChipKeys.add(strings.HOME_KEY);\njumpChipKeys.add(strings.END_KEY);\njumpChipKeys.add(strings.IE_ARROW_UP_KEY);\njumpChipKeys.add(strings.IE_ARROW_DOWN_KEY);\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, Direction, EventSource, jumpChipKeys, navigationKeys, strings } from './constants';\nvar emptyClientRect = {\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n};\nvar FocusBehavior;\n(function (FocusBehavior) {\n    FocusBehavior[FocusBehavior[\"SHOULD_FOCUS\"] = 0] = \"SHOULD_FOCUS\";\n    FocusBehavior[FocusBehavior[\"SHOULD_NOT_FOCUS\"] = 1] = \"SHOULD_NOT_FOCUS\";\n})(FocusBehavior || (FocusBehavior = {}));\nvar MDCChipFoundation = /** @class */ (function (_super) {\n    __extends(MDCChipFoundation, _super);\n    function MDCChipFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCChipFoundation.defaultAdapter), adapter)) || this;\n        /** Whether a trailing icon click should immediately trigger exit/removal of the chip. */\n        _this.shouldRemoveOnTrailingIconClick = true;\n        /**\n         * Whether the primary action should receive focus on click. Should only be\n         * set to true for clients who programmatically give focus to a different\n         * element on the page when a chip is clicked (like a menu).\n         */\n        _this.shouldFocusPrimaryActionOnClick = true;\n        return _this;\n    }\n    Object.defineProperty(MDCChipFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                addClassToLeadingIcon: function () { return undefined; },\n                eventTargetHasClass: function () { return false; },\n                focusPrimaryAction: function () { return undefined; },\n                focusTrailingAction: function () { return undefined; },\n                getAttribute: function () { return null; },\n                getCheckmarkBoundingClientRect: function () { return emptyClientRect; },\n                getComputedStyleValue: function () { return ''; },\n                getRootBoundingClientRect: function () { return emptyClientRect; },\n                hasClass: function () { return false; },\n                hasLeadingIcon: function () { return false; },\n                isRTL: function () { return false; },\n                isTrailingActionNavigable: function () { return false; },\n                notifyEditFinish: function () { return undefined; },\n                notifyEditStart: function () { return undefined; },\n                notifyInteraction: function () { return undefined; },\n                notifyNavigation: function () { return undefined; },\n                notifyRemoval: function () { return undefined; },\n                notifySelection: function () { return undefined; },\n                notifyTrailingIconInteraction: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                removeClassFromLeadingIcon: function () { return undefined; },\n                removeTrailingActionFocus: function () { return undefined; },\n                setPrimaryActionAttr: function () { return undefined; },\n                setStyleProperty: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChipFoundation.prototype.isSelected = function () {\n        return this.adapter.hasClass(cssClasses.SELECTED);\n    };\n    MDCChipFoundation.prototype.isEditable = function () {\n        return this.adapter.hasClass(cssClasses.EDITABLE);\n    };\n    MDCChipFoundation.prototype.isEditing = function () {\n        return this.adapter.hasClass(cssClasses.EDITING);\n    };\n    MDCChipFoundation.prototype.setSelected = function (selected) {\n        this.setSelectedImpl(selected);\n        this.notifySelection(selected);\n    };\n    MDCChipFoundation.prototype.setSelectedFromChipSet = function (selected, shouldNotifyClients) {\n        this.setSelectedImpl(selected);\n        if (shouldNotifyClients) {\n            this.notifyIgnoredSelection(selected);\n        }\n    };\n    MDCChipFoundation.prototype.getShouldRemoveOnTrailingIconClick = function () {\n        return this.shouldRemoveOnTrailingIconClick;\n    };\n    MDCChipFoundation.prototype.setShouldRemoveOnTrailingIconClick = function (shouldRemove) {\n        this.shouldRemoveOnTrailingIconClick = shouldRemove;\n    };\n    MDCChipFoundation.prototype.setShouldFocusPrimaryActionOnClick = function (shouldFocus) {\n        this.shouldFocusPrimaryActionOnClick = shouldFocus;\n    };\n    MDCChipFoundation.prototype.getDimensions = function () {\n        var _this = this;\n        var getRootRect = function () { return _this.adapter.getRootBoundingClientRect(); };\n        var getCheckmarkRect = function () {\n            return _this.adapter.getCheckmarkBoundingClientRect();\n        };\n        // When a chip has a checkmark and not a leading icon, the bounding rect changes in size depending on the current\n        // size of the checkmark.\n        if (!this.adapter.hasLeadingIcon()) {\n            var checkmarkRect = getCheckmarkRect();\n            if (checkmarkRect) {\n                var rootRect = getRootRect();\n                // Checkmark is a square, meaning the client rect's width and height are identical once the animation completes.\n                // However, the checkbox is initially hidden by setting the width to 0.\n                // To account for an initial width of 0, we use the checkbox's height instead (which equals the end-state width)\n                // when adding it to the root client rect's width.\n                return {\n                    bottom: rootRect.bottom,\n                    height: rootRect.height,\n                    left: rootRect.left,\n                    right: rootRect.right,\n                    top: rootRect.top,\n                    width: rootRect.width + checkmarkRect.height,\n                };\n            }\n        }\n        return getRootRect();\n    };\n    /**\n     * Begins the exit animation which leads to removal of the chip.\n     */\n    MDCChipFoundation.prototype.beginExit = function () {\n        this.adapter.addClass(cssClasses.CHIP_EXIT);\n    };\n    MDCChipFoundation.prototype.handleClick = function () {\n        this.adapter.notifyInteraction();\n        this.setPrimaryActionFocusable(this.getFocusBehavior());\n    };\n    MDCChipFoundation.prototype.handleDoubleClick = function () {\n        if (this.isEditable()) {\n            this.startEditing();\n        }\n    };\n    /**\n     * Handles a transition end event on the root element.\n     */\n    MDCChipFoundation.prototype.handleTransitionEnd = function (evt) {\n        var _this = this;\n        // Handle transition end event on the chip when it is about to be removed.\n        var shouldHandle = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHIP_EXIT);\n        var widthIsAnimating = evt.propertyName === 'width';\n        var opacityIsAnimating = evt.propertyName === 'opacity';\n        if (shouldHandle && opacityIsAnimating) {\n            // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n            var chipWidth_1 = this.adapter.getComputedStyleValue('width');\n            // On the next frame (once we get the computed width), explicitly set the chip's width\n            // to its current pixel width, so we aren't transitioning out of 'auto'.\n            requestAnimationFrame(function () {\n                _this.adapter.setStyleProperty('width', chipWidth_1);\n                // To mitigate jitter, start transitioning padding and margin before width.\n                _this.adapter.setStyleProperty('padding', '0');\n                _this.adapter.setStyleProperty('margin', '0');\n                // On the next frame (once width is explicitly set), transition width to 0.\n                requestAnimationFrame(function () {\n                    _this.adapter.setStyleProperty('width', '0');\n                });\n            });\n            return;\n        }\n        if (shouldHandle && widthIsAnimating) {\n            this.removeFocus();\n            var removedAnnouncement = this.adapter.getAttribute(strings.REMOVED_ANNOUNCEMENT_ATTRIBUTE);\n            this.adapter.notifyRemoval(removedAnnouncement);\n        }\n        // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n        if (!opacityIsAnimating) {\n            return;\n        }\n        var shouldHideLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.LEADING_ICON) &&\n            this.adapter.hasClass(cssClasses.SELECTED);\n        var shouldShowLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHECKMARK) &&\n            !this.adapter.hasClass(cssClasses.SELECTED);\n        if (shouldHideLeadingIcon) {\n            this.adapter.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n            return;\n        }\n        if (shouldShowLeadingIcon) {\n            this.adapter.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n            return;\n        }\n    };\n    MDCChipFoundation.prototype.handleFocusIn = function (evt) {\n        // Early exit if the event doesn't come from the primary action\n        if (!this.eventFromPrimaryAction(evt)) {\n            return;\n        }\n        this.adapter.addClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n    };\n    MDCChipFoundation.prototype.handleFocusOut = function (evt) {\n        // Early exit if the event doesn't come from the primary action\n        if (!this.eventFromPrimaryAction(evt)) {\n            return;\n        }\n        if (this.isEditing()) {\n            this.finishEditing();\n        }\n        this.adapter.removeClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n    };\n    /**\n     * Handles an interaction event on the trailing icon element. This is used to\n     * prevent the ripple from activating on interaction with the trailing icon.\n     */\n    MDCChipFoundation.prototype.handleTrailingActionInteraction = function () {\n        this.adapter.notifyTrailingIconInteraction();\n        this.removeChip();\n    };\n    /**\n     * Handles a keydown event from the root element.\n     */\n    MDCChipFoundation.prototype.handleKeydown = function (evt) {\n        if (this.isEditing()) {\n            if (this.shouldFinishEditing(evt)) {\n                evt.preventDefault();\n                this.finishEditing();\n            }\n            // When editing, the foundation should only handle key events that finish\n            // the editing process.\n            return;\n        }\n        if (this.isEditable()) {\n            if (this.shouldStartEditing(evt)) {\n                evt.preventDefault();\n                this.startEditing();\n            }\n        }\n        if (this.shouldNotifyInteraction(evt)) {\n            this.adapter.notifyInteraction();\n            this.setPrimaryActionFocusable(this.getFocusBehavior());\n            return;\n        }\n        if (this.isDeleteAction(evt)) {\n            evt.preventDefault();\n            this.removeChip();\n            return;\n        }\n        // Early exit if the key is not usable\n        if (!navigationKeys.has(evt.key)) {\n            return;\n        }\n        // Prevent default behavior for movement keys which could include scrolling\n        evt.preventDefault();\n        this.focusNextAction(evt.key, EventSource.PRIMARY);\n    };\n    MDCChipFoundation.prototype.handleTrailingActionNavigation = function (evt) {\n        this.focusNextAction(evt.detail.key, EventSource.TRAILING);\n    };\n    /**\n     * Called by the chip set to remove focus from the chip actions.\n     */\n    MDCChipFoundation.prototype.removeFocus = function () {\n        this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n        this.adapter.removeTrailingActionFocus();\n    };\n    /**\n     * Called by the chip set to focus the primary action.\n     *\n     */\n    MDCChipFoundation.prototype.focusPrimaryAction = function () {\n        this.setPrimaryActionFocusable(FocusBehavior.SHOULD_FOCUS);\n    };\n    /**\n     * Called by the chip set to focus the trailing action (if present), otherwise\n     * gives focus to the trailing action.\n     */\n    MDCChipFoundation.prototype.focusTrailingAction = function () {\n        var trailingActionIsNavigable = this.adapter.isTrailingActionNavigable();\n        if (trailingActionIsNavigable) {\n            this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n            this.adapter.focusTrailingAction();\n            return;\n        }\n        this.focusPrimaryAction();\n    };\n    MDCChipFoundation.prototype.setPrimaryActionFocusable = function (focusBehavior) {\n        this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '0');\n        if (focusBehavior === FocusBehavior.SHOULD_FOCUS) {\n            this.adapter.focusPrimaryAction();\n        }\n        this.adapter.removeTrailingActionFocus();\n    };\n    MDCChipFoundation.prototype.getFocusBehavior = function () {\n        if (this.shouldFocusPrimaryActionOnClick) {\n            return FocusBehavior.SHOULD_FOCUS;\n        }\n        return FocusBehavior.SHOULD_NOT_FOCUS;\n    };\n    MDCChipFoundation.prototype.focusNextAction = function (key, source) {\n        var isTrailingActionNavigable = this.adapter.isTrailingActionNavigable();\n        var dir = this.getDirection(key);\n        // Early exit if the key should jump chips\n        if (jumpChipKeys.has(key) || !isTrailingActionNavigable) {\n            this.adapter.notifyNavigation(key, source);\n            return;\n        }\n        if (source === EventSource.PRIMARY && dir === Direction.RIGHT) {\n            this.focusTrailingAction();\n            return;\n        }\n        if (source === EventSource.TRAILING && dir === Direction.LEFT) {\n            this.focusPrimaryAction();\n            return;\n        }\n        this.adapter.notifyNavigation(key, EventSource.NONE);\n    };\n    MDCChipFoundation.prototype.getDirection = function (key) {\n        var isRTL = this.adapter.isRTL();\n        var isLeftKey = key === strings.ARROW_LEFT_KEY || key === strings.IE_ARROW_LEFT_KEY;\n        var isRightKey = key === strings.ARROW_RIGHT_KEY || key === strings.IE_ARROW_RIGHT_KEY;\n        if (!isRTL && isLeftKey || isRTL && isRightKey) {\n            return Direction.LEFT;\n        }\n        return Direction.RIGHT;\n    };\n    MDCChipFoundation.prototype.removeChip = function () {\n        if (this.shouldRemoveOnTrailingIconClick) {\n            this.beginExit();\n        }\n    };\n    MDCChipFoundation.prototype.shouldStartEditing = function (evt) {\n        return this.eventFromPrimaryAction(evt) && evt.key === strings.ENTER_KEY;\n    };\n    MDCChipFoundation.prototype.shouldFinishEditing = function (evt) {\n        return evt.key === strings.ENTER_KEY;\n    };\n    MDCChipFoundation.prototype.shouldNotifyInteraction = function (evt) {\n        return evt.key === strings.ENTER_KEY || evt.key === strings.SPACEBAR_KEY;\n    };\n    MDCChipFoundation.prototype.isDeleteAction = function (evt) {\n        var isDeletable = this.adapter.hasClass(cssClasses.DELETABLE);\n        return isDeletable &&\n            (evt.key === strings.BACKSPACE_KEY || evt.key === strings.DELETE_KEY ||\n                evt.key === strings.IE_DELETE_KEY);\n    };\n    MDCChipFoundation.prototype.setSelectedImpl = function (selected) {\n        if (selected) {\n            this.adapter.addClass(cssClasses.SELECTED);\n            this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'true');\n        }\n        else {\n            this.adapter.removeClass(cssClasses.SELECTED);\n            this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'false');\n        }\n    };\n    MDCChipFoundation.prototype.notifySelection = function (selected) {\n        this.adapter.notifySelection(selected, false);\n    };\n    MDCChipFoundation.prototype.notifyIgnoredSelection = function (selected) {\n        this.adapter.notifySelection(selected, true);\n    };\n    MDCChipFoundation.prototype.eventFromPrimaryAction = function (evt) {\n        return this.adapter.eventTargetHasClass(evt.target, cssClasses.PRIMARY_ACTION);\n    };\n    MDCChipFoundation.prototype.startEditing = function () {\n        this.adapter.addClass(cssClasses.EDITING);\n        this.adapter.notifyEditStart();\n    };\n    MDCChipFoundation.prototype.finishEditing = function () {\n        this.adapter.removeClass(cssClasses.EDITING);\n        this.adapter.notifyEditFinish();\n    };\n    return MDCChipFoundation;\n}(MDCFoundation));\nexport { MDCChipFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { MDCChipTrailingAction } from '../trailingaction/component';\nimport { strings as trailingActionStrings } from '../trailingaction/constants';\nimport { strings } from './constants';\nimport { MDCChipFoundation } from './foundation';\nvar MDCChip = /** @class */ (function (_super) {\n    __extends(MDCChip, _super);\n    function MDCChip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCChip.prototype, \"selected\", {\n        /**\n         * @return Whether the chip is selected.\n         */\n        get: function () {\n            return this.foundation.isSelected();\n        },\n        /**\n         * Sets selected state on the chip.\n         */\n        set: function (selected) {\n            this.foundation.setSelected(selected);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"shouldRemoveOnTrailingIconClick\", {\n        /**\n         * @return Whether a trailing icon click should trigger exit/removal of the chip.\n         */\n        get: function () {\n            return this.foundation.getShouldRemoveOnTrailingIconClick();\n        },\n        /**\n         * Sets whether a trailing icon click should trigger exit/removal of the chip.\n         */\n        set: function (shouldRemove) {\n            this.foundation.setShouldRemoveOnTrailingIconClick(shouldRemove);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"setShouldFocusPrimaryActionOnClick\", {\n        /**\n         * Sets whether a clicking on the chip should focus the primary action.\n         */\n        set: function (shouldFocus) {\n            this.foundation.setShouldFocusPrimaryActionOnClick(shouldFocus);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"ripple\", {\n        get: function () {\n            return this.rippleSurface;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"id\", {\n        get: function () {\n            return this.root.id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChip.attachTo = function (root) {\n        return new MDCChip(root);\n    };\n    MDCChip.prototype.initialize = function (rippleFactory, trailingActionFactory) {\n        var _this = this;\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) { return new MDCRipple(el, foundation); }; }\n        if (trailingActionFactory === void 0) { trailingActionFactory = function (el) { return new MDCChipTrailingAction(el); }; }\n        this.leadingIcon = this.root.querySelector(strings.LEADING_ICON_SELECTOR);\n        this.checkmark = this.root.querySelector(strings.CHECKMARK_SELECTOR);\n        this.primaryAction =\n            this.root.querySelector(strings.PRIMARY_ACTION_SELECTOR);\n        var trailingActionEl = this.root.querySelector(strings.TRAILING_ACTION_SELECTOR);\n        if (trailingActionEl) {\n            this.trailingAction = trailingActionFactory(trailingActionEl);\n        }\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var rippleAdapter = __assign(__assign({}, MDCRipple.createAdapter(this)), { computeBoundingRect: function () { return _this.foundation.getDimensions(); } });\n        this.rippleSurface =\n            rippleFactory(this.root, new MDCRippleFoundation(rippleAdapter));\n    };\n    MDCChip.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        // Custom events\n        this.handleTrailingActionInteraction = function () {\n            _this.foundation.handleTrailingActionInteraction();\n        };\n        this.handleTrailingActionNavigation =\n            function (evt) {\n                _this.foundation.handleTrailingActionNavigation(evt);\n            };\n        // Native events\n        this.handleClick = function () {\n            _this.foundation.handleClick();\n        };\n        this.handleKeydown = function (evt) {\n            _this.foundation.handleKeydown(evt);\n        };\n        this.handleTransitionEnd = function (evt) {\n            _this.foundation.handleTransitionEnd(evt);\n        };\n        this.handleFocusIn = function (evt) {\n            _this.foundation.handleFocusIn(evt);\n        };\n        this.handleFocusOut = function (evt) {\n            _this.foundation.handleFocusOut(evt);\n        };\n        this.listen('transitionend', this.handleTransitionEnd);\n        this.listen('click', this.handleClick);\n        this.listen('keydown', this.handleKeydown);\n        this.listen('focusin', this.handleFocusIn);\n        this.listen('focusout', this.handleFocusOut);\n        if (this.trailingAction) {\n            this.listen(trailingActionStrings.INTERACTION_EVENT, this.handleTrailingActionInteraction);\n            this.listen(trailingActionStrings.NAVIGATION_EVENT, this.handleTrailingActionNavigation);\n        }\n    };\n    MDCChip.prototype.destroy = function () {\n        this.rippleSurface.destroy();\n        this.unlisten('transitionend', this.handleTransitionEnd);\n        this.unlisten('keydown', this.handleKeydown);\n        this.unlisten('click', this.handleClick);\n        this.unlisten('focusin', this.handleFocusIn);\n        this.unlisten('focusout', this.handleFocusOut);\n        if (this.trailingAction) {\n            this.unlisten(trailingActionStrings.INTERACTION_EVENT, this.handleTrailingActionInteraction);\n            this.unlisten(trailingActionStrings.NAVIGATION_EVENT, this.handleTrailingActionNavigation);\n        }\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Begins the exit animation which leads to removal of the chip.\n     */\n    MDCChip.prototype.beginExit = function () {\n        this.foundation.beginExit();\n    };\n    MDCChip.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            addClassToLeadingIcon: function (className) {\n                if (_this.leadingIcon) {\n                    _this.leadingIcon.classList.add(className);\n                }\n            },\n            eventTargetHasClass: function (target, className) {\n                return target ? target.classList.contains(className) : false;\n            },\n            focusPrimaryAction: function () {\n                if (_this.primaryAction) {\n                    _this.primaryAction.focus();\n                }\n            },\n            focusTrailingAction: function () {\n                if (_this.trailingAction) {\n                    _this.trailingAction.focus();\n                }\n            },\n            getAttribute: function (attr) { return _this.root.getAttribute(attr); },\n            getCheckmarkBoundingClientRect: function () {\n                return _this.checkmark ? _this.checkmark.getBoundingClientRect() : null;\n            },\n            getComputedStyleValue: function (propertyName) {\n                return window.getComputedStyle(_this.root).getPropertyValue(propertyName);\n            },\n            getRootBoundingClientRect: function () { return _this.root.getBoundingClientRect(); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            hasLeadingIcon: function () { return !!_this.leadingIcon; },\n            isRTL: function () { return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl'; },\n            isTrailingActionNavigable: function () {\n                if (_this.trailingAction) {\n                    return _this.trailingAction.isNavigable();\n                }\n                return false;\n            },\n            notifyInteraction: function () { return _this.emit(strings.INTERACTION_EVENT, { chipId: _this.id }, true /* shouldBubble */); },\n            notifyNavigation: function (key, source) {\n                return _this.emit(strings.NAVIGATION_EVENT, { chipId: _this.id, key: key, source: source }, true /* shouldBubble */);\n            },\n            notifyRemoval: function (removedAnnouncement) {\n                _this.emit(strings.REMOVAL_EVENT, { chipId: _this.id, removedAnnouncement: removedAnnouncement }, true /* shouldBubble */);\n            },\n            notifySelection: function (selected, shouldIgnore) {\n                return _this.emit(strings.SELECTION_EVENT, { chipId: _this.id, selected: selected, shouldIgnore: shouldIgnore }, true /* shouldBubble */);\n            },\n            notifyTrailingIconInteraction: function () {\n                return _this.emit(strings.TRAILING_ICON_INTERACTION_EVENT, { chipId: _this.id }, true /* shouldBubble */);\n            },\n            notifyEditStart: function () { },\n            notifyEditFinish: function () { },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            removeClassFromLeadingIcon: function (className) {\n                if (_this.leadingIcon) {\n                    _this.leadingIcon.classList.remove(className);\n                }\n            },\n            removeTrailingActionFocus: function () {\n                if (_this.trailingAction) {\n                    _this.trailingAction.removeFocus();\n                }\n            },\n            setPrimaryActionAttr: function (attr, value) {\n                if (_this.primaryAction) {\n                    _this.primaryAction.setAttribute(attr, value);\n                }\n            },\n            setStyleProperty: function (propertyName, value) {\n                return _this.root.style.setProperty(propertyName, value);\n            },\n        };\n        return new MDCChipFoundation(adapter);\n    };\n    MDCChip.prototype.setSelectedFromChipSet = function (selected, shouldNotifyClients) {\n        this.foundation.setSelectedFromChipSet(selected, shouldNotifyClients);\n    };\n    MDCChip.prototype.focusPrimaryAction = function () {\n        this.foundation.focusPrimaryAction();\n    };\n    MDCChip.prototype.focusTrailingAction = function () {\n        this.foundation.focusTrailingAction();\n    };\n    MDCChip.prototype.removeFocus = function () {\n        this.foundation.removeFocus();\n    };\n    MDCChip.prototype.remove = function () {\n        var parent = this.root.parentNode;\n        if (parent !== null) {\n            parent.removeChild(this.root);\n        }\n    };\n    return MDCChip;\n}(MDCComponent));\nexport { MDCChip };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Priorities for the announce function.\n */\nexport var AnnouncerPriority;\n(function (AnnouncerPriority) {\n    AnnouncerPriority[\"POLITE\"] = \"polite\";\n    AnnouncerPriority[\"ASSERTIVE\"] = \"assertive\";\n})(AnnouncerPriority || (AnnouncerPriority = {}));\n/**\n * Data attribute added to live region element.\n */\nexport var DATA_MDC_DOM_ANNOUNCE = 'data-mdc-dom-announce';\n/**\n * Announces the given message with optional priority, defaulting to \"polite\"\n */\nexport function announce(message, options) {\n    Announcer.getInstance().say(message, options);\n}\nvar Announcer = /** @class */ (function () {\n    // Constructor made private to ensure only the singleton is used\n    function Announcer() {\n        this.liveRegions = new Map();\n    }\n    Announcer.getInstance = function () {\n        if (!Announcer.instance) {\n            Announcer.instance = new Announcer();\n        }\n        return Announcer.instance;\n    };\n    Announcer.prototype.say = function (message, options) {\n        var _a, _b;\n        var priority = (_a = options === null || options === void 0 ? void 0 : options.priority) !== null && _a !== void 0 ? _a : AnnouncerPriority.POLITE;\n        var ownerDocument = (_b = options === null || options === void 0 ? void 0 : options.ownerDocument) !== null && _b !== void 0 ? _b : document;\n        var liveRegion = this.getLiveRegion(priority, ownerDocument);\n        // Reset the region to pick up the message, even if the message is the\n        // exact same as before.\n        liveRegion.textContent = '';\n        // Timeout is necessary for screen readers like NVDA and VoiceOver.\n        setTimeout(function () {\n            liveRegion.textContent = message;\n            ownerDocument.addEventListener('click', clearLiveRegion);\n        }, 1);\n        function clearLiveRegion() {\n            liveRegion.textContent = '';\n            ownerDocument.removeEventListener('click', clearLiveRegion);\n        }\n    };\n    Announcer.prototype.getLiveRegion = function (priority, ownerDocument) {\n        var documentLiveRegions = this.liveRegions.get(ownerDocument);\n        if (!documentLiveRegions) {\n            documentLiveRegions = new Map();\n            this.liveRegions.set(ownerDocument, documentLiveRegions);\n        }\n        var existingLiveRegion = documentLiveRegions.get(priority);\n        if (existingLiveRegion &&\n            ownerDocument.body.contains(existingLiveRegion)) {\n            return existingLiveRegion;\n        }\n        var liveRegion = this.createLiveRegion(priority, ownerDocument);\n        documentLiveRegions.set(priority, liveRegion);\n        return liveRegion;\n    };\n    Announcer.prototype.createLiveRegion = function (priority, ownerDocument) {\n        var el = ownerDocument.createElement('div');\n        el.style.position = 'absolute';\n        el.style.top = '-9999px';\n        el.style.left = '-9999px';\n        el.style.height = '1px';\n        el.style.overflow = 'hidden';\n        el.setAttribute('aria-atomic', 'true');\n        el.setAttribute('aria-live', priority);\n        el.setAttribute(DATA_MDC_DOM_ANNOUNCE, 'true');\n        ownerDocument.body.appendChild(el);\n        return el;\n    };\n    return Announcer;\n}());\n//# sourceMappingURL=announce.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var strings = {\n    CHIP_SELECTOR: '.mdc-chip',\n};\nexport var cssClasses = {\n    CHOICE: 'mdc-chip-set--choice',\n    FILTER: 'mdc-chip-set--filter',\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { Direction, EventSource, jumpChipKeys, navigationKeys, strings as chipStrings } from '../chip/constants';\nimport { cssClasses, strings } from './constants';\nvar MDCChipSetFoundation = /** @class */ (function (_super) {\n    __extends(MDCChipSetFoundation, _super);\n    function MDCChipSetFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCChipSetFoundation.defaultAdapter), adapter)) || this;\n        /**\n         * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.\n         */\n        _this.selectedChipIds = [];\n        return _this;\n    }\n    Object.defineProperty(MDCChipSetFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipSetFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipSetFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                announceMessage: function () { return undefined; },\n                focusChipPrimaryActionAtIndex: function () { return undefined; },\n                focusChipTrailingActionAtIndex: function () { return undefined; },\n                getChipListCount: function () { return -1; },\n                getIndexOfChipById: function () { return -1; },\n                hasClass: function () { return false; },\n                isRTL: function () { return false; },\n                removeChipAtIndex: function () { return undefined; },\n                removeFocusFromChipAtIndex: function () { return undefined; },\n                selectChipAtIndex: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns an array of the IDs of all selected chips.\n     */\n    MDCChipSetFoundation.prototype.getSelectedChipIds = function () {\n        return this.selectedChipIds.slice();\n    };\n    /**\n     * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.\n     * Does not notify clients of the updated selection state.\n     */\n    MDCChipSetFoundation.prototype.select = function (chipId) {\n        this.selectImpl(chipId, false);\n    };\n    /**\n     * Handles a chip interaction event\n     */\n    MDCChipSetFoundation.prototype.handleChipInteraction = function (_a) {\n        var chipId = _a.chipId;\n        var index = this.adapter.getIndexOfChipById(chipId);\n        this.removeFocusFromChipsExcept(index);\n        if (this.adapter.hasClass(cssClasses.CHOICE) ||\n            this.adapter.hasClass(cssClasses.FILTER)) {\n            this.toggleSelect(chipId);\n        }\n    };\n    /**\n     * Handles a chip selection event, used to handle discrepancy when selection state is set directly on the Chip.\n     */\n    MDCChipSetFoundation.prototype.handleChipSelection = function (_a) {\n        var chipId = _a.chipId, selected = _a.selected, shouldIgnore = _a.shouldIgnore;\n        // Early exit if we should ignore the event\n        if (shouldIgnore) {\n            return;\n        }\n        var chipIsSelected = this.selectedChipIds.indexOf(chipId) >= 0;\n        if (selected && !chipIsSelected) {\n            this.select(chipId);\n        }\n        else if (!selected && chipIsSelected) {\n            this.deselectImpl(chipId);\n        }\n    };\n    /**\n     * Handles the event when a chip is removed.\n     */\n    MDCChipSetFoundation.prototype.handleChipRemoval = function (_a) {\n        var chipId = _a.chipId, removedAnnouncement = _a.removedAnnouncement;\n        if (removedAnnouncement) {\n            this.adapter.announceMessage(removedAnnouncement);\n        }\n        var index = this.adapter.getIndexOfChipById(chipId);\n        this.deselectAndNotifyClients(chipId);\n        this.adapter.removeChipAtIndex(index);\n        var maxIndex = this.adapter.getChipListCount() - 1;\n        if (maxIndex < 0) {\n            return;\n        }\n        var nextIndex = Math.min(index, maxIndex);\n        this.removeFocusFromChipsExcept(nextIndex);\n        // After removing a chip, we should focus the trailing action for the next chip.\n        this.adapter.focusChipTrailingActionAtIndex(nextIndex);\n    };\n    /**\n     * Handles a chip navigation event.\n     */\n    MDCChipSetFoundation.prototype.handleChipNavigation = function (_a) {\n        var chipId = _a.chipId, key = _a.key, source = _a.source;\n        var maxIndex = this.adapter.getChipListCount() - 1;\n        var index = this.adapter.getIndexOfChipById(chipId);\n        // Early exit if the index is out of range or the key is unusable\n        if (index === -1 || !navigationKeys.has(key)) {\n            return;\n        }\n        var isRTL = this.adapter.isRTL();\n        var isLeftKey = key === chipStrings.ARROW_LEFT_KEY ||\n            key === chipStrings.IE_ARROW_LEFT_KEY;\n        var isRightKey = key === chipStrings.ARROW_RIGHT_KEY ||\n            key === chipStrings.IE_ARROW_RIGHT_KEY;\n        var isDownKey = key === chipStrings.ARROW_DOWN_KEY ||\n            key === chipStrings.IE_ARROW_DOWN_KEY;\n        var shouldIncrement = !isRTL && isRightKey || isRTL && isLeftKey || isDownKey;\n        var isHome = key === chipStrings.HOME_KEY;\n        var isEnd = key === chipStrings.END_KEY;\n        if (shouldIncrement) {\n            index++;\n        }\n        else if (isHome) {\n            index = 0;\n        }\n        else if (isEnd) {\n            index = maxIndex;\n        }\n        else {\n            index--;\n        }\n        // Early exit if the index is out of bounds\n        if (index < 0 || index > maxIndex) {\n            return;\n        }\n        this.removeFocusFromChipsExcept(index);\n        this.focusChipAction(index, key, source);\n    };\n    MDCChipSetFoundation.prototype.focusChipAction = function (index, key, source) {\n        var shouldJumpChips = jumpChipKeys.has(key);\n        if (shouldJumpChips && source === EventSource.PRIMARY) {\n            return this.adapter.focusChipPrimaryActionAtIndex(index);\n        }\n        if (shouldJumpChips && source === EventSource.TRAILING) {\n            return this.adapter.focusChipTrailingActionAtIndex(index);\n        }\n        var dir = this.getDirection(key);\n        if (dir === Direction.LEFT) {\n            return this.adapter.focusChipTrailingActionAtIndex(index);\n        }\n        if (dir === Direction.RIGHT) {\n            return this.adapter.focusChipPrimaryActionAtIndex(index);\n        }\n    };\n    MDCChipSetFoundation.prototype.getDirection = function (key) {\n        var isRTL = this.adapter.isRTL();\n        var isLeftKey = key === chipStrings.ARROW_LEFT_KEY ||\n            key === chipStrings.IE_ARROW_LEFT_KEY;\n        var isRightKey = key === chipStrings.ARROW_RIGHT_KEY ||\n            key === chipStrings.IE_ARROW_RIGHT_KEY;\n        if (!isRTL && isLeftKey || isRTL && isRightKey) {\n            return Direction.LEFT;\n        }\n        return Direction.RIGHT;\n    };\n    /**\n     * Deselects the chip with the given id and optionally notifies clients.\n     */\n    MDCChipSetFoundation.prototype.deselectImpl = function (chipId, shouldNotifyClients) {\n        if (shouldNotifyClients === void 0) { shouldNotifyClients = false; }\n        var index = this.selectedChipIds.indexOf(chipId);\n        if (index >= 0) {\n            this.selectedChipIds.splice(index, 1);\n            var chipIndex = this.adapter.getIndexOfChipById(chipId);\n            this.adapter.selectChipAtIndex(chipIndex, /** isSelected */ false, shouldNotifyClients);\n        }\n    };\n    /**\n     * Deselects the chip with the given id and notifies clients.\n     */\n    MDCChipSetFoundation.prototype.deselectAndNotifyClients = function (chipId) {\n        this.deselectImpl(chipId, true);\n    };\n    /**\n     * Toggles selection of the chip with the given id.\n     */\n    MDCChipSetFoundation.prototype.toggleSelect = function (chipId) {\n        if (this.selectedChipIds.indexOf(chipId) >= 0) {\n            this.deselectAndNotifyClients(chipId);\n        }\n        else {\n            this.selectAndNotifyClients(chipId);\n        }\n    };\n    MDCChipSetFoundation.prototype.removeFocusFromChipsExcept = function (index) {\n        var chipCount = this.adapter.getChipListCount();\n        for (var i = 0; i < chipCount; i++) {\n            if (i !== index) {\n                this.adapter.removeFocusFromChipAtIndex(i);\n            }\n        }\n    };\n    MDCChipSetFoundation.prototype.selectAndNotifyClients = function (chipId) {\n        this.selectImpl(chipId, true);\n    };\n    MDCChipSetFoundation.prototype.selectImpl = function (chipId, shouldNotifyClients) {\n        if (this.selectedChipIds.indexOf(chipId) >= 0) {\n            return;\n        }\n        if (this.adapter.hasClass(cssClasses.CHOICE) &&\n            this.selectedChipIds.length > 0) {\n            var previouslySelectedChip = this.selectedChipIds[0];\n            var previouslySelectedIndex = this.adapter.getIndexOfChipById(previouslySelectedChip);\n            this.selectedChipIds = [];\n            this.adapter.selectChipAtIndex(previouslySelectedIndex, /** isSelected */ false, shouldNotifyClients);\n        }\n        this.selectedChipIds.push(chipId);\n        var index = this.adapter.getIndexOfChipById(chipId);\n        this.adapter.selectChipAtIndex(index, /** isSelected */ true, shouldNotifyClients);\n    };\n    return MDCChipSetFoundation;\n}(MDCFoundation));\nexport { MDCChipSetFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipSetFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends, __values } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { announce } from '@material/dom/announce';\nimport { MDCChip } from '../chip/component';\nimport { MDCChipFoundation } from '../chip/foundation';\nimport { MDCChipSetFoundation } from './foundation';\nvar _a = MDCChipFoundation.strings, INTERACTION_EVENT = _a.INTERACTION_EVENT, SELECTION_EVENT = _a.SELECTION_EVENT, REMOVAL_EVENT = _a.REMOVAL_EVENT, NAVIGATION_EVENT = _a.NAVIGATION_EVENT;\nvar CHIP_SELECTOR = MDCChipSetFoundation.strings.CHIP_SELECTOR;\nvar idCounter = 0;\nvar MDCChipSet = /** @class */ (function (_super) {\n    __extends(MDCChipSet, _super);\n    function MDCChipSet() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCChipSet.attachTo = function (root) {\n        return new MDCChipSet(root);\n    };\n    Object.defineProperty(MDCChipSet.prototype, \"chips\", {\n        get: function () {\n            return this.chipsList.slice();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipSet.prototype, \"selectedChipIds\", {\n        /**\n         * @return An array of the IDs of all selected chips.\n         */\n        get: function () {\n            return this.foundation.getSelectedChipIds();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @param chipFactory A function which creates a new MDCChip.\n     */\n    MDCChipSet.prototype.initialize = function (chipFactory) {\n        if (chipFactory === void 0) { chipFactory = function (el) { return new MDCChip(el); }; }\n        this.chipFactory = chipFactory;\n        this.chipsList = this.instantiateChips(this.chipFactory);\n    };\n    MDCChipSet.prototype.initialSyncWithDOM = function () {\n        var e_1, _a;\n        var _this = this;\n        try {\n            for (var _b = __values(this.chipsList), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var chip = _c.value;\n                if (chip.id && chip.selected) {\n                    this.foundation.select(chip.id);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.handleChipInteraction = function (evt) {\n            return _this.foundation.handleChipInteraction(evt.detail);\n        };\n        this.handleChipSelection = function (evt) {\n            return _this.foundation.handleChipSelection(evt.detail);\n        };\n        this.handleChipRemoval = function (evt) {\n            return _this.foundation.handleChipRemoval(evt.detail);\n        };\n        this.handleChipNavigation = function (evt) {\n            return _this.foundation.handleChipNavigation(evt.detail);\n        };\n        this.listen(INTERACTION_EVENT, this.handleChipInteraction);\n        this.listen(SELECTION_EVENT, this.handleChipSelection);\n        this.listen(REMOVAL_EVENT, this.handleChipRemoval);\n        this.listen(NAVIGATION_EVENT, this.handleChipNavigation);\n    };\n    MDCChipSet.prototype.destroy = function () {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this.chipsList), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var chip = _c.value;\n                chip.destroy();\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        this.unlisten(INTERACTION_EVENT, this.handleChipInteraction);\n        this.unlisten(SELECTION_EVENT, this.handleChipSelection);\n        this.unlisten(REMOVAL_EVENT, this.handleChipRemoval);\n        this.unlisten(NAVIGATION_EVENT, this.handleChipNavigation);\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Adds a new chip object to the chip set from the given chip element.\n     */\n    MDCChipSet.prototype.addChip = function (chipEl) {\n        chipEl.id = chipEl.id || \"mdc-chip-\" + ++idCounter;\n        this.chipsList.push(this.chipFactory(chipEl));\n    };\n    MDCChipSet.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            announceMessage: function (message) {\n                announce(message);\n            },\n            focusChipPrimaryActionAtIndex: function (index) {\n                _this.chipsList[index].focusPrimaryAction();\n            },\n            focusChipTrailingActionAtIndex: function (index) {\n                _this.chipsList[index].focusTrailingAction();\n            },\n            getChipListCount: function () { return _this.chips.length; },\n            getIndexOfChipById: function (chipId) {\n                return _this.findChipIndex(chipId);\n            },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            isRTL: function () { return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl'; },\n            removeChipAtIndex: function (index) {\n                if (index >= 0 && index < _this.chips.length) {\n                    _this.chipsList[index].destroy();\n                    _this.chipsList[index].remove();\n                    _this.chipsList.splice(index, 1);\n                }\n            },\n            removeFocusFromChipAtIndex: function (index) {\n                _this.chipsList[index].removeFocus();\n            },\n            selectChipAtIndex: function (index, selected, shouldNotifyClients) {\n                if (index >= 0 && index < _this.chips.length) {\n                    _this.chipsList[index].setSelectedFromChipSet(selected, shouldNotifyClients);\n                }\n            },\n        };\n        return new MDCChipSetFoundation(adapter);\n    };\n    /**\n     * Instantiates chip components on all of the chip set's child chip elements.\n     */\n    MDCChipSet.prototype.instantiateChips = function (chipFactory) {\n        var chipElements = [].slice.call(this.root.querySelectorAll(CHIP_SELECTOR));\n        return chipElements.map(function (el) {\n            el.id = el.id || \"mdc-chip-\" + ++idCounter;\n            return chipFactory(el);\n        });\n    };\n    /**\n     * Returns the index of the chip with the given id, or -1 if the chip does not exist.\n     */\n    MDCChipSet.prototype.findChipIndex = function (chipId) {\n        for (var i = 0; i < this.chips.length; i++) {\n            if (this.chipsList[i].id === chipId) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    return MDCChipSet;\n}(MDCComponent));\nexport { MDCChipSet };\n//# sourceMappingURL=component.js.map","import {\n    ARROW_LEFT,\n    ARROW_LEFT_KEY_CODE,\n    ARROW_RIGHT,\n    ARROW_RIGHT_KEY_CODE,\n    BACKSPACE,\n    BACKSPACE_KEY_CODE,\n    DELETE,\n    DELETE_KEY_CODE,\n    ENTER,\n    ENTER_KEY_CODE,\n    ESCAPE,\n    ESCAPE_KEY_CODE,\n} from '../../util/keycodes';\n\n/**\n * Key handler for the input field.\n * Lets the user select, activate, and remove chips with the keyboard.\n *\n * @param event - event\n\n */\nexport function handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.textValue.length) {\n        // If there is any text in the input field, keyboard input should\n        // navigate the text, not the chips.\n        return;\n    }\n\n    if (!this.value || !this.value.length) {\n        // If there are no chips, there is nothing to select.\n        return;\n    }\n\n    const isLeft =\n        event.key === ARROW_LEFT || event.keyCode === ARROW_LEFT_KEY_CODE;\n    const isRight =\n        event.key === ARROW_RIGHT || event.keyCode === ARROW_RIGHT_KEY_CODE;\n    const isEnter = event.key === ENTER || event.keyCode === ENTER_KEY_CODE;\n    const isDelete = event.key === DELETE || event.keyCode === DELETE_KEY_CODE;\n    const isBackspace =\n        event.key === BACKSPACE || event.keyCode === BACKSPACE_KEY_CODE;\n    const isEscape = event.key === ESCAPE || event.keyCode === ESCAPE_KEY_CODE;\n\n    if (isLeft) {\n        return handleLeft(this, event);\n    }\n\n    if (isRight) {\n        return handleRight(this, event);\n    }\n\n    if (isEnter) {\n        return handleEnter(this, event);\n    }\n\n    if (isDelete) {\n        return handleDelete(this, event);\n    }\n\n    if (isBackspace) {\n        return handleBackspace(this, event);\n    }\n\n    if (isEscape) {\n        return handleEscape(this, event);\n    }\n}\n\nfunction handleLeft(host, event) {\n    event.preventDefault();\n    if (host.inputChipIndexSelected === null) {\n        host.inputChipIndexSelected = host.value.length - 1;\n\n        return;\n    }\n\n    if (host.inputChipIndexSelected <= 0) {\n        return;\n    }\n\n    host.inputChipIndexSelected -= 1;\n}\n\nfunction handleRight(host, event) {\n    event.preventDefault();\n    if (host.inputChipIndexSelected === null) {\n        host.inputChipIndexSelected = 0;\n\n        return;\n    }\n\n    if (host.inputChipIndexSelected >= host.value.length - 1) {\n        return;\n    }\n\n    host.inputChipIndexSelected += 1;\n}\n\nfunction handleEnter(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        host.emitInteraction(host.value[host.inputChipIndexSelected]);\n    }\n}\n\nfunction handleEscape(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        host.inputChipIndexSelected = null;\n    }\n}\n\nfunction handleDelete(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        removeChip(host);\n    }\n}\n\nfunction handleBackspace(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        removeChip(host);\n    } else if (!event.repeat) {\n        host.inputChipIndexSelected = host.value.length - 1;\n    }\n}\n\nfunction removeChip(host) {\n    if (host.inputChipIndexSelected !== null) {\n        host.removeChip(host.value[host.inputChipIndexSelected].id);\n        host.inputChipIndexSelected = null;\n    }\n}\n","@use '../../style/functions';\n@use '../../style/internal/shared_input-select-picker';\n@use '../../style/mixins';\n\n@use '../../style/internal/lime-theme';\n\n@use '@material/textfield';\n@use '@material/textfield/icon';\n@use '@material/notched-outline/mdc-notched-outline';\n@use '@material/floating-label';\n@use '@material/floating-label/mdc-floating-label';\n@use '@material/chips/deprecated/mdc-chips';\n\n/**\n * @prop --icon-background-color: Background color of the icon. Defaults to transparent.\n * @prop --icon-color: Color of the icon. Defaults to `rgb(var(--contrast-1100))`.\n * @prop --background-color: Background color of the field when type is set to input.\n * @prop --background-color-disabled: Background color of the field when type is set to input and the component is disabled or readonly.\n * @prop --input-chip-set-selected-chip-color: Color of the highlight around selected chips in input chip-sets.\n */\n\n@include textfield.core-styles;\n@include icon.icon-core-styles;\n\n@include shared_input-select-picker.outlined-style-overrides;\n@include shared_input-select-picker.floating-label-overrides;\n@include shared_input-select-picker.cropped-label-hack;\n@include shared_input-select-picker.disabled-overrides;\n@include shared_input-select-picker.readonly-overrides;\n@include shared_input-select-picker.leading-icon;\n@include shared_input-select-picker.lime-empty-value-for-readonly;\n@include shared_input-select-picker.lime-looks-like-input-value;\n\n$height-of-chip-set-input: functions.pxToRem(36);\n$leading-icon-space: functions.pxToRem(40);\n$background-color-of-remove-chip-buton-when-hovered: rgba(\n    var(--color-red-default),\n    0.2\n);\n$scale-of-remove-chip-x-when-hovered: scale(0.7);\n\n:host(limel-chip-set) {\n    isolation: isolate;\n}\n\n.mdc-chip {\n    // As long as this component is depended on MDC,\n    // we need to force it to be font-agnostic.\n    // When MDC-dependency is removed, this block can also be removed.\n    // However, on removal of MDC-dependency, we should also make sure to check\n    // other font-related styles that might be set by MDC,\n    // such as `letter-spacing` or `font-size`.\n    font-family: inherit;\n}\n\n.mdc-chip {\n    @include mixins.is-elevated-inset-clickable();\n    max-width: 100%;\n    min-width: functions.pxToRem(32);\n    padding: 0 functions.pxToRem(1);\n    display: inline-grid;\n    grid-auto-flow: column;\n\n    span[role='gridcell'] {\n        min-width: 0; // This is needed to force mdc-chip__text (which is inside this span) to truncate\n\n        &:only-child {\n            .mdc-chip__text {\n                padding-left: functions.pxToRem(12);\n            }\n        }\n\n        &:first-child {\n            .mdc-chip__text {\n                padding-left: functions.pxToRem(12);\n            }\n        }\n\n        a[role='button'],\n        span[role='checkbox'] {\n            &:focus-visible {\n                &:after {\n                    // visualizes keyboard navigation on Chrome & Firefox\n                    // only when non-pointer input is being used,\n                    // e.g. tabbed into using keyboard\n                    content: '';\n                    display: block;\n                    position: absolute;\n                    top: 0;\n                    right: 0;\n                    bottom: 0;\n                    left: 0;\n                    border-radius: functions.pxToRem(60);\n                    box-shadow: var(--shadow-depth-8-focused);\n                }\n            }\n        }\n    }\n\n    &.mdc-chip--selected {\n        color: var(--mdc-theme-primary) !important;\n        background-color: var(--mdc-theme-surface) !important;\n        box-shadow: var(--button-shadow-inset);\n\n        &:active {\n            box-shadow: var(--button-shadow-inset-pressed);\n        }\n\n        .mdc-chip__icon--leading {\n            color: var(--mdc-theme-primary) !important;\n        }\n    }\n}\n\n.mdc-chip.mdc-chip--selected .mdc-chip__checkmark,\n.mdc-chip__checkmark {\n    margin-right: functions.pxToRem(4);\n    margin-left: functions.pxToRem(8);\n}\n\nlimel-badge {\n    margin-right: functions.pxToRem(4);\n    margin-left: functions.pxToRem(-4);\n}\n\n.mdc-chip__text {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n    padding: 0 functions.pxToRem(12) 0 functions.pxToRem(4);\n    color: inherit;\n    text-decoration: none;\n\n    &:focus,\n    &:focus-visible {\n        outline: none;\n    }\n}\n\nlimel-icon.mdc-chip__icon.mdc-chip__icon--leading {\n    background-color: var(--icon-background-color, transparent);\n    margin: 0 !important;\n    color: var(--icon-color, rgb(var(--contrast-1100)));\n}\n\n.mdc-chip-set {\n    align-items: center;\n    min-height: shared_input-select-picker.$height-of-mdc-text-field;\n    position: relative;\n\n    &.chip-set--with-label {\n        .lime-floating-label--float-above {\n            padding-left: functions.pxToRem(4);\n        }\n    }\n\n    &.mdc-chip-set--input {\n        padding: functions.pxToRem(8);\n\n        width: 100%;\n\n        .mdc-chip--selected {\n            // When chip is selected with keyboard (backspace / arrow-keys) to be deleted\n            box-shadow: var(--shadow-depth-8-error);\n\n            .mdc-chip__icon--trailing {\n                color: rgb(var(--color-red-dark));\n                background-color: $background-color-of-remove-chip-buton-when-hovered;\n\n                svg {\n                    transform: $scale-of-remove-chip-x-when-hovered;\n                }\n            }\n        }\n    }\n\n    &.has-clear-all-button {\n        &.mdc-chip-set--input {\n            padding-right: functions.pxToRem(\n                32\n            ); // This leaves space for \"clear all\" button and avoids overlapping with chips\n        }\n    }\n\n    &.disabled:not(.mdc-chip-set--input) {\n        @include shared_input-select-picker.looks-disabled;\n        pointer-events: none;\n    }\n}\n\n.mdc-chip__icon {\n    &.mdc-chip__icon--trailing {\n        transition:\n            background-color 0.2s ease,\n            color 0.2s ease;\n\n        color: var(--mdc-theme-on-surface);\n        margin-left: 0;\n        margin-right: functions.pxToRem(5);\n\n        width: functions.pxToRem(22);\n        height: functions.pxToRem(22);\n\n        &:hover {\n            background-color: $background-color-of-remove-chip-buton-when-hovered;\n\n            svg {\n                transform: $scale-of-remove-chip-x-when-hovered;\n            }\n        }\n\n        svg {\n            transition: transform 0.2s ease;\n            display: block;\n            transform: scale(0.9);\n        }\n    }\n}\n\n.mdc-text-field {\n    height: auto;\n    cursor: text;\n\n    .mdc-text-field__input {\n        @include shared_input-select-picker.input-field-placeholder;\n\n        width: auto;\n        height: $height-of-chip-set-input;\n        line-height: $height-of-chip-set-input;\n        padding: 0 functions.pxToRem(12);\n\n        flex-grow: 1;\n        flex-shrink: 0;\n\n        &.hidden {\n            // This class is added, as soon as there is a chip selected and displayed\n            // This input field should not be visually visible as it breaks the UI in some cases\n            // But it should be rendered to be able to tab between fields and do other keyboard commands /Kia\n            transition: all 0s;\n            opacity: 0;\n            position: absolute;\n            z-index: -100; // to let users interact with chips, in case they're covered\n        }\n        &[type='search'] {\n            -webkit-appearance: textfield; // Removes the default magnifying glass icon on iOS which appears automatically on input fields with type of search\n            background-color: transparent; // overides styles caused by previous line\n\n            &::-webkit-search-cancel-button {\n                display: none; // removes the default X button\n            }\n        }\n    }\n}\n\n.mdc-text-field--disabled .mdc-chip {\n    pointer-events: all;\n\n    &.disabled {\n        @include shared_input-select-picker.looks-disabled;\n        pointer-events: none;\n    }\n}\n\n// used only in chipsets that do not have input\n.chip-set__label {\n    @include mixins.truncate-text;\n    width: 120%; // `120%` instead of `100%`,\n    // because this class is always together with `mdc-floating-label--float-above`,\n    // which scales the label down. So there is more horizontal space to display the label in.\n    top: functions.pxToRem(13);\n    padding-left: functions.pxToRem(20);\n}\n\n// Because MDC removes some classes in chipset, we add custom\n// classes with similar names and expected behavior & styles.\n// These class names start with `lime-`, instead of `mdc-`.\n.lime-notched-outline--notched {\n    .mdc-notched-outline__notch {\n        border-top: 1px solid transparent !important;\n\n        .lime-floating-label--float-above {\n            // This overrides MDC's original top value which is `top: 50%`.\n            // The reason is that a % value aligns the label in a wrong position\n            // vertically, when there are multiple rows of chips.\n            top: functions.pxToRem(27);\n\n            transform: translateY(-34.75px) scale(0.75);\n            font-size: shared_input-select-picker.$cropped-label-hack--font-size;\n        }\n    }\n}\n\n.force-invalid {\n    @extend .mdc-text-field--invalid;\n}\n\n.clear-all-button {\n    @include mixins.clear-all-button;\n    @include mixins.visualize-keyboard-focus;\n\n    position: absolute;\n    right: functions.pxToRem(8);\n    top: functions.pxToRem(18);\n\n    opacity: 0; // Is hidden, but can receive focus (such as when navigating through tab indexes).\n\n    &:focus,\n    .has-chips:not(.mdc-text-field--disabled):hover &,\n    .has-chips:not(.mdc-text-field--disabled).mdc-text-field--focused & {\n        opacity: 1;\n        outline: none;\n    }\n\n    :not(.has-chips) &,\n    .has-chips.mdc-text-field--disabled & {\n        display: none; // Won't receive focus when disabled\n    }\n}\n\n.has-leading-icon {\n    &:not(.has-chips) {\n        .mdc-text-field__input {\n            padding-left: $leading-icon-space;\n        }\n\n        .mdc-floating-label {\n            &:not(.lime-floating-label--float-above) {\n                left: $leading-icon-space;\n            }\n            &.mdc-floating-label--float-above {\n                left: functions.pxToRem(4);\n            }\n        }\n    }\n\n    .mdc-chip {\n        &:first-of-type {\n            margin-left: 40px;\n        }\n    }\n\n    .search-icon {\n        transition: transform 0.2s ease;\n        position: absolute;\n        top: functions.pxToRem(16);\n        left: functions.pxToRem(16);\n    }\n\n    limel-icon {\n        background-color: transparent;\n    }\n}\n\n.delimiter {\n    opacity: 0.5;\n    padding: 0 functions.pxToRem(2);\n    color: var(--mdc-theme-on-surface);\n}\n\n@import './partial-styles/_readonly';\n@import './partial-styles/_file-picker';\n@import './partial-styles/_helper-text';\n","import { Chip } from '../chip-set/chip.types';\nimport { Languages } from '../date-picker/date.types';\nimport {\n    MDCChipInteractionEvent,\n    MDCChipSelectionEvent,\n    MDCChipSet,\n} from '@material/chips/deprecated';\nimport { MDCTextField } from '@material/textfield';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Method,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { handleKeyboardEvent } from './chip-set-input-helpers';\nimport translate from '../../global/translations';\nimport { getHref, getTarget } from '../../util/link-helper';\nimport { isEqual } from 'lodash-es';\nimport {\n    getIconBackgroundColor,\n    getIconColor,\n    getIconName,\n    getIconTitle,\n} from '../icon/get-icon-props';\n\nconst SELECTED_CHIP_CLASS = 'mdc-chip--selected';\nconst INPUT_FIELD_TABINDEX = 1;\n\n/**\n * @exampleComponent limel-example-chip-set\n * @exampleComponent limel-example-chip-set-choice\n * @exampleComponent limel-example-chip-set-filter\n * @exampleComponent limel-example-chip-set-filter-badge\n * @exampleComponent limel-example-chip-set-input\n * @exampleComponent limel-example-chip-set-input-type-text\n * @exampleComponent limel-example-chip-set-input-type-search\n * @exampleComponent limel-example-chip-icon-color\n * @exampleComponent limel-example-chip-set-composite\n */\n@Component({\n    tag: 'limel-chip-set',\n    shadow: true,\n    styleUrl: 'chip-set.scss',\n})\nexport class ChipSet {\n    /**\n     * List of chips for the set\n     */\n    @Prop()\n    public value: Chip[] = [];\n\n    /**\n     * Type of chip set\n     *\n     * - `choice` renders a set of selectable chips where only one is selectable. The `removable` property is ignored\n     * - `filter` renders a set of selectable chips where all are selectable. The `icon` property is ignored\n     * - `input` renders a set of chips that can be used in conjunction with an input field\n     *\n     * If no type is set, a basic set of chips without additional functionality will be rendered\n     */\n    @Prop({ reflect: true })\n    public type?: 'choice' | 'filter' | 'input';\n\n    /**\n     * Label for the chip-set\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Optional helper text to display below the chipset.\n     * When type is `input`, the helper text is displayed below the\n     * input field when it has focus.\n     * When type is not `input`, the helper text is always displayed\n     * if the device is touch screen; otherwise it is shown when chip-set\n     * is hovered or focused using keyboard navigation.\n     */\n    @Prop({ reflect: true })\n    public helperText: string;\n\n    /**\n     * True if the chip set should be disabled\n     */\n    @Prop({ reflect: true })\n    public disabled: boolean = false;\n\n    /**\n     * For chip-sets of type `input`, set to `true` to disable adding and\n     * removing chips, but allow interaction with existing chips in the set.\n     * For any other types, setting either `readonly` or `disabled` disables\n     * the chip-set.\n     */\n    @Prop({ reflect: true })\n    public readonly: boolean = false;\n\n    /**\n     * Set to `true` to indicate that the current value of the input field is\n     * invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid = false;\n\n    /**\n     * For chip-sets of type `input`. Value to use for the `type` attribute on the\n     * input field inside the chip-set.\n     */\n    @Prop({ reflect: true })\n    public inputType: 'search' | 'text' = 'text';\n\n    /**\n     * For chip-sets of type `input`. Limits the maximum number of chips.\n     * When the value is `0` or not set, no limit is applied.\n     */\n    @Prop({ reflect: true })\n    public maxItems: number;\n\n    /**\n     * True if the control requires a value\n     */\n    @Prop({ reflect: true })\n    public required: boolean = false;\n\n    /**\n     * Search label to display when type is `input` and component is in search mode\n     */\n    @Prop({ reflect: true })\n    public searchLabel: string;\n\n    /**\n     * Whether the input field should be emptied when the chip-set loses focus.\n     */\n    @Prop({ reflect: true })\n    public emptyInputOnBlur: boolean = true;\n\n    /**\n     * Whether the \"Clear all\" buttons should be shown\n     */\n    @Prop()\n    public clearAllButton: boolean = true;\n\n    /**\n     * For chip-sets of type `input`. When the value is null, no leading icon is used.\n     * Leading icon to show to the far left in the text field\n     */\n    @Prop({ reflect: true })\n    public leadingIcon: string = null;\n\n    /**\n     * For chip-set of type `input`. Sets delimiters between chips.\n     */\n    @Prop({ reflect: true })\n    public delimiter: string = null;\n\n    /**\n     * Defines the language for translations.\n     * Will translate the translatable strings on the components. For example, the clear all chips label.\n     */\n    @Prop()\n    public language: Languages = 'en';\n\n    /**\n     * Dispatched when a chip is interacted with\n     */\n    @Event()\n    private interact: EventEmitter<Chip>;\n\n    /**\n     * Dispatched when a chip is selected/deselected\n     */\n    @Event()\n    private change: EventEmitter<Chip | Chip[]>;\n\n    /**\n     * Emitted when an input chip set has received focus and editing in the text field has started\n     */\n    @Event()\n    private startEdit: EventEmitter<void>;\n\n    /**\n     * Emitted when an input chip set has lost focus and editing in the text field has ended\n     */\n    @Event()\n    private stopEdit: EventEmitter<void>;\n\n    /**\n     * Dispatched when the input is changed for type `input`\n     */\n    @Event()\n    private input: EventEmitter<string>;\n\n    @Element()\n    private host: HTMLLimelChipSetElement;\n\n    @State()\n    private editMode: boolean = false;\n\n    @State()\n    private textValue: string = '';\n\n    @State()\n    private blurred: boolean = false;\n\n    @State()\n    private inputChipIndexSelected: number = null;\n\n    private mdcChipSet: MDCChipSet;\n    private mdcTextField: MDCTextField;\n    private handleKeyDown = handleKeyboardEvent;\n\n    constructor() {\n        this.renderChip = this.renderChip.bind(this);\n        this.renderInputChip = this.renderInputChip.bind(this);\n        this.isFull = this.isFull.bind(this);\n        this.handleInteractionEvent = this.handleInteractionEvent.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.handleTextFieldFocus = this.handleTextFieldFocus.bind(this);\n        this.handleInputBlur = this.handleInputBlur.bind(this);\n        this.handleTextInput = this.handleTextInput.bind(this);\n        this.inputFieldOnChange = this.inputFieldOnChange.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.inputHidden = this.inputHidden.bind(this);\n        this.handleDeleteAllIconClick =\n            this.handleDeleteAllIconClick.bind(this);\n        this.renderDelimiter = this.renderDelimiter.bind(this);\n    }\n\n    /**\n     * Used to find out whether the chip-set is in edit mode.\n     *\n     * @returns `true` if the chip-set is in edit mode, `false` otherwise.\n     */\n    @Method()\n    public async getEditMode(): Promise<boolean> {\n        return this.editMode;\n    }\n\n    /**\n     * Used to set focus to the chip-set input field.\n     *\n     * @param emptyInput - if `true`, any text in the input is discarded\n     * @returns does not return anything, but methods have to be async\n     */\n    @Method()\n    public async setFocus(emptyInput: boolean = false) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n\n        this.editMode = true;\n        if (emptyInput) {\n            this.textValue = '';\n        }\n\n        this.host.shadowRoot.querySelector('input').focus();\n        this.startEdit.emit();\n    }\n\n    /**\n     * Used to empty the input field. Used in conjunction with `emptyInputOnBlur` to let the\n     * consumer control when the input is emptied.\n     *\n     * @returns does not return anything, but methods have to be async\n     */\n    @Method()\n    public async emptyInput() {\n        this.syncEmptyInput();\n    }\n\n    public componentDidLoad() {\n        this.triggerIconColorWarning(this.value);\n\n        if (this.type === 'input') {\n            this.mdcTextField = new MDCTextField(\n                this.host.shadowRoot.querySelector('.mdc-text-field'),\n            );\n        }\n\n        this.createMDCChipSet();\n    }\n\n    public componentWillUpdate() {\n        this.destroyMDCChipSet();\n    }\n\n    public componentDidUpdate() {\n        this.createMDCChipSet();\n        const input = this.host.shadowRoot.querySelector('input');\n        if (input && this.editMode) {\n            input.focus();\n        }\n    }\n\n    public disconnectedCallback() {\n        this.destroyMDCChipSet();\n\n        if (this.mdcTextField) {\n            this.mdcTextField.destroy();\n        }\n    }\n\n    public render() {\n        if (this.type === 'input') {\n            return this.renderInputChips();\n        }\n\n        const classes = {\n            'mdc-chip-set': true,\n            disabled: this.disabled || this.readonly,\n            'mdc-text-field--with-trailing-icon': true,\n        };\n        if (this.type) {\n            classes[`mdc-chip-set--${this.type}`] = true;\n        }\n\n        const chipSetLabel = this.renderChipSetLabel();\n        if (chipSetLabel) {\n            classes['chip-set--with-label'] = true;\n        }\n\n        return (\n            <div class={classes} role=\"grid\">\n                {chipSetLabel}\n                {this.value.map(this.renderChip)}\n                {this.renderHelperLine()}\n            </div>\n        );\n    }\n\n    @Watch('value')\n    protected handleChangeChips(newValue: Chip[], oldValue: Chip[]) {\n        if (isEqual(newValue, oldValue)) {\n            return;\n        }\n\n        this.syncEmptyInput();\n    }\n\n    private createMDCChipSet() {\n        this.mdcChipSet = new MDCChipSet(\n            this.host.shadowRoot.querySelector('.mdc-chip-set'),\n        );\n\n        if (!this.type || this.type === 'input') {\n            this.mdcChipSet.listen(\n                'MDCChip:interaction',\n                this.handleInteractionEvent,\n            );\n        }\n\n        if (this.type === 'choice' || this.type === 'filter') {\n            this.mdcChipSet.listen('MDCChip:selection', this.handleSelection);\n        }\n    }\n\n    private destroyMDCChipSet() {\n        if (this.mdcChipSet) {\n            this.mdcChipSet.unlisten(\n                'MDCChip:interaction',\n                this.handleInteractionEvent,\n            );\n            this.mdcChipSet.unlisten('MDCChip:selection', this.handleSelection);\n\n            this.mdcChipSet.destroy();\n        }\n    }\n\n    private renderChipSetLabel() {\n        if (!this.label) {\n            return;\n        }\n\n        return (\n            <label class=\"chip-set__label mdc-floating-label mdc-floating-label--float-above\">\n                {this.label}\n            </label>\n        );\n    }\n\n    private renderInputChips() {\n        return [\n            <div\n                class={{\n                    'mdc-text-field mdc-text-field--outlined': true,\n                    'mdc-chip-set mdc-chip-set--input': true,\n                    'force-invalid': this.isInvalid(),\n                    'mdc-text-field--disabled': this.readonly || this.disabled,\n                    'lime-text-field--readonly': this.readonly,\n                    'has-chips mdc-text-field--label-floating':\n                        this.value.length !== 0,\n                    'has-leading-icon': this.leadingIcon !== null,\n                    'has-clear-all-button': this.clearAllButton,\n                }}\n                onClick={this.handleTextFieldFocus}\n            >\n                {this.value.map(this.renderInputChip)}\n                <input\n                    tabIndex={INPUT_FIELD_TABINDEX}\n                    type={this.inputType}\n                    id=\"input-element\"\n                    disabled={this.readonly || this.disabled}\n                    class={{\n                        'mdc-text-field__input': true,\n                        hidden: this.inputHidden(),\n                    }}\n                    value={this.textValue}\n                    onBlur={this.handleInputBlur}\n                    onFocus={this.handleTextFieldFocus}\n                    onKeyDown={this.handleKeyDown}\n                    onInput={this.handleTextInput}\n                    // Some browsers emit a change event on input elements, we need to stop\n                    // that event from propagating since we are emitting our own change event\n                    onChange={this.inputFieldOnChange}\n                    placeholder={this.isFull() ? '' : this.searchLabel}\n                    readonly={this.isFull()}\n                />\n                <div\n                    class={{\n                        'mdc-notched-outline': true,\n                        'mdc-notched-outline--upgraded': true,\n                        'mdc-text-field--required': this.required,\n                        'lime-notched-outline--notched': this.floatLabelAbove(),\n                    }}\n                    dropzone-tip={this.dropZoneTip()}\n                >\n                    <div class=\"mdc-notched-outline__leading\" />\n                    {this.renderLabel()}\n                    <div class=\"mdc-notched-outline__trailing\" />\n                </div>\n                {this.renderLeadingIcon()}\n                {this.renderEmptyValueForReadonly()}\n                {this.renderClearAllChipsButton()}\n            </div>,\n            this.renderHelperLine(),\n        ];\n    }\n\n    private renderEmptyValueForReadonly = () => {\n        if (this.readonly && this.value.length === 0) {\n            return (\n                <span class=\"lime-empty-value-for-readonly lime-looks-like-input-value\">\n                    –\n                </span>\n            );\n        }\n    };\n\n    private renderLabel() {\n        const labelClassList = {\n            'mdc-floating-label': true,\n            'mdc-text-field--disabled': this.readonly || this.disabled,\n            'mdc-floating-label--required': this.required,\n            'lime-floating-label--float-above': this.floatLabelAbove(),\n        };\n\n        if (!this.label) {\n            return;\n        }\n\n        return (\n            <div class=\"mdc-notched-outline__notch\">\n                <label class={labelClassList} htmlFor=\"input-element\">\n                    {this.label}\n                </label>\n            </div>\n        );\n    }\n\n    private floatLabelAbove = () => {\n        if (!!this.value.length || this.editMode || this.readonly) {\n            return true;\n        }\n    };\n\n    private dropZoneTip = (): string => {\n        return translate.get('file.drag-and-drop-tips', this.language);\n    };\n\n    private isFull(): boolean {\n        return !!this.maxItems && this.value.length >= this.maxItems;\n    }\n\n    private isInvalid() {\n        if (this.readonly) {\n            // A readonly field can never be invalid.\n            return false;\n        }\n\n        if (this.invalid) {\n            return true;\n        }\n\n        if (!this.required) {\n            return false;\n        }\n\n        if (!this.blurred) {\n            return false;\n        }\n\n        return !this.value || !this.value.length;\n    }\n\n    private inputFieldOnChange(event) {\n        event.stopPropagation();\n    }\n\n    /**\n     * Enter edit mode when the text field receives focus. When editMode is true, the input element will be visible\n     */\n    private handleTextFieldFocus() {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n\n        if (this.editMode) {\n            return;\n        }\n\n        this.editMode = true;\n        this.startEdit.emit();\n    }\n\n    /**\n     * Exit edit mode when the input element loses focus. This makes sure the input element does not take up any\n     * additional space when the user it not typing anything\n     */\n    private handleInputBlur() {\n        if (this.emptyInputOnBlur) {\n            this.syncEmptyInput();\n        }\n\n        this.editMode = false;\n        this.blurred = true;\n        this.inputChipIndexSelected = null;\n\n        // This timeout is needed in order to let a new element receive focus\n        setTimeout(() => {\n            this.stopEdit.emit();\n        }, 0);\n    }\n\n    private syncEmptyInput() {\n        this.textValue = '';\n    }\n\n    private inputHidden() {\n        if (this.editMode) {\n            return this.isFull();\n        }\n\n        // If there are chips in the picker, hide the input to avoid the input\n        // being placed on a new line and adding ugly space beneath the chips.\n        // If there are no chips, show the input, or the picker will look weird.\n        return !!(this.value && this.value.length);\n    }\n\n    private handleTextInput(event) {\n        event.stopPropagation();\n        this.inputChipIndexSelected = null;\n        this.textValue = event.target.value;\n        this.input.emit(event.target.value && event.target.value.trim());\n    }\n\n    private handleInteractionEvent(event: MDCChipInteractionEvent) {\n        const chip = this.value.find((item) => {\n            return `${item.id}` === event.detail.chipId;\n        });\n        this.emitInteraction(chip);\n    }\n\n    private emitInteraction(chip: Chip) {\n        this.interact.emit(chip);\n    }\n\n    private handleSelection(event: MDCChipSelectionEvent) {\n        let chip = this.value.find((item) => {\n            return `${item.id}` === event.detail.chipId;\n        });\n        chip = { ...chip, selected: event.detail.selected };\n        this.change.emit(chip);\n    }\n\n    private removeChip(id: string | number) {\n        const newValue = this.value.filter((chip) => {\n            return `${chip.id}` !== `${id}`;\n        });\n        this.change.emit(newValue);\n    }\n\n    private renderChip(chip: Chip) {\n        if (this.type === 'filter') {\n            return this.renderFilterChip(chip);\n        }\n\n        return this.renderDefaultChip(chip);\n    }\n\n    private renderDefaultChip(chip: Chip) {\n        return (\n            <div\n                class={`mdc-chip ${chip.selected ? SELECTED_CHIP_CLASS : ''}`}\n                role=\"row\"\n                id={`${chip.id}`}\n            >\n                {chip.icon ? this.renderChipIcon(chip) : null}\n                {chip.text ? this.renderChipLabel(chip) : null}\n            </div>\n        );\n    }\n\n    private renderChipLabel(chip: Chip<any>) {\n        const attributes: any = {};\n        if (chip.href) {\n            attributes.href = getHref(chip.href);\n            attributes.target = getTarget(chip.href);\n        }\n\n        return (\n            <span role=\"gridcell\">\n                <a\n                    role=\"button\"\n                    tabindex={this.disabled ? '-1' : '0'}\n                    class=\"mdc-chip__text\"\n                    {...attributes}\n                >\n                    {chip.text}\n                </a>\n            </span>\n        );\n    }\n\n    private hasHelperText = () => {\n        return this.helperText !== null && this.helperText !== undefined;\n    };\n\n    private renderHelperLine = () => {\n        if (!this.maxItems && !this.hasHelperText()) {\n            return;\n        }\n\n        return (\n            <limel-helper-line\n                length={this.value.length}\n                maxLength={this.maxItems}\n                helperText={this.helperText}\n                invalid={this.isInvalid()}\n            />\n        );\n    };\n\n    private renderFilterChip(chip: Chip) {\n        return (\n            <div\n                class={`mdc-chip ${chip.selected ? SELECTED_CHIP_CLASS : ''}`}\n                role=\"row\"\n                id={`${chip.id}`}\n            >\n                <span class=\"mdc-chip__checkmark\">\n                    <svg class=\"mdc-chip__checkmark-svg\" viewBox=\"-2 -3 30 30\">\n                        <path\n                            class=\"mdc-chip__checkmark-path\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"\n                        />\n                    </svg>\n                </span>\n                <span role=\"gridcell\">\n                    <span\n                        role=\"checkbox\"\n                        tabindex={this.disabled ? '-1' : '0'}\n                        aria-checked=\"false\"\n                        class=\"mdc-chip__text\"\n                    >\n                        {chip.text}\n                    </span>\n                </span>\n                {this.renderBadge(chip)}\n            </div>\n        );\n    }\n\n    private renderInputChip(chip: Chip, index: number) {\n        return [\n            <div\n                class={{\n                    'mdc-chip': true,\n                    'mdc-chip--selected': this.inputChipIndexSelected === index,\n                    disabled: this.disabled,\n                }}\n                role=\"row\"\n                id={`${chip.id}`}\n                onClick={this.catchInputChipClicks}\n            >\n                {chip.icon ? this.renderChipIcon(chip) : null}\n                {this.renderChipLabel(chip)}\n                {this.renderChipRemoveButton(chip)}\n            </div>,\n            this.renderDelimiter(),\n        ];\n    }\n\n    private catchInputChipClicks(event) {\n        event.stopPropagation();\n    }\n\n    private renderChipIcon(chip: Chip) {\n        const name = getIconName(chip.icon);\n        const color = getIconColor(chip.icon, chip.iconFillColor);\n        const backgroundColor = getIconBackgroundColor(\n            chip.icon,\n            chip.iconBackgroundColor,\n        );\n        const title = getIconTitle(chip.icon, chip.iconTitle);\n        const style = {};\n        if (color) {\n            style['--icon-color'] = color;\n        }\n\n        if (backgroundColor) {\n            style['--icon-background-color'] = backgroundColor;\n        }\n\n        return (\n            <limel-icon\n                class=\"mdc-chip__icon mdc-chip__icon--leading\"\n                name={name}\n                style={style}\n                size=\"small\"\n                badge={true}\n                title={title}\n            />\n        );\n    }\n\n    private renderLeadingIcon() {\n        if (!this.leadingIcon) {\n            return;\n        }\n\n        return (\n            <i class=\"mdc-text-field__icon search-icon\">\n                <limel-icon name={this.leadingIcon} />\n            </i>\n        );\n    }\n\n    private renderChipRemoveButton(chip: Chip) {\n        if (!chip.removable || this.readonly || this.disabled) {\n            return;\n        }\n\n        const svgData = `<svg style=\"height:100%;width:100%;\" width=\"32\" height=\"32\" x=\"0px\" y=\"0px\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:svg=\"http://www.w3.org/2000/svg\">\n    <line fill=\"none\" id=\"svg_1\" stroke=\"currentColor\" stroke-width=\"2\" x1=\"8\" x2=\"24\" y1=\"8\" y2=\"24\"/>\n    <line fill=\"none\" id=\"svg_2\" stroke=\"currentColor\" stroke-width=\"2\" x1=\"24\" x2=\"8\" y1=\"8\" y2=\"24\"/>\n</svg>`;\n\n        const removeFunc = (event: MouseEvent) => {\n            event.stopPropagation();\n            this.removeChip(chip.id);\n        };\n\n        return (\n            <button\n                class=\"mdc-chip__icon mdc-chip__icon--trailing mdc-deprecated-chip-trailing-action\"\n                aria-label={this.removeChipLabel}\n                tabindex=\"-1\"\n                innerHTML={svgData}\n                onClick={removeFunc}\n            />\n        );\n    }\n\n    private renderClearAllChipsButton() {\n        if (this.disabled || this.readonly || !this.clearAllButton) {\n            return;\n        }\n\n        return (\n            <a\n                href=\"\"\n                onClick={this.handleDeleteAllIconClick}\n                class=\"mdc-text-field__icon clear-all-button\"\n                tabindex=\"0\"\n                role=\"button\"\n                title={this.clearAllChipsLabel()}\n                aria-label={this.clearAllChipsLabel()}\n            />\n        );\n    }\n\n    private clearAllChipsLabel = (): string => {\n        return translate.get('chip-set.clear-all', this.language);\n    };\n\n    private removeChipLabel = (): string => {\n        return translate.get('chip-set.remove-chip', this.language);\n    };\n\n    private handleDeleteAllIconClick(event: Event) {\n        event.preventDefault();\n        this.change.emit([]);\n    }\n\n    private renderDelimiter() {\n        if (!this.delimiter) {\n            return;\n        }\n\n        return <div class=\"delimiter\">{this.delimiter}</div>;\n    }\n\n    private renderBadge(chip: Chip) {\n        if (!chip.badge) {\n            return;\n        }\n\n        return <limel-badge label={chip.badge} />;\n    }\n\n    private triggerIconColorWarning(value: Chip[]) {\n        for (const chip of value) {\n            if (\n                chip.icon &&\n                (chip.iconFillColor ||\n                    chip.iconBackgroundColor ||\n                    chip.iconTitle)\n            ) {\n                /* eslint-disable-next-line no-console */\n                console.warn(\n                    \"The `iconFillColor`, `iconBackgroundColor`, and `iconTitle` props are deprecated now! Use the new `Icon` interface and instead of `iconColor: 'color-name', `iconBackgroundColor: 'color-name', and `iconTitle: 'title'`, write `icon { name: 'icon-name', color: 'color-name', backgroundColor: 'color-name', title: 'title' }`.\",\n                );\n            }\n        }\n    }\n}\n"],"mappings":"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"}