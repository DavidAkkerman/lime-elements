{"version":3,"names":["fileCss","CHIP_SET_TAG_NAME","DEFAULT_FILE_CHIP","id","text","removable","File","constructor","hostRef","this","fileInputId","createRandomString","handleDragEnter","event","isDraggingOverDropZone","preventAndStop","handleDragLeave","handleFileDrop","dataTransfer","handleFile","files","handleClick","Lime","chip","handleFileSelection","bind","handleFileChange","handleChipSetChange","handleKeyDown","handleKeyUp","handleChipInteract","connectedCallback","initialize","componentDidLoad","fileInput","element","shadowRoot","getElementById","chipSet","querySelector","mdcTextField","MDCTextField","disconnectedCallback","destroy","render","h","hidden","onChange","type","accept","disabled","readonly","class","invalid","label","leadingIcon","language","onClick","onInteract","onKeyDown","onKeyUp","required","value","chipArray","title","getTranslation","onDragEnter","onDragOver","onDragLeave","onDrop","filename","icon","name","getFileIcon","getFileExtensionTitle","color","getFileColor","backgroundColor","getFileBackgroundColor","href","code","preventDefault","stopPropagation","click","length","file","limeFile","contentType","size","fileContent","change","emit","blur","valid","detail","interact","key","translate","get"],"sources":["./src/components/file/file.scss?tag=limel-file&encapsulation=shadow","./src/components/file/file.tsx"],"sourcesContent":["/**\n * @prop --icon-background-color: Background color of the icon. Defaults to `--contrast-400`.\n * @prop --icon-color: Color of the icon. Defaults to `--contrast-1100`.\n */\n\n:host {\n    --icon-background-color: rgb(var(--contrast-400));\n    --icon-color: rgb(var(--contrast-1100));\n}\n","import translate from '../../global/translations';\nimport { Chip } from '../chip-set/chip.types';\nimport { Languages } from '../date-picker/date.types';\nimport { MDCTextField } from '@material/textfield';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Prop,\n    State,\n} from '@stencil/core';\nimport { createRandomString } from '../../util/random-string';\nimport {\n    getFileBackgroundColor,\n    getFileColor,\n    getFileExtensionTitle,\n    getFileIcon,\n} from '../../util/file-metadata';\nimport { FileInfo } from '../../global/shared-types/file.types';\n\nconst CHIP_SET_TAG_NAME = 'limel-chip-set';\nconst DEFAULT_FILE_CHIP: Chip = {\n    id: null,\n    text: null,\n    removable: true,\n};\n\n/**\n * This component lets end-users select a *single* file from their device\n * storage. Regardless of the user's device or operating system, this component\n * opens up a file picker dialog that allows the user to choose a file.\n *\n * ## Using correct labels\n *\n * This file picker can be used in different contexts. The component's distinct\n * visual design including the upload icon hints end-users that this is not a\n * normal input field like other fields in the form for example.\n *\n * :::important\n * you need to use a descriptive `label` that clarifies the\n * functionality of the file picker, and/or provides users with clear\n * instructions.\n *\n * Depending on the context, you may need to avoid labels such as:\n * - File\n * - Document\n *\n * and instead consider using labels like:\n * - Attach a file\n * - Upload a file\n * - Choose a document\n * - Choose a file\n *\n * and similar phrases...\n * :::\n *\n * @exampleComponent limel-example-file\n * @exampleComponent limel-example-file-custom-icon\n * @exampleComponent limel-example-file-accepted-types\n * @exampleComponent limel-example-file-composite\n */\n@Component({\n    tag: 'limel-file',\n    shadow: true,\n    styleUrl: 'file.scss',\n})\nexport class File {\n    /**\n     * The selected file.\n     */\n    @Prop()\n    public value: FileInfo;\n\n    /**\n     * The input label.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Set to `true` to indicate that the field is required.\n     */\n    @Prop({ reflect: true })\n    public required: boolean = false;\n\n    /**\n     * True if the input should be disabled\n     */\n    @Prop({ reflect: true })\n    public disabled: boolean = false;\n\n    /**\n     * Set to `true` to disable adding and removing files, but allow interaction\n     * with any already existing file.\n     */\n    @Prop({ reflect: true })\n    public readonly: boolean = false;\n\n    /**\n     * Set to `true` to indicate that the current value of the chosen file is\n     * invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid = false;\n\n    /**\n     * The [accepted file types](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers)\n     */\n    @Prop({ reflect: true })\n    public accept: string = '*';\n\n    /**\n     * Defines the localisation for translations.\n     */\n    @Prop()\n    public language: Languages = 'en';\n\n    /**\n     * Dispatched when a file is selected/deselected\n     */\n    @Event()\n    private change: EventEmitter<FileInfo>;\n\n    /**\n     * Dispatched when clicking on a chip\n     */\n    @Event()\n    private interact: EventEmitter<number | string>;\n\n    @Element()\n    private element: HTMLLimelFileElement;\n\n    @State()\n    private isDraggingOverDropZone = false;\n\n    private fileInput: HTMLInputElement;\n    private fileInputId = createRandomString();\n    private chipSet;\n    private mdcTextField;\n\n    constructor() {\n        this.handleFileSelection = this.handleFileSelection.bind(this);\n        this.handleFileChange = this.handleFileChange.bind(this);\n        this.handleChipSetChange = this.handleChipSetChange.bind(this);\n        this.handleFileDrop = this.handleFileDrop.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n        this.handleChipInteract = this.handleChipInteract.bind(this);\n    }\n\n    public connectedCallback() {\n        this.initialize();\n    }\n\n    public componentDidLoad() {\n        this.fileInput = this.element.shadowRoot.getElementById(\n            this.fileInputId,\n        ) as HTMLInputElement;\n        this.chipSet = this.element.shadowRoot.querySelector(CHIP_SET_TAG_NAME);\n        this.initialize();\n    }\n\n    private initialize() {\n        if (!this.chipSet) {\n            return;\n        }\n\n        this.mdcTextField = new MDCTextField(\n            this.chipSet.shadowRoot.querySelector('.mdc-text-field'),\n        );\n    }\n\n    public disconnectedCallback() {\n        if (this.mdcTextField) {\n            this.mdcTextField.destroy();\n        }\n    }\n\n    public render() {\n        return [\n            <input\n                hidden={true}\n                id={this.fileInputId}\n                onChange={this.handleFileChange}\n                type=\"file\"\n                accept={this.accept}\n                disabled={this.disabled || this.readonly}\n            />,\n            <limel-chip-set\n                class={{\n                    'is-file-picker': true,\n                    'shows-dropzone': true,\n                    'highlight-dropzone': this.isDraggingOverDropZone,\n                }}\n                disabled={this.disabled}\n                readonly={this.readonly}\n                invalid={this.invalid}\n                label={this.label}\n                leadingIcon=\"upload_to_cloud\"\n                language={this.language}\n                onChange={this.handleChipSetChange}\n                onClick={this.handleClick}\n                onInteract={this.handleChipInteract}\n                onKeyDown={this.handleKeyDown}\n                onKeyUp={this.handleKeyUp}\n                required={this.required}\n                type=\"input\"\n                value={this.chipArray}\n                title={this.getTranslation('drag-and-drop-tips')}\n                onDragEnter={this.handleDragEnter}\n                onDragOver={this.preventAndStop}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleFileDrop}\n            />,\n        ];\n    }\n\n    private handleDragEnter = (event: DragEvent) => {\n        this.isDraggingOverDropZone = true;\n        this.preventAndStop(event);\n    };\n\n    private handleDragLeave = () => {\n        this.isDraggingOverDropZone = false;\n    };\n\n    private handleFileDrop = (event: DragEvent) => {\n        this.preventAndStop(event);\n        this.isDraggingOverDropZone = false;\n        const dataTransfer = event.dataTransfer;\n        this.handleFile(dataTransfer.files[0]);\n    };\n\n    private get chipArray() {\n        if (!this.value) {\n            return [];\n        }\n\n        return [\n            {\n                ...DEFAULT_FILE_CHIP,\n                text: this.value.filename,\n                id: this.value.id,\n                icon: {\n                    name: getFileIcon(this.value),\n                    title: getFileExtensionTitle(this.value),\n                    color: getFileColor(this.value),\n                    backgroundColor: getFileBackgroundColor(this.value),\n                },\n                href: this.value.href,\n            },\n        ];\n    }\n\n    private handleKeyDown(event: KeyboardEvent) {\n        if (\n            event.code === 'Tab' ||\n            event.code === 'Backspace' ||\n            event.code === 'Enter'\n        ) {\n            return;\n        }\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    private handleKeyUp(event: KeyboardEvent) {\n        if (event.code === 'Enter' && !this.value) {\n            this.fileInput.click();\n        }\n    }\n\n    private handleClick = (event: Event) => {\n        if (event && 'Lime' in event && (event.Lime as any).chip) {\n            // This is a click on a chip, so we don't need to do anything here.\n            return;\n        }\n\n        this.handleFileSelection(event);\n    };\n\n    private handleFileSelection(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (!this.value) {\n            this.fileInput.click();\n        }\n    }\n\n    private handleFileChange(event: Event) {\n        if (this.fileInput.files.length > 0) {\n            event.stopPropagation();\n            this.handleFile(this.fileInput.files[0]);\n        }\n    }\n\n    private handleFile(file) {\n        const limeFile: FileInfo = {\n            id: createRandomString(),\n            filename: file.name,\n            contentType: file.type,\n            size: file.size,\n            fileContent: file,\n        };\n        this.change.emit(limeFile);\n        this.chipSet.blur();\n        this.mdcTextField.valid = true;\n    }\n\n    private handleChipSetChange(event: CustomEvent) {\n        event.stopPropagation();\n        const file = !event.detail.length ? event.detail[0] : null;\n        this.chipSet.blur();\n        if (!file) {\n            this.fileInput.value = '';\n            this.change.emit(file);\n            if (this.required) {\n                this.mdcTextField.valid = false;\n            }\n        }\n    }\n\n    private handleChipInteract(event: CustomEvent<Chip>) {\n        event.stopPropagation();\n        event.preventDefault();\n        this.interact.emit(event.detail.id);\n    }\n\n    private preventAndStop(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    private getTranslation(key: string) {\n        return translate.get(`file.${key}`, this.language);\n    }\n}\n"],"mappings":"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"}