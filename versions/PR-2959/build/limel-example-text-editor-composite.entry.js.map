{"version":3,"names":["textEditorCompositeCss","TextEditorCompositeExample","this","setReadonly","event","stopPropagation","readonly","detail","setRequired","required","setInvalid","invalid","handleLabelChange","label","handleHelperTextChange","helperText","handlePlaceholderChange","placeholder","handleChange","value","render","h","onChange","checked","checkValidity"],"sources":["./src/components/text-editor/examples/text-editor-composite.scss?tag=limel-example-text-editor-composite&encapsulation=shadow","./src/components/text-editor/examples/text-editor-composite.tsx"],"sourcesContent":[":host(limel-example-text-editor-composite) {\n    --example-controls-column-layout: 3;\n}\n","import { Component, h, State, Watch } from '@stencil/core';\n/**\n * Composite example\n */\n@Component({\n    tag: 'limel-example-text-editor-composite',\n    shadow: true,\n    styleUrl: 'text-editor-composite.scss',\n})\nexport class TextEditorCompositeExample {\n    @State()\n    private value: string = 'Hello, world!';\n\n    @State()\n    private readonly = false;\n\n    @State()\n    private invalid = false;\n\n    @State()\n    private required = false;\n\n    @State()\n    private label: string;\n\n    @State()\n    private placeholder: string;\n\n    @State()\n    private helperText: string;\n\n    public render() {\n        return [\n            <limel-text-editor\n                label={this.label}\n                helperText={this.helperText}\n                value={this.value}\n                onChange={this.handleChange}\n                readonly={this.readonly}\n                required={this.required}\n                invalid={this.invalid}\n                placeholder={this.placeholder}\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.readonly}\n                    label=\"Readonly\"\n                    onChange={this.setReadonly}\n                />\n                <limel-checkbox\n                    checked={this.invalid}\n                    label=\"Invalid\"\n                    onChange={this.setInvalid}\n                />\n                <limel-checkbox\n                    checked={this.required}\n                    label=\"Required\"\n                    onChange={this.setRequired}\n                />\n                <limel-input-field\n                    label=\"label\"\n                    value={this.label}\n                    onChange={this.handleLabelChange}\n                />\n                <limel-input-field\n                    label=\"helperText\"\n                    value={this.helperText}\n                    onChange={this.handleHelperTextChange}\n                />\n                <limel-input-field\n                    label=\"placeholder\"\n                    value={this.placeholder}\n                    onChange={this.handlePlaceholderChange}\n                />\n            </limel-example-controls>,\n            <limel-example-value value={this.value} />,\n        ];\n    }\n\n    @Watch('required')\n    @Watch('value')\n    protected checkValidity() {\n        this.invalid = this.required && !this.value;\n    }\n\n    private setReadonly = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.readonly = event.detail;\n    };\n\n    private setRequired = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.required = event.detail;\n    };\n\n    private setInvalid = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.invalid = event.detail;\n    };\n\n    private handleLabelChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.label = event.detail;\n    };\n\n    private handleHelperTextChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.helperText = event.detail;\n    };\n\n    private handlePlaceholderChange = (event: CustomEvent<string>) => {\n        event.stopPropagation();\n        this.placeholder = event.detail;\n    };\n\n    private handleChange = (event: CustomEvent<string>) => {\n        this.value = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAyB,iF,MCSlBC,EAA0B,M,yBA4E3BC,KAAAC,YAAeC,IACnBA,EAAMC,kBACNH,KAAKI,SAAWF,EAAMG,MAAM,EAGxBL,KAAAM,YAAeJ,IACnBA,EAAMC,kBACNH,KAAKO,SAAWL,EAAMG,MAAM,EAGxBL,KAAAQ,WAAcN,IAClBA,EAAMC,kBACNH,KAAKS,QAAUP,EAAMG,MAAM,EAGvBL,KAAAU,kBAAqBR,IACzBA,EAAMC,kBACNH,KAAKW,MAAQT,EAAMG,MAAM,EAGrBL,KAAAY,uBAA0BV,IAC9BA,EAAMC,kBACNH,KAAKa,WAAaX,EAAMG,MAAM,EAG1BL,KAAAc,wBAA2BZ,IAC/BA,EAAMC,kBACNH,KAAKe,YAAcb,EAAMG,MAAM,EAG3BL,KAAAgB,aAAgBd,IACpBF,KAAKiB,MAAQf,EAAMG,MAAM,E,WAzGL,gB,cAGL,M,aAGD,M,cAGC,M,0EAWZa,SACH,MAAO,CACHC,EAAA,qBACIR,MAAOX,KAAKW,MACZE,WAAYb,KAAKa,WACjBI,MAAOjB,KAAKiB,MACZG,SAAUpB,KAAKgB,aACfZ,SAAUJ,KAAKI,SACfG,SAAUP,KAAKO,SACfE,QAAST,KAAKS,QACdM,YAAaf,KAAKe,cAEtBI,EAAA,8BACIA,EAAA,kBACIE,QAASrB,KAAKI,SACdO,MAAM,WACNS,SAAUpB,KAAKC,cAEnBkB,EAAA,kBACIE,QAASrB,KAAKS,QACdE,MAAM,UACNS,SAAUpB,KAAKQ,aAEnBW,EAAA,kBACIE,QAASrB,KAAKO,SACdI,MAAM,WACNS,SAAUpB,KAAKM,cAEnBa,EAAA,qBACIR,MAAM,QACNM,MAAOjB,KAAKW,MACZS,SAAUpB,KAAKU,oBAEnBS,EAAA,qBACIR,MAAM,aACNM,MAAOjB,KAAKa,WACZO,SAAUpB,KAAKY,yBAEnBO,EAAA,qBACIR,MAAM,cACNM,MAAOjB,KAAKe,YACZK,SAAUpB,KAAKc,2BAGvBK,EAAA,uBAAqBF,MAAOjB,KAAKiB,Q,CAM/BK,gBACNtB,KAAKS,QAAUT,KAAKO,WAAaP,KAAKiB,K"}