{"version":3,"names":["chipCss","Chip","this","renderAsButton","h","class","role","disabled","readonly","onKeyDown","handleDeleteKeyDown","renderIcon","renderLabel","renderBadge","renderRemoveButton","renderAsLink","href","link","title","target","tabindex","text","filterClickWhenDisabled","e","preventDefault","handleRemoveClick","event","stopPropagation","remove","emit","removable","keys","DELETE","BACKSPACE","keycodes","DELETE_KEY_CODE","BACKSPACE_KEY_CODE","includes","key","keyCode","removeChipLabel","translate","get","language","componentWillLoad","makeEnterClickable","host","disconnectedCallback","removeEnterClickable","render","Host","onClick","icon","getIconName","badge","name","style","color","_a","_b","backgroundColor","label","svgData","tabIndex","innerHTML","InteractionTrigger","strings","ARIA_HIDDEN","INTERACTION_EVENT","NAVIGATION_EVENT","TAB_INDEX","MDCChipTrailingActionFoundation","_super","__extends","adapter","call","__assign","defaultAdapter","Object","defineProperty","enumerable","configurable","focus","undefined","getAttribute","setAttribute","notifyInteraction","notifyNavigation","prototype","handleClick","evt","CLICK","handleKeydown","normalizeKey","shouldNotifyInteractionFromKey","trigger","getTriggerFromKey","isNavigationEvent","removeFocus","isNavigable","isFromActionKey","KEY","ENTER","SPACEBAR","isFromDeleteKey","SPACEBAR_KEY","ENTER_KEY","DELETE_KEY","BACKSPACE_KEY","UNSPECIFIED","MDCFoundation","MDCChipTrailingAction","apply","arguments","rippleSurface","attachTo","root","initialize","rippleFactory","el","foundation","MDCRipple","rippleAdapter","createAdapter","MDCRippleFoundation","initialSyncWithDOM","_this","listen","destroy","unlisten","getDefaultFoundation","attr","value","MDCComponent","Direction","EventSource","ADDED_ANNOUNCEMENT_ATTRIBUTE","ARIA_CHECKED","ARROW_DOWN_KEY","ARROW_LEFT_KEY","ARROW_RIGHT_KEY","ARROW_UP_KEY","CHECKMARK_SELECTOR","END_KEY","ENTRY_ANIMATION_NAME","HOME_KEY","IE_ARROW_DOWN_KEY","IE_ARROW_LEFT_KEY","IE_ARROW_RIGHT_KEY","IE_ARROW_UP_KEY","IE_DELETE_KEY","LEADING_ICON_SELECTOR","PRIMARY_ACTION_SELECTOR","REMOVED_ANNOUNCEMENT_ATTRIBUTE","REMOVAL_EVENT","SELECTION_EVENT","TRAILING_ACTION_SELECTOR","TRAILING_ICON_INTERACTION_EVENT","TRAILING_ICON_SELECTOR","cssClasses","CHECKMARK","CHIP_EXIT","DELETABLE","EDITABLE","EDITING","HIDDEN_LEADING_ICON","LEADING_ICON","PRIMARY_ACTION","PRIMARY_ACTION_FOCUSED","SELECTED","TEXT","TRAILING_ACTION","TRAILING_ICON","navigationKeys","Set","add","jumpChipKeys","emptyClientRect","bottom","height","left","right","top","width","FocusBehavior","MDCChipFoundation","shouldRemoveOnTrailingIconClick","shouldFocusPrimaryActionOnClick","addClass","addClassToLeadingIcon","eventTargetHasClass","focusPrimaryAction","focusTrailingAction","getCheckmarkBoundingClientRect","getComputedStyleValue","getRootBoundingClientRect","hasClass","hasLeadingIcon","isRTL","isTrailingActionNavigable","notifyEditFinish","notifyEditStart","notifyRemoval","notifySelection","notifyTrailingIconInteraction","removeClass","removeClassFromLeadingIcon","removeTrailingActionFocus","setPrimaryActionAttr","setStyleProperty","isSelected","isEditable","isEditing","setSelected","selected","setSelectedImpl","setSelectedFromChipSet","shouldNotifyClients","notifyIgnoredSelection","getShouldRemoveOnTrailingIconClick","setShouldRemoveOnTrailingIconClick","shouldRemove","setShouldFocusPrimaryActionOnClick","shouldFocus","getDimensions","getRootRect","getCheckmarkRect","checkmarkRect","rootRect","beginExit","setPrimaryActionFocusable","getFocusBehavior","handleDoubleClick","startEditing","handleTransitionEnd","shouldHandle","widthIsAnimating","propertyName","opacityIsAnimating","chipWidth_1","requestAnimationFrame","removedAnnouncement","shouldHideLeadingIcon","shouldShowLeadingIcon","handleFocusIn","eventFromPrimaryAction","handleFocusOut","finishEditing","handleTrailingActionInteraction","removeChip","shouldFinishEditing","shouldStartEditing","shouldNotifyInteraction","isDeleteAction","has","focusNextAction","PRIMARY","handleTrailingActionNavigation","detail","TRAILING","SHOULD_FOCUS","trailingActionIsNavigable","focusBehavior","SHOULD_NOT_FOCUS","source","dir","getDirection","RIGHT","LEFT","NONE","isLeftKey","isRightKey","isDeletable","MDCChip","set","id","trailingActionFactory","leadingIcon","querySelector","checkmark","primaryAction","trailingActionEl","trailingAction","computeBoundingRect","trailingActionStrings","className","classList","contains","getBoundingClientRect","window","getComputedStyle","getPropertyValue","chipId","shouldIgnore","setProperty","parent","parentNode","removeChild","AnnouncerPriority","DATA_MDC_DOM_ANNOUNCE","announce","message","options","Announcer","getInstance","say","liveRegions","Map","instance","priority","POLITE","ownerDocument","document","liveRegion","getLiveRegion","textContent","setTimeout","addEventListener","clearLiveRegion","removeEventListener","documentLiveRegions","existingLiveRegion","body","createLiveRegion","createElement","position","overflow","appendChild","CHIP_SELECTOR","CHOICE","FILTER","MDCChipSetFoundation","selectedChipIds","announceMessage","focusChipPrimaryActionAtIndex","focusChipTrailingActionAtIndex","getChipListCount","getIndexOfChipById","removeChipAtIndex","removeFocusFromChipAtIndex","selectChipAtIndex","getSelectedChipIds","slice","select","selectImpl","handleChipInteraction","index","removeFocusFromChipsExcept","toggleSelect","handleChipSelection","chipIsSelected","indexOf","deselectImpl","handleChipRemoval","deselectAndNotifyClients","maxIndex","nextIndex","Math","min","handleChipNavigation","chipStrings","isDownKey","shouldIncrement","isHome","isEnd","focusChipAction","shouldJumpChips","splice","chipIndex","selectAndNotifyClients","chipCount","i","length","previouslySelectedChip","previouslySelectedIndex","push","idCounter","MDCChipSet","chipsList","chipFactory","instantiateChips","e_1","__values","_c","next","done","chip","e_1_1","error","return","e_2","e_2_1","addChip","chipEl","chips","findChipIndex","chipElements","querySelectorAll","map","handleKeyboardEvent","textValue","isLeft","ARROW_LEFT","ARROW_LEFT_KEY_CODE","isRight","ARROW_RIGHT","ARROW_RIGHT_KEY_CODE","isEnter","ENTER_KEY_CODE","isDelete","isBackspace","isEscape","ESCAPE","ESCAPE_KEY_CODE","handleLeft","handleRight","handleEnter","handleDelete","handleBackspace","handleEscape","inputChipIndexSelected","emitInteraction","repeat","chipSetCss","INPUT_FIELD_TABINDEX","ChipSet","constructor","hostRef","handleKeyDown","renderEmptyValueForReadonly","floatLabelAbove","editMode","dropZoneTip","hasHelperText","helperText","renderHelperLine","maxItems","maxLength","invalid","isInvalid","newValue","filter","change","clearAllChipsLabel","renderChip","bind","renderInputChip","isFull","handleInteractionEvent","handleSelection","handleTextFieldFocus","handleInputBlur","handleTextInput","inputFieldOnChange","inputHidden","handleDeleteAllIconClick","renderDelimiter","async","emptyInput","shadowRoot","startEdit","syncEmptyInput","componentDidLoad","triggerIconColorWarning","type","mdcTextField","MDCTextField","createMDCChipSet","componentWillUpdate","destroyMDCChipSet","componentDidUpdate","input","renderInputChips","classes","chipSetLabel","renderChipSetLabel","handleChangeChips","oldValue","isEqual","mdcChipSet","clearAllButton","inputType","hidden","onBlur","onFocus","onInput","onChange","placeholder","searchLabel","required","renderLeadingIcon","renderClearAllChipsButton","labelClassList","htmlFor","blurred","emptyInputOnBlur","stopEdit","trim","find","item","interact","assign","chipType","chipProps","getChipProps","catchInputChipClicks","onRemove","getHref","getTarget","delimiter","iconFillColor","iconBackgroundColor","iconTitle","console","warn"],"sources":["./src/components/chip/chip.scss?tag=limel-chip&encapsulation=shadow","./src/components/chip/chip.tsx","./node_modules/@material/chips/deprecated/trailingaction/constants.js","./node_modules/@material/chips/deprecated/trailingaction/foundation.js","./node_modules/@material/chips/deprecated/trailingaction/component.js","./node_modules/@material/chips/deprecated/chip/constants.js","./node_modules/@material/chips/deprecated/chip/foundation.js","./node_modules/@material/chips/deprecated/chip/component.js","./node_modules/@material/dom/announce.js","./node_modules/@material/chips/deprecated/chip-set/constants.js","./node_modules/@material/chips/deprecated/chip-set/foundation.js","./node_modules/@material/chips/deprecated/chip-set/component.js","./src/components/chip-set/chip-set-input-helpers.ts","./src/components/chip-set/chip-set.scss?tag=limel-chip-set&encapsulation=shadow","./src/components/chip-set/chip-set.tsx"],"sourcesContent":["@use '../../style/mixins';\n\n/**\n* @prop --chip-max-width: Maximum width of the chip. Defaults to `10rem`. Keep in mind that the chips should not appear too big.\n*/\n\n:host(limel-chip) {\n    --limel-chip-height: 1.75rem;\n    --limel-chip-gap: 0.5rem;\n    isolation: isolate;\n    display: inline-flex;\n    align-items: center;\n}\n\n* {\n    box-sizing: border-box;\n}\n\n.chip {\n    all: unset;\n    position: relative;\n\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.25rem;\n\n    max-width: var(--chip-max-width, 10rem);\n    height: var(--limel-chip-height);\n\n    border-radius: var(--limel-chip-height);\n    font-size: 0.875rem;\n    padding: 0 0.125rem;\n\n    &:has(limel-icon) {\n        .text {\n            padding-left: 0.25rem;\n        }\n    }\n\n    &:not([disabled]) {\n        @include mixins.visualize-keyboard-focus;\n        @include mixins.is-elevated-inset-clickable;\n    }\n\n    &:has(limel-badge) {\n        padding-right: 0.375rem;\n\n        .text {\n            padding-right: 0;\n        }\n    }\n\n    &:has(+ .remove-button:hover) {\n        box-shadow: var(--shadow-depth-8-error);\n    }\n}\n\n:host(limel-chip[disabled]) {\n    .chip {\n        // Similar to `limel-button[disabled]`\n        color: rgba(var(--contrast-1600), 0.37);\n        background-color: rgba(var(--contrast-1600), 0.1);\n        box-shadow: none;\n    }\n}\n\n:host(limel-chip[readonly]) {\n    .chip {\n        box-shadow: 0 0 0 1px rgba(var(--contrast-800), 0.5);\n    }\n}\n\n:host(limel-chip[selected]) {\n    .chip {\n        box-shadow: var(--button-shadow-inset);\n\n        &:focus-visible {\n            box-shadow: var(--button-shadow-inset),\n                var(--shadow-depth-8-focused);\n        }\n\n        &:active {\n            box-shadow: var(--button-shadow-inset-pressed);\n        }\n    }\n    .text {\n        color: var(--mdc-theme-primary);\n    }\n}\n\n:host(limel-chip[removable]:not([disabled])) {\n    .chip {\n        padding-right: calc(var(--limel-chip-height) + 0.125rem);\n\n        .text {\n            padding-right: 0;\n        }\n    }\n}\n\n:host(limel-chip[type='filter']) {\n    .chip {\n        border-top-left-radius: 0.5rem;\n        border-bottom-left-radius: 0.5rem;\n\n        &:after {\n            content: '';\n            transition:\n                background-color 0.4s ease 0.2s,\n                box-shadow 0.6s ease 0.2s;\n            box-sizing: border-box;\n            position: absolute;\n            bottom: 0.125rem;\n            left: 0.125rem;\n            width: 0.5rem;\n            height: 0.5rem;\n            border-radius: 50%;\n            background-color: rgb(var(--contrast-800), 0.8);\n            box-shadow: 0 0 0 1px rgb(var(--color-white)) inset;\n        }\n    }\n}\n\n:host(limel-chip[type='filter'][selected]) {\n    .chip {\n        &:after {\n            background-color: rgb(var(--color-green-default));\n            box-shadow:\n                0 0 0.375rem 0 rgb(var(--color-green-light)),\n                0 0 0 1px rgb(var(--color-white)) inset;\n        }\n    }\n}\n\nlimel-icon {\n    flex-shrink: 0;\n    width: calc(var(--limel-chip-height) - 0.25rem);\n    height: calc(var(--limel-chip-height) - 0.25rem);\n    padding: 0.0625rem;\n}\n\nlimel-badge {\n    pointer-events: none;\n}\n\n.text {\n    @include mixins.truncate-text;\n    line-height: 1.2;\n    padding: 0 0.5rem;\n}\n\n.trailing-button {\n    all: unset;\n    @include mixins.is-flat-clickable(\n        $color--hovered: rgb(var(--color-red-dark))\n    );\n\n    z-index: 1;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    margin-left: calc(var(--limel-chip-height) * -1 + 0.125rem);\n    margin-right: 0.125rem;\n    width: calc(var(--limel-chip-height) - 0.25rem);\n    height: calc(var(--limel-chip-height) - 0.25rem);\n\n    border-radius: 50%;\n\n    svg {\n        transition:\n            color 0.2s ease,\n            transform 0.2s ease;\n        width: 1.25rem;\n    }\n\n    &:hover {\n        svg {\n            transform: scale(0.8);\n        }\n    }\n}\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n} from '@stencil/core';\nimport { Icon, Languages, Link } from '../../interface';\nimport { getIconName } from '../icon/get-icon-props';\nimport {\n    makeEnterClickable,\n    removeEnterClickable,\n} from '../../util/make-enter-clickable';\nimport translate from '../../global/translations';\nimport {\n    BACKSPACE,\n    BACKSPACE_KEY_CODE,\n    DELETE,\n    DELETE_KEY_CODE,\n} from '../../util/keycodes';\nimport { ChipType, Chip as OldChipInterface } from '../chip-set/chip.types';\n\ninterface ChipInterface extends Omit<OldChipInterface, 'id' | 'badge'> {\n    badge?: string | number;\n}\n\n/**\n * Chips and buttons are both interactive elements in UI design,\n * but they serve different purposes and are used in different contexts.\n *\n * :::warning\n * Do not use the chip component carelessly, as an alternative for\n * [`limel-button`](#/component/limel-button/) in the UI design!\n *\n * **Buttons:**\n * Buttons are used to trigger actions. They are typically used to\n * submit forms, open dialogs, initiate a process, or perform any action\n * that changes the state of the application.\n * Buttons' labels usually contain action words, in other words, the labels is\n * a _verb in imperative mood_ such as \"Submit\" or \"Delete\".\n * Buttons are placed in areas where it's clear they will initiate\n * an action when clicked.\n *\n * **Chips:**\n * Chips however are elements which may look like buttons, but they are\n * representing choices, filters, or tags, in a small block\n * or clearly bundled into a group. Chips are rarely used alone in the\n * user interface.\n * They are often used in a so called \"chip-set\", or placed together in\n * a section of the UI, where the user can expect more than one chip to be present.\n *\n * For example, a chip may represent a filter in a filter bar, or a tag in a tag list,\n * or an item in a shopping list.\n * Clicking a chip can also trigger an action, for example toggling a filter ON or OFF,\n * or opening a page with all posts tagged with the tag represented by the chip,\n * or navigating to a page with more information about the item in the shopping list.\n * :::\n *\n * @private\n * @exampleComponent limel-example-chip-button\n * @exampleComponent limel-example-chip-link\n * @exampleComponent limel-example-chip-icon-colors\n * @exampleComponent limel-example-chip-badge\n * @exampleComponent limel-example-chip-filter\n * @exampleComponent limel-example-chip-removable\n * @exampleComponent limel-example-chip-aria-role\n */\n@Component({\n    tag: 'limel-chip',\n    shadow: true,\n    styleUrl: 'chip.scss',\n})\nexport class Chip implements ChipInterface {\n    /**\n     * Defines the language for translations.\n     * Will translate the translatable strings on the components.\n     */\n    @Prop({ reflect: true })\n    public language: Languages = 'en';\n\n    /**\n     * Label displayed on the chip\n     */\n    @Prop({ reflect: true })\n    public text: string;\n\n    /**\n     * Icon of the chip.\n     */\n    @Prop()\n    public icon?: string | Icon;\n\n    /**\n     * If supplied, the chip will become a clickable link.\n     */\n    @Prop()\n    public link?: Omit<Link, 'text'>;\n\n    /**\n     * The value of the badge, displayed on the chip.\n     */\n    @Prop({ reflect: true })\n    public badge?: string | number;\n\n    /**\n     * Set to `true` to disable the chip.\n     */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /**\n     * Set to `true` to render the chip as a static UI element.\n     * Useful when the parent component has a `readonly` state.\n     */\n    @Prop({ reflect: true })\n    public readonly = false;\n\n    /**\n     * Set to `true` to visualize the chip in a \"selected\" state.\n     * This is typically used when the chip is used in a chip-set\n     * along with other chips.\n     */\n    @Prop({ reflect: true })\n    public selected = false;\n\n    /**\n     * Set to `true` to render a remove button on the chip.\n     */\n    @Prop({ reflect: true })\n    public removable = false;\n\n    /**\n     * Set to `filter` to render the chip with a distinct style\n     * suitable for visualizing filters.\n     */\n    @Prop({ reflect: true })\n    public type?: ChipType = 'default';\n\n    /**\n     * Fired when clicking on the remove button of a `removable` chip.\n     */\n    @Event()\n    public remove: EventEmitter<void>;\n\n    @Element()\n    private host: HTMLLimelChipElement;\n\n    public componentWillLoad() {\n        makeEnterClickable(this.host);\n    }\n\n    public disconnectedCallback() {\n        removeEnterClickable(this.host);\n    }\n\n    public render() {\n        return (\n            <Host onClick={this.filterClickWhenDisabled}>\n                {this.link ? this.renderAsLink() : this.renderAsButton()}\n            </Host>\n        );\n    }\n\n    private renderAsButton = () => {\n        return [\n            <button\n                class=\"chip\"\n                role=\"button\"\n                disabled={this.disabled || this.readonly}\n                onKeyDown={this.handleDeleteKeyDown}\n            >\n                {this.renderIcon()}\n                {this.renderLabel()}\n                {this.renderBadge()}\n            </button>,\n            this.renderRemoveButton(),\n        ];\n    };\n\n    private renderAsLink = () => {\n        return [\n            <a\n                class=\"chip\"\n                href={this.link.href}\n                title={this.link.title}\n                target={this.link.target}\n                aria-disabled={this.disabled || this.readonly}\n                tabindex={this.disabled || this.readonly ? -1 : 0}\n                onKeyDown={this.handleDeleteKeyDown}\n            >\n                {this.renderIcon()}\n                {this.renderLabel()}\n                {this.renderBadge()}\n            </a>,\n            this.renderRemoveButton(),\n        ];\n    };\n\n    private renderLabel = () => {\n        return <span class=\"text\">{this.text}</span>;\n    };\n\n    private renderIcon() {\n        const icon = getIconName(this.icon);\n\n        if (!icon) {\n            return;\n        }\n\n        return (\n            <limel-icon\n                badge={true}\n                name={icon}\n                style={{\n                    color: `${(this.icon as Icon)?.color}`,\n                    'background-color': `${\n                        (this.icon as Icon)?.backgroundColor\n                    }`,\n                }}\n            />\n        );\n    }\n\n    private renderBadge() {\n        if (!this.badge) {\n            return;\n        }\n\n        return <limel-badge label={this.badge} />;\n    }\n\n    private renderRemoveButton() {\n        if (!this.removable || this.readonly || this.disabled) {\n            return;\n        }\n\n        const svgData =\n            '<svg viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\"><path fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" d=\"m8 8 16 16M24 8 8 24\"/></svg>';\n\n        return (\n            <button\n                class=\"trailing-button remove-button\"\n                tabIndex={-1}\n                aria-label={this.removeChipLabel}\n                innerHTML={svgData}\n                onClick={this.handleRemoveClick}\n            />\n        );\n    }\n\n    private filterClickWhenDisabled = (e) => {\n        if (this.disabled || this.readonly) {\n            e.preventDefault();\n        }\n    };\n\n    private handleRemoveClick = (event: MouseEvent | KeyboardEvent) => {\n        event.stopPropagation();\n        this.remove.emit();\n    };\n\n    private handleDeleteKeyDown = (event: KeyboardEvent) => {\n        if (!this.removable) {\n            return;\n        }\n\n        const keys = [DELETE, BACKSPACE];\n        const keycodes = [DELETE_KEY_CODE, BACKSPACE_KEY_CODE];\n\n        if (keys.includes(event.key) || keycodes.includes(event.keyCode)) {\n            this.handleRemoveClick(event);\n        }\n    };\n\n    private removeChipLabel = (): string => {\n        return translate.get('chip-set.remove-chip', this.language);\n    };\n}\n","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var InteractionTrigger;\n(function (InteractionTrigger) {\n    InteractionTrigger[InteractionTrigger[\"UNSPECIFIED\"] = 0] = \"UNSPECIFIED\";\n    InteractionTrigger[InteractionTrigger[\"CLICK\"] = 1] = \"CLICK\";\n    InteractionTrigger[InteractionTrigger[\"BACKSPACE_KEY\"] = 2] = \"BACKSPACE_KEY\";\n    InteractionTrigger[InteractionTrigger[\"DELETE_KEY\"] = 3] = \"DELETE_KEY\";\n    InteractionTrigger[InteractionTrigger[\"SPACEBAR_KEY\"] = 4] = \"SPACEBAR_KEY\";\n    InteractionTrigger[InteractionTrigger[\"ENTER_KEY\"] = 5] = \"ENTER_KEY\";\n})(InteractionTrigger || (InteractionTrigger = {}));\nexport var strings = {\n    ARIA_HIDDEN: 'aria-hidden',\n    INTERACTION_EVENT: 'MDCChipTrailingAction:interaction',\n    NAVIGATION_EVENT: 'MDCChipTrailingAction:navigation',\n    TAB_INDEX: 'tabindex',\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { isNavigationEvent, KEY, normalizeKey } from '@material/dom/keyboard';\nimport { InteractionTrigger, strings } from './constants';\nvar MDCChipTrailingActionFoundation = /** @class */ (function (_super) {\n    __extends(MDCChipTrailingActionFoundation, _super);\n    function MDCChipTrailingActionFoundation(adapter) {\n        return _super.call(this, __assign(__assign({}, MDCChipTrailingActionFoundation.defaultAdapter), adapter)) || this;\n    }\n    Object.defineProperty(MDCChipTrailingActionFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipTrailingActionFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                focus: function () { return undefined; },\n                getAttribute: function () { return null; },\n                setAttribute: function () { return undefined; },\n                notifyInteraction: function () { return undefined; },\n                notifyNavigation: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChipTrailingActionFoundation.prototype.handleClick = function (evt) {\n        evt.stopPropagation();\n        this.adapter.notifyInteraction(InteractionTrigger.CLICK);\n    };\n    MDCChipTrailingActionFoundation.prototype.handleKeydown = function (evt) {\n        evt.stopPropagation();\n        var key = normalizeKey(evt);\n        if (this.shouldNotifyInteractionFromKey(key)) {\n            var trigger = this.getTriggerFromKey(key);\n            this.adapter.notifyInteraction(trigger);\n            return;\n        }\n        if (isNavigationEvent(evt)) {\n            this.adapter.notifyNavigation(key);\n            return;\n        }\n    };\n    MDCChipTrailingActionFoundation.prototype.removeFocus = function () {\n        this.adapter.setAttribute(strings.TAB_INDEX, '-1');\n    };\n    MDCChipTrailingActionFoundation.prototype.focus = function () {\n        this.adapter.setAttribute(strings.TAB_INDEX, '0');\n        this.adapter.focus();\n    };\n    MDCChipTrailingActionFoundation.prototype.isNavigable = function () {\n        return this.adapter.getAttribute(strings.ARIA_HIDDEN) !== 'true';\n    };\n    MDCChipTrailingActionFoundation.prototype.shouldNotifyInteractionFromKey = function (key) {\n        var isFromActionKey = key === KEY.ENTER || key === KEY.SPACEBAR;\n        var isFromDeleteKey = key === KEY.BACKSPACE || key === KEY.DELETE;\n        return isFromActionKey || isFromDeleteKey;\n    };\n    MDCChipTrailingActionFoundation.prototype.getTriggerFromKey = function (key) {\n        if (key === KEY.SPACEBAR) {\n            return InteractionTrigger.SPACEBAR_KEY;\n        }\n        if (key === KEY.ENTER) {\n            return InteractionTrigger.ENTER_KEY;\n        }\n        if (key === KEY.DELETE) {\n            return InteractionTrigger.DELETE_KEY;\n        }\n        if (key === KEY.BACKSPACE) {\n            return InteractionTrigger.BACKSPACE_KEY;\n        }\n        // Default case, should never be returned\n        return InteractionTrigger.UNSPECIFIED;\n    };\n    return MDCChipTrailingActionFoundation;\n}(MDCFoundation));\nexport { MDCChipTrailingActionFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipTrailingActionFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { strings } from './constants';\nimport { MDCChipTrailingActionFoundation } from './foundation';\nvar MDCChipTrailingAction = /** @class */ (function (_super) {\n    __extends(MDCChipTrailingAction, _super);\n    function MDCChipTrailingAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCChipTrailingAction.prototype, \"ripple\", {\n        get: function () {\n            return this.rippleSurface;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChipTrailingAction.attachTo = function (root) {\n        return new MDCChipTrailingAction(root);\n    };\n    MDCChipTrailingAction.prototype.initialize = function (rippleFactory) {\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) {\n            return new MDCRipple(el, foundation);\n        }; }\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var rippleAdapter = MDCRipple.createAdapter(this);\n        this.rippleSurface =\n            rippleFactory(this.root, new MDCRippleFoundation(rippleAdapter));\n    };\n    MDCChipTrailingAction.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        this.handleClick = function (evt) {\n            _this.foundation.handleClick(evt);\n        };\n        this.handleKeydown = function (evt) {\n            _this.foundation.handleKeydown(evt);\n        };\n        this.listen('click', this.handleClick);\n        this.listen('keydown', this.handleKeydown);\n    };\n    MDCChipTrailingAction.prototype.destroy = function () {\n        this.rippleSurface.destroy();\n        this.unlisten('click', this.handleClick);\n        this.unlisten('keydown', this.handleKeydown);\n        _super.prototype.destroy.call(this);\n    };\n    MDCChipTrailingAction.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take\n        // a Partial<MDCFooAdapter>. To ensure we don't accidentally omit any\n        // methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            focus: function () {\n                // TODO(b/157231863): Migate MDCComponent#root to HTMLElement\n                _this.root.focus();\n            },\n            getAttribute: function (attr) { return _this.root.getAttribute(attr); },\n            notifyInteraction: function (trigger) {\n                return _this.emit(strings.INTERACTION_EVENT, { trigger: trigger }, true /* shouldBubble */);\n            },\n            notifyNavigation: function (key) {\n                _this.emit(strings.NAVIGATION_EVENT, { key: key }, true /* shouldBubble */);\n            },\n            setAttribute: function (attr, value) {\n                _this.root.setAttribute(attr, value);\n            },\n        };\n        return new MDCChipTrailingActionFoundation(adapter);\n    };\n    MDCChipTrailingAction.prototype.isNavigable = function () {\n        return this.foundation.isNavigable();\n    };\n    MDCChipTrailingAction.prototype.focus = function () {\n        this.foundation.focus();\n    };\n    MDCChipTrailingAction.prototype.removeFocus = function () {\n        this.foundation.removeFocus();\n    };\n    return MDCChipTrailingAction;\n}(MDCComponent));\nexport { MDCChipTrailingAction };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var Direction;\n(function (Direction) {\n    Direction[\"LEFT\"] = \"left\";\n    Direction[\"RIGHT\"] = \"right\";\n})(Direction || (Direction = {}));\nexport var EventSource;\n(function (EventSource) {\n    EventSource[\"PRIMARY\"] = \"primary\";\n    EventSource[\"TRAILING\"] = \"trailing\";\n    EventSource[\"NONE\"] = \"none\";\n})(EventSource || (EventSource = {}));\nexport var strings = {\n    ADDED_ANNOUNCEMENT_ATTRIBUTE: 'data-mdc-chip-added-announcement',\n    ARIA_CHECKED: 'aria-checked',\n    ARROW_DOWN_KEY: 'ArrowDown',\n    ARROW_LEFT_KEY: 'ArrowLeft',\n    ARROW_RIGHT_KEY: 'ArrowRight',\n    ARROW_UP_KEY: 'ArrowUp',\n    BACKSPACE_KEY: 'Backspace',\n    CHECKMARK_SELECTOR: '.mdc-chip__checkmark',\n    DELETE_KEY: 'Delete',\n    END_KEY: 'End',\n    ENTER_KEY: 'Enter',\n    ENTRY_ANIMATION_NAME: 'mdc-chip-entry',\n    HOME_KEY: 'Home',\n    IE_ARROW_DOWN_KEY: 'Down',\n    IE_ARROW_LEFT_KEY: 'Left',\n    IE_ARROW_RIGHT_KEY: 'Right',\n    IE_ARROW_UP_KEY: 'Up',\n    IE_DELETE_KEY: 'Del',\n    INTERACTION_EVENT: 'MDCChip:interaction',\n    LEADING_ICON_SELECTOR: '.mdc-chip__icon--leading',\n    NAVIGATION_EVENT: 'MDCChip:navigation',\n    PRIMARY_ACTION_SELECTOR: '.mdc-chip__primary-action',\n    REMOVED_ANNOUNCEMENT_ATTRIBUTE: 'data-mdc-chip-removed-announcement',\n    REMOVAL_EVENT: 'MDCChip:removal',\n    SELECTION_EVENT: 'MDCChip:selection',\n    SPACEBAR_KEY: ' ',\n    TAB_INDEX: 'tabindex',\n    TRAILING_ACTION_SELECTOR: '.mdc-chip-trailing-action',\n    TRAILING_ICON_INTERACTION_EVENT: 'MDCChip:trailingIconInteraction',\n    TRAILING_ICON_SELECTOR: '.mdc-chip__icon--trailing',\n};\nexport var cssClasses = {\n    CHECKMARK: 'mdc-chip__checkmark',\n    CHIP_EXIT: 'mdc-chip--exit',\n    DELETABLE: 'mdc-chip--deletable',\n    EDITABLE: 'mdc-chip--editable',\n    EDITING: 'mdc-chip--editing',\n    HIDDEN_LEADING_ICON: 'mdc-chip__icon--leading-hidden',\n    LEADING_ICON: 'mdc-chip__icon--leading',\n    PRIMARY_ACTION: 'mdc-chip__primary-action',\n    PRIMARY_ACTION_FOCUSED: 'mdc-chip--primary-action-focused',\n    SELECTED: 'mdc-chip--selected',\n    TEXT: 'mdc-chip__text',\n    TRAILING_ACTION: 'mdc-chip__trailing-action',\n    TRAILING_ICON: 'mdc-chip__icon--trailing',\n};\nexport var navigationKeys = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\nnavigationKeys.add(strings.ARROW_LEFT_KEY);\nnavigationKeys.add(strings.ARROW_RIGHT_KEY);\nnavigationKeys.add(strings.ARROW_DOWN_KEY);\nnavigationKeys.add(strings.ARROW_UP_KEY);\nnavigationKeys.add(strings.END_KEY);\nnavigationKeys.add(strings.HOME_KEY);\nnavigationKeys.add(strings.IE_ARROW_LEFT_KEY);\nnavigationKeys.add(strings.IE_ARROW_RIGHT_KEY);\nnavigationKeys.add(strings.IE_ARROW_DOWN_KEY);\nnavigationKeys.add(strings.IE_ARROW_UP_KEY);\nexport var jumpChipKeys = new Set();\n// IE11 has no support for new Set with iterable so we need to initialize this by hand\njumpChipKeys.add(strings.ARROW_UP_KEY);\njumpChipKeys.add(strings.ARROW_DOWN_KEY);\njumpChipKeys.add(strings.HOME_KEY);\njumpChipKeys.add(strings.END_KEY);\njumpChipKeys.add(strings.IE_ARROW_UP_KEY);\njumpChipKeys.add(strings.IE_ARROW_DOWN_KEY);\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, Direction, EventSource, jumpChipKeys, navigationKeys, strings } from './constants';\nvar emptyClientRect = {\n    bottom: 0,\n    height: 0,\n    left: 0,\n    right: 0,\n    top: 0,\n    width: 0,\n};\nvar FocusBehavior;\n(function (FocusBehavior) {\n    FocusBehavior[FocusBehavior[\"SHOULD_FOCUS\"] = 0] = \"SHOULD_FOCUS\";\n    FocusBehavior[FocusBehavior[\"SHOULD_NOT_FOCUS\"] = 1] = \"SHOULD_NOT_FOCUS\";\n})(FocusBehavior || (FocusBehavior = {}));\nvar MDCChipFoundation = /** @class */ (function (_super) {\n    __extends(MDCChipFoundation, _super);\n    function MDCChipFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCChipFoundation.defaultAdapter), adapter)) || this;\n        /** Whether a trailing icon click should immediately trigger exit/removal of the chip. */\n        _this.shouldRemoveOnTrailingIconClick = true;\n        /**\n         * Whether the primary action should receive focus on click. Should only be\n         * set to true for clients who programmatically give focus to a different\n         * element on the page when a chip is clicked (like a menu).\n         */\n        _this.shouldFocusPrimaryActionOnClick = true;\n        return _this;\n    }\n    Object.defineProperty(MDCChipFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                addClassToLeadingIcon: function () { return undefined; },\n                eventTargetHasClass: function () { return false; },\n                focusPrimaryAction: function () { return undefined; },\n                focusTrailingAction: function () { return undefined; },\n                getAttribute: function () { return null; },\n                getCheckmarkBoundingClientRect: function () { return emptyClientRect; },\n                getComputedStyleValue: function () { return ''; },\n                getRootBoundingClientRect: function () { return emptyClientRect; },\n                hasClass: function () { return false; },\n                hasLeadingIcon: function () { return false; },\n                isRTL: function () { return false; },\n                isTrailingActionNavigable: function () { return false; },\n                notifyEditFinish: function () { return undefined; },\n                notifyEditStart: function () { return undefined; },\n                notifyInteraction: function () { return undefined; },\n                notifyNavigation: function () { return undefined; },\n                notifyRemoval: function () { return undefined; },\n                notifySelection: function () { return undefined; },\n                notifyTrailingIconInteraction: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                removeClassFromLeadingIcon: function () { return undefined; },\n                removeTrailingActionFocus: function () { return undefined; },\n                setPrimaryActionAttr: function () { return undefined; },\n                setStyleProperty: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChipFoundation.prototype.isSelected = function () {\n        return this.adapter.hasClass(cssClasses.SELECTED);\n    };\n    MDCChipFoundation.prototype.isEditable = function () {\n        return this.adapter.hasClass(cssClasses.EDITABLE);\n    };\n    MDCChipFoundation.prototype.isEditing = function () {\n        return this.adapter.hasClass(cssClasses.EDITING);\n    };\n    MDCChipFoundation.prototype.setSelected = function (selected) {\n        this.setSelectedImpl(selected);\n        this.notifySelection(selected);\n    };\n    MDCChipFoundation.prototype.setSelectedFromChipSet = function (selected, shouldNotifyClients) {\n        this.setSelectedImpl(selected);\n        if (shouldNotifyClients) {\n            this.notifyIgnoredSelection(selected);\n        }\n    };\n    MDCChipFoundation.prototype.getShouldRemoveOnTrailingIconClick = function () {\n        return this.shouldRemoveOnTrailingIconClick;\n    };\n    MDCChipFoundation.prototype.setShouldRemoveOnTrailingIconClick = function (shouldRemove) {\n        this.shouldRemoveOnTrailingIconClick = shouldRemove;\n    };\n    MDCChipFoundation.prototype.setShouldFocusPrimaryActionOnClick = function (shouldFocus) {\n        this.shouldFocusPrimaryActionOnClick = shouldFocus;\n    };\n    MDCChipFoundation.prototype.getDimensions = function () {\n        var _this = this;\n        var getRootRect = function () { return _this.adapter.getRootBoundingClientRect(); };\n        var getCheckmarkRect = function () {\n            return _this.adapter.getCheckmarkBoundingClientRect();\n        };\n        // When a chip has a checkmark and not a leading icon, the bounding rect changes in size depending on the current\n        // size of the checkmark.\n        if (!this.adapter.hasLeadingIcon()) {\n            var checkmarkRect = getCheckmarkRect();\n            if (checkmarkRect) {\n                var rootRect = getRootRect();\n                // Checkmark is a square, meaning the client rect's width and height are identical once the animation completes.\n                // However, the checkbox is initially hidden by setting the width to 0.\n                // To account for an initial width of 0, we use the checkbox's height instead (which equals the end-state width)\n                // when adding it to the root client rect's width.\n                return {\n                    bottom: rootRect.bottom,\n                    height: rootRect.height,\n                    left: rootRect.left,\n                    right: rootRect.right,\n                    top: rootRect.top,\n                    width: rootRect.width + checkmarkRect.height,\n                };\n            }\n        }\n        return getRootRect();\n    };\n    /**\n     * Begins the exit animation which leads to removal of the chip.\n     */\n    MDCChipFoundation.prototype.beginExit = function () {\n        this.adapter.addClass(cssClasses.CHIP_EXIT);\n    };\n    MDCChipFoundation.prototype.handleClick = function () {\n        this.adapter.notifyInteraction();\n        this.setPrimaryActionFocusable(this.getFocusBehavior());\n    };\n    MDCChipFoundation.prototype.handleDoubleClick = function () {\n        if (this.isEditable()) {\n            this.startEditing();\n        }\n    };\n    /**\n     * Handles a transition end event on the root element.\n     */\n    MDCChipFoundation.prototype.handleTransitionEnd = function (evt) {\n        var _this = this;\n        // Handle transition end event on the chip when it is about to be removed.\n        var shouldHandle = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHIP_EXIT);\n        var widthIsAnimating = evt.propertyName === 'width';\n        var opacityIsAnimating = evt.propertyName === 'opacity';\n        if (shouldHandle && opacityIsAnimating) {\n            // See: https://css-tricks.com/using-css-transitions-auto-dimensions/#article-header-id-5\n            var chipWidth_1 = this.adapter.getComputedStyleValue('width');\n            // On the next frame (once we get the computed width), explicitly set the chip's width\n            // to its current pixel width, so we aren't transitioning out of 'auto'.\n            requestAnimationFrame(function () {\n                _this.adapter.setStyleProperty('width', chipWidth_1);\n                // To mitigate jitter, start transitioning padding and margin before width.\n                _this.adapter.setStyleProperty('padding', '0');\n                _this.adapter.setStyleProperty('margin', '0');\n                // On the next frame (once width is explicitly set), transition width to 0.\n                requestAnimationFrame(function () {\n                    _this.adapter.setStyleProperty('width', '0');\n                });\n            });\n            return;\n        }\n        if (shouldHandle && widthIsAnimating) {\n            this.removeFocus();\n            var removedAnnouncement = this.adapter.getAttribute(strings.REMOVED_ANNOUNCEMENT_ATTRIBUTE);\n            this.adapter.notifyRemoval(removedAnnouncement);\n        }\n        // Handle a transition end event on the leading icon or checkmark, since the transition end event bubbles.\n        if (!opacityIsAnimating) {\n            return;\n        }\n        var shouldHideLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.LEADING_ICON) &&\n            this.adapter.hasClass(cssClasses.SELECTED);\n        var shouldShowLeadingIcon = this.adapter.eventTargetHasClass(evt.target, cssClasses.CHECKMARK) &&\n            !this.adapter.hasClass(cssClasses.SELECTED);\n        if (shouldHideLeadingIcon) {\n            this.adapter.addClassToLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n            return;\n        }\n        if (shouldShowLeadingIcon) {\n            this.adapter.removeClassFromLeadingIcon(cssClasses.HIDDEN_LEADING_ICON);\n            return;\n        }\n    };\n    MDCChipFoundation.prototype.handleFocusIn = function (evt) {\n        // Early exit if the event doesn't come from the primary action\n        if (!this.eventFromPrimaryAction(evt)) {\n            return;\n        }\n        this.adapter.addClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n    };\n    MDCChipFoundation.prototype.handleFocusOut = function (evt) {\n        // Early exit if the event doesn't come from the primary action\n        if (!this.eventFromPrimaryAction(evt)) {\n            return;\n        }\n        if (this.isEditing()) {\n            this.finishEditing();\n        }\n        this.adapter.removeClass(cssClasses.PRIMARY_ACTION_FOCUSED);\n    };\n    /**\n     * Handles an interaction event on the trailing icon element. This is used to\n     * prevent the ripple from activating on interaction with the trailing icon.\n     */\n    MDCChipFoundation.prototype.handleTrailingActionInteraction = function () {\n        this.adapter.notifyTrailingIconInteraction();\n        this.removeChip();\n    };\n    /**\n     * Handles a keydown event from the root element.\n     */\n    MDCChipFoundation.prototype.handleKeydown = function (evt) {\n        if (this.isEditing()) {\n            if (this.shouldFinishEditing(evt)) {\n                evt.preventDefault();\n                this.finishEditing();\n            }\n            // When editing, the foundation should only handle key events that finish\n            // the editing process.\n            return;\n        }\n        if (this.isEditable()) {\n            if (this.shouldStartEditing(evt)) {\n                evt.preventDefault();\n                this.startEditing();\n            }\n        }\n        if (this.shouldNotifyInteraction(evt)) {\n            this.adapter.notifyInteraction();\n            this.setPrimaryActionFocusable(this.getFocusBehavior());\n            return;\n        }\n        if (this.isDeleteAction(evt)) {\n            evt.preventDefault();\n            this.removeChip();\n            return;\n        }\n        // Early exit if the key is not usable\n        if (!navigationKeys.has(evt.key)) {\n            return;\n        }\n        // Prevent default behavior for movement keys which could include scrolling\n        evt.preventDefault();\n        this.focusNextAction(evt.key, EventSource.PRIMARY);\n    };\n    MDCChipFoundation.prototype.handleTrailingActionNavigation = function (evt) {\n        this.focusNextAction(evt.detail.key, EventSource.TRAILING);\n    };\n    /**\n     * Called by the chip set to remove focus from the chip actions.\n     */\n    MDCChipFoundation.prototype.removeFocus = function () {\n        this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n        this.adapter.removeTrailingActionFocus();\n    };\n    /**\n     * Called by the chip set to focus the primary action.\n     *\n     */\n    MDCChipFoundation.prototype.focusPrimaryAction = function () {\n        this.setPrimaryActionFocusable(FocusBehavior.SHOULD_FOCUS);\n    };\n    /**\n     * Called by the chip set to focus the trailing action (if present), otherwise\n     * gives focus to the trailing action.\n     */\n    MDCChipFoundation.prototype.focusTrailingAction = function () {\n        var trailingActionIsNavigable = this.adapter.isTrailingActionNavigable();\n        if (trailingActionIsNavigable) {\n            this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '-1');\n            this.adapter.focusTrailingAction();\n            return;\n        }\n        this.focusPrimaryAction();\n    };\n    MDCChipFoundation.prototype.setPrimaryActionFocusable = function (focusBehavior) {\n        this.adapter.setPrimaryActionAttr(strings.TAB_INDEX, '0');\n        if (focusBehavior === FocusBehavior.SHOULD_FOCUS) {\n            this.adapter.focusPrimaryAction();\n        }\n        this.adapter.removeTrailingActionFocus();\n    };\n    MDCChipFoundation.prototype.getFocusBehavior = function () {\n        if (this.shouldFocusPrimaryActionOnClick) {\n            return FocusBehavior.SHOULD_FOCUS;\n        }\n        return FocusBehavior.SHOULD_NOT_FOCUS;\n    };\n    MDCChipFoundation.prototype.focusNextAction = function (key, source) {\n        var isTrailingActionNavigable = this.adapter.isTrailingActionNavigable();\n        var dir = this.getDirection(key);\n        // Early exit if the key should jump chips\n        if (jumpChipKeys.has(key) || !isTrailingActionNavigable) {\n            this.adapter.notifyNavigation(key, source);\n            return;\n        }\n        if (source === EventSource.PRIMARY && dir === Direction.RIGHT) {\n            this.focusTrailingAction();\n            return;\n        }\n        if (source === EventSource.TRAILING && dir === Direction.LEFT) {\n            this.focusPrimaryAction();\n            return;\n        }\n        this.adapter.notifyNavigation(key, EventSource.NONE);\n    };\n    MDCChipFoundation.prototype.getDirection = function (key) {\n        var isRTL = this.adapter.isRTL();\n        var isLeftKey = key === strings.ARROW_LEFT_KEY || key === strings.IE_ARROW_LEFT_KEY;\n        var isRightKey = key === strings.ARROW_RIGHT_KEY || key === strings.IE_ARROW_RIGHT_KEY;\n        if (!isRTL && isLeftKey || isRTL && isRightKey) {\n            return Direction.LEFT;\n        }\n        return Direction.RIGHT;\n    };\n    MDCChipFoundation.prototype.removeChip = function () {\n        if (this.shouldRemoveOnTrailingIconClick) {\n            this.beginExit();\n        }\n    };\n    MDCChipFoundation.prototype.shouldStartEditing = function (evt) {\n        return this.eventFromPrimaryAction(evt) && evt.key === strings.ENTER_KEY;\n    };\n    MDCChipFoundation.prototype.shouldFinishEditing = function (evt) {\n        return evt.key === strings.ENTER_KEY;\n    };\n    MDCChipFoundation.prototype.shouldNotifyInteraction = function (evt) {\n        return evt.key === strings.ENTER_KEY || evt.key === strings.SPACEBAR_KEY;\n    };\n    MDCChipFoundation.prototype.isDeleteAction = function (evt) {\n        var isDeletable = this.adapter.hasClass(cssClasses.DELETABLE);\n        return isDeletable &&\n            (evt.key === strings.BACKSPACE_KEY || evt.key === strings.DELETE_KEY ||\n                evt.key === strings.IE_DELETE_KEY);\n    };\n    MDCChipFoundation.prototype.setSelectedImpl = function (selected) {\n        if (selected) {\n            this.adapter.addClass(cssClasses.SELECTED);\n            this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'true');\n        }\n        else {\n            this.adapter.removeClass(cssClasses.SELECTED);\n            this.adapter.setPrimaryActionAttr(strings.ARIA_CHECKED, 'false');\n        }\n    };\n    MDCChipFoundation.prototype.notifySelection = function (selected) {\n        this.adapter.notifySelection(selected, false);\n    };\n    MDCChipFoundation.prototype.notifyIgnoredSelection = function (selected) {\n        this.adapter.notifySelection(selected, true);\n    };\n    MDCChipFoundation.prototype.eventFromPrimaryAction = function (evt) {\n        return this.adapter.eventTargetHasClass(evt.target, cssClasses.PRIMARY_ACTION);\n    };\n    MDCChipFoundation.prototype.startEditing = function () {\n        this.adapter.addClass(cssClasses.EDITING);\n        this.adapter.notifyEditStart();\n    };\n    MDCChipFoundation.prototype.finishEditing = function () {\n        this.adapter.removeClass(cssClasses.EDITING);\n        this.adapter.notifyEditFinish();\n    };\n    return MDCChipFoundation;\n}(MDCFoundation));\nexport { MDCChipFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { MDCRipple } from '@material/ripple/component';\nimport { MDCRippleFoundation } from '@material/ripple/foundation';\nimport { MDCChipTrailingAction } from '../trailingaction/component';\nimport { strings as trailingActionStrings } from '../trailingaction/constants';\nimport { strings } from './constants';\nimport { MDCChipFoundation } from './foundation';\nvar MDCChip = /** @class */ (function (_super) {\n    __extends(MDCChip, _super);\n    function MDCChip() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MDCChip.prototype, \"selected\", {\n        /**\n         * @return Whether the chip is selected.\n         */\n        get: function () {\n            return this.foundation.isSelected();\n        },\n        /**\n         * Sets selected state on the chip.\n         */\n        set: function (selected) {\n            this.foundation.setSelected(selected);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"shouldRemoveOnTrailingIconClick\", {\n        /**\n         * @return Whether a trailing icon click should trigger exit/removal of the chip.\n         */\n        get: function () {\n            return this.foundation.getShouldRemoveOnTrailingIconClick();\n        },\n        /**\n         * Sets whether a trailing icon click should trigger exit/removal of the chip.\n         */\n        set: function (shouldRemove) {\n            this.foundation.setShouldRemoveOnTrailingIconClick(shouldRemove);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"setShouldFocusPrimaryActionOnClick\", {\n        /**\n         * Sets whether a clicking on the chip should focus the primary action.\n         */\n        set: function (shouldFocus) {\n            this.foundation.setShouldFocusPrimaryActionOnClick(shouldFocus);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"ripple\", {\n        get: function () {\n            return this.rippleSurface;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChip.prototype, \"id\", {\n        get: function () {\n            return this.root.id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCChip.attachTo = function (root) {\n        return new MDCChip(root);\n    };\n    MDCChip.prototype.initialize = function (rippleFactory, trailingActionFactory) {\n        var _this = this;\n        if (rippleFactory === void 0) { rippleFactory = function (el, foundation) { return new MDCRipple(el, foundation); }; }\n        if (trailingActionFactory === void 0) { trailingActionFactory = function (el) { return new MDCChipTrailingAction(el); }; }\n        this.leadingIcon = this.root.querySelector(strings.LEADING_ICON_SELECTOR);\n        this.checkmark = this.root.querySelector(strings.CHECKMARK_SELECTOR);\n        this.primaryAction =\n            this.root.querySelector(strings.PRIMARY_ACTION_SELECTOR);\n        var trailingActionEl = this.root.querySelector(strings.TRAILING_ACTION_SELECTOR);\n        if (trailingActionEl) {\n            this.trailingAction = trailingActionFactory(trailingActionEl);\n        }\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var rippleAdapter = __assign(__assign({}, MDCRipple.createAdapter(this)), { computeBoundingRect: function () { return _this.foundation.getDimensions(); } });\n        this.rippleSurface =\n            rippleFactory(this.root, new MDCRippleFoundation(rippleAdapter));\n    };\n    MDCChip.prototype.initialSyncWithDOM = function () {\n        var _this = this;\n        // Custom events\n        this.handleTrailingActionInteraction = function () {\n            _this.foundation.handleTrailingActionInteraction();\n        };\n        this.handleTrailingActionNavigation =\n            function (evt) {\n                _this.foundation.handleTrailingActionNavigation(evt);\n            };\n        // Native events\n        this.handleClick = function () {\n            _this.foundation.handleClick();\n        };\n        this.handleKeydown = function (evt) {\n            _this.foundation.handleKeydown(evt);\n        };\n        this.handleTransitionEnd = function (evt) {\n            _this.foundation.handleTransitionEnd(evt);\n        };\n        this.handleFocusIn = function (evt) {\n            _this.foundation.handleFocusIn(evt);\n        };\n        this.handleFocusOut = function (evt) {\n            _this.foundation.handleFocusOut(evt);\n        };\n        this.listen('transitionend', this.handleTransitionEnd);\n        this.listen('click', this.handleClick);\n        this.listen('keydown', this.handleKeydown);\n        this.listen('focusin', this.handleFocusIn);\n        this.listen('focusout', this.handleFocusOut);\n        if (this.trailingAction) {\n            this.listen(trailingActionStrings.INTERACTION_EVENT, this.handleTrailingActionInteraction);\n            this.listen(trailingActionStrings.NAVIGATION_EVENT, this.handleTrailingActionNavigation);\n        }\n    };\n    MDCChip.prototype.destroy = function () {\n        this.rippleSurface.destroy();\n        this.unlisten('transitionend', this.handleTransitionEnd);\n        this.unlisten('keydown', this.handleKeydown);\n        this.unlisten('click', this.handleClick);\n        this.unlisten('focusin', this.handleFocusIn);\n        this.unlisten('focusout', this.handleFocusOut);\n        if (this.trailingAction) {\n            this.unlisten(trailingActionStrings.INTERACTION_EVENT, this.handleTrailingActionInteraction);\n            this.unlisten(trailingActionStrings.NAVIGATION_EVENT, this.handleTrailingActionNavigation);\n        }\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Begins the exit animation which leads to removal of the chip.\n     */\n    MDCChip.prototype.beginExit = function () {\n        this.foundation.beginExit();\n    };\n    MDCChip.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            addClass: function (className) { return _this.root.classList.add(className); },\n            addClassToLeadingIcon: function (className) {\n                if (_this.leadingIcon) {\n                    _this.leadingIcon.classList.add(className);\n                }\n            },\n            eventTargetHasClass: function (target, className) {\n                return target ? target.classList.contains(className) : false;\n            },\n            focusPrimaryAction: function () {\n                if (_this.primaryAction) {\n                    _this.primaryAction.focus();\n                }\n            },\n            focusTrailingAction: function () {\n                if (_this.trailingAction) {\n                    _this.trailingAction.focus();\n                }\n            },\n            getAttribute: function (attr) { return _this.root.getAttribute(attr); },\n            getCheckmarkBoundingClientRect: function () {\n                return _this.checkmark ? _this.checkmark.getBoundingClientRect() : null;\n            },\n            getComputedStyleValue: function (propertyName) {\n                return window.getComputedStyle(_this.root).getPropertyValue(propertyName);\n            },\n            getRootBoundingClientRect: function () { return _this.root.getBoundingClientRect(); },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            hasLeadingIcon: function () { return !!_this.leadingIcon; },\n            isRTL: function () { return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl'; },\n            isTrailingActionNavigable: function () {\n                if (_this.trailingAction) {\n                    return _this.trailingAction.isNavigable();\n                }\n                return false;\n            },\n            notifyInteraction: function () { return _this.emit(strings.INTERACTION_EVENT, { chipId: _this.id }, true /* shouldBubble */); },\n            notifyNavigation: function (key, source) {\n                return _this.emit(strings.NAVIGATION_EVENT, { chipId: _this.id, key: key, source: source }, true /* shouldBubble */);\n            },\n            notifyRemoval: function (removedAnnouncement) {\n                _this.emit(strings.REMOVAL_EVENT, { chipId: _this.id, removedAnnouncement: removedAnnouncement }, true /* shouldBubble */);\n            },\n            notifySelection: function (selected, shouldIgnore) {\n                return _this.emit(strings.SELECTION_EVENT, { chipId: _this.id, selected: selected, shouldIgnore: shouldIgnore }, true /* shouldBubble */);\n            },\n            notifyTrailingIconInteraction: function () {\n                return _this.emit(strings.TRAILING_ICON_INTERACTION_EVENT, { chipId: _this.id }, true /* shouldBubble */);\n            },\n            notifyEditStart: function () { },\n            notifyEditFinish: function () { },\n            removeClass: function (className) { return _this.root.classList.remove(className); },\n            removeClassFromLeadingIcon: function (className) {\n                if (_this.leadingIcon) {\n                    _this.leadingIcon.classList.remove(className);\n                }\n            },\n            removeTrailingActionFocus: function () {\n                if (_this.trailingAction) {\n                    _this.trailingAction.removeFocus();\n                }\n            },\n            setPrimaryActionAttr: function (attr, value) {\n                if (_this.primaryAction) {\n                    _this.primaryAction.setAttribute(attr, value);\n                }\n            },\n            setStyleProperty: function (propertyName, value) {\n                return _this.root.style.setProperty(propertyName, value);\n            },\n        };\n        return new MDCChipFoundation(adapter);\n    };\n    MDCChip.prototype.setSelectedFromChipSet = function (selected, shouldNotifyClients) {\n        this.foundation.setSelectedFromChipSet(selected, shouldNotifyClients);\n    };\n    MDCChip.prototype.focusPrimaryAction = function () {\n        this.foundation.focusPrimaryAction();\n    };\n    MDCChip.prototype.focusTrailingAction = function () {\n        this.foundation.focusTrailingAction();\n    };\n    MDCChip.prototype.removeFocus = function () {\n        this.foundation.removeFocus();\n    };\n    MDCChip.prototype.remove = function () {\n        var parent = this.root.parentNode;\n        if (parent !== null) {\n            parent.removeChild(this.root);\n        }\n    };\n    return MDCChip;\n}(MDCComponent));\nexport { MDCChip };\n//# sourceMappingURL=component.js.map","/**\n * @license\n * Copyright 2020 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n/**\n * Priorities for the announce function.\n */\nexport var AnnouncerPriority;\n(function (AnnouncerPriority) {\n    AnnouncerPriority[\"POLITE\"] = \"polite\";\n    AnnouncerPriority[\"ASSERTIVE\"] = \"assertive\";\n})(AnnouncerPriority || (AnnouncerPriority = {}));\n/**\n * Data attribute added to live region element.\n */\nexport var DATA_MDC_DOM_ANNOUNCE = 'data-mdc-dom-announce';\n/**\n * Announces the given message with optional priority, defaulting to \"polite\"\n */\nexport function announce(message, options) {\n    Announcer.getInstance().say(message, options);\n}\nvar Announcer = /** @class */ (function () {\n    // Constructor made private to ensure only the singleton is used\n    function Announcer() {\n        this.liveRegions = new Map();\n    }\n    Announcer.getInstance = function () {\n        if (!Announcer.instance) {\n            Announcer.instance = new Announcer();\n        }\n        return Announcer.instance;\n    };\n    Announcer.prototype.say = function (message, options) {\n        var _a, _b;\n        var priority = (_a = options === null || options === void 0 ? void 0 : options.priority) !== null && _a !== void 0 ? _a : AnnouncerPriority.POLITE;\n        var ownerDocument = (_b = options === null || options === void 0 ? void 0 : options.ownerDocument) !== null && _b !== void 0 ? _b : document;\n        var liveRegion = this.getLiveRegion(priority, ownerDocument);\n        // Reset the region to pick up the message, even if the message is the\n        // exact same as before.\n        liveRegion.textContent = '';\n        // Timeout is necessary for screen readers like NVDA and VoiceOver.\n        setTimeout(function () {\n            liveRegion.textContent = message;\n            ownerDocument.addEventListener('click', clearLiveRegion);\n        }, 1);\n        function clearLiveRegion() {\n            liveRegion.textContent = '';\n            ownerDocument.removeEventListener('click', clearLiveRegion);\n        }\n    };\n    Announcer.prototype.getLiveRegion = function (priority, ownerDocument) {\n        var documentLiveRegions = this.liveRegions.get(ownerDocument);\n        if (!documentLiveRegions) {\n            documentLiveRegions = new Map();\n            this.liveRegions.set(ownerDocument, documentLiveRegions);\n        }\n        var existingLiveRegion = documentLiveRegions.get(priority);\n        if (existingLiveRegion &&\n            ownerDocument.body.contains(existingLiveRegion)) {\n            return existingLiveRegion;\n        }\n        var liveRegion = this.createLiveRegion(priority, ownerDocument);\n        documentLiveRegions.set(priority, liveRegion);\n        return liveRegion;\n    };\n    Announcer.prototype.createLiveRegion = function (priority, ownerDocument) {\n        var el = ownerDocument.createElement('div');\n        el.style.position = 'absolute';\n        el.style.top = '-9999px';\n        el.style.left = '-9999px';\n        el.style.height = '1px';\n        el.style.overflow = 'hidden';\n        el.setAttribute('aria-atomic', 'true');\n        el.setAttribute('aria-live', priority);\n        el.setAttribute(DATA_MDC_DOM_ANNOUNCE, 'true');\n        ownerDocument.body.appendChild(el);\n        return el;\n    };\n    return Announcer;\n}());\n//# sourceMappingURL=announce.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nexport var strings = {\n    CHIP_SELECTOR: '.mdc-chip',\n};\nexport var cssClasses = {\n    CHOICE: 'mdc-chip-set--choice',\n    FILTER: 'mdc-chip-set--filter',\n};\n//# sourceMappingURL=constants.js.map","/**\n * @license\n * Copyright 2017 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { Direction, EventSource, jumpChipKeys, navigationKeys, strings as chipStrings } from '../chip/constants';\nimport { cssClasses, strings } from './constants';\nvar MDCChipSetFoundation = /** @class */ (function (_super) {\n    __extends(MDCChipSetFoundation, _super);\n    function MDCChipSetFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCChipSetFoundation.defaultAdapter), adapter)) || this;\n        /**\n         * The ids of the selected chips in the set. Only used for choice chip set or filter chip set.\n         */\n        _this.selectedChipIds = [];\n        return _this;\n    }\n    Object.defineProperty(MDCChipSetFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipSetFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipSetFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                announceMessage: function () { return undefined; },\n                focusChipPrimaryActionAtIndex: function () { return undefined; },\n                focusChipTrailingActionAtIndex: function () { return undefined; },\n                getChipListCount: function () { return -1; },\n                getIndexOfChipById: function () { return -1; },\n                hasClass: function () { return false; },\n                isRTL: function () { return false; },\n                removeChipAtIndex: function () { return undefined; },\n                removeFocusFromChipAtIndex: function () { return undefined; },\n                selectChipAtIndex: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns an array of the IDs of all selected chips.\n     */\n    MDCChipSetFoundation.prototype.getSelectedChipIds = function () {\n        return this.selectedChipIds.slice();\n    };\n    /**\n     * Selects the chip with the given id. Deselects all other chips if the chip set is of the choice variant.\n     * Does not notify clients of the updated selection state.\n     */\n    MDCChipSetFoundation.prototype.select = function (chipId) {\n        this.selectImpl(chipId, false);\n    };\n    /**\n     * Handles a chip interaction event\n     */\n    MDCChipSetFoundation.prototype.handleChipInteraction = function (_a) {\n        var chipId = _a.chipId;\n        var index = this.adapter.getIndexOfChipById(chipId);\n        this.removeFocusFromChipsExcept(index);\n        if (this.adapter.hasClass(cssClasses.CHOICE) ||\n            this.adapter.hasClass(cssClasses.FILTER)) {\n            this.toggleSelect(chipId);\n        }\n    };\n    /**\n     * Handles a chip selection event, used to handle discrepancy when selection state is set directly on the Chip.\n     */\n    MDCChipSetFoundation.prototype.handleChipSelection = function (_a) {\n        var chipId = _a.chipId, selected = _a.selected, shouldIgnore = _a.shouldIgnore;\n        // Early exit if we should ignore the event\n        if (shouldIgnore) {\n            return;\n        }\n        var chipIsSelected = this.selectedChipIds.indexOf(chipId) >= 0;\n        if (selected && !chipIsSelected) {\n            this.select(chipId);\n        }\n        else if (!selected && chipIsSelected) {\n            this.deselectImpl(chipId);\n        }\n    };\n    /**\n     * Handles the event when a chip is removed.\n     */\n    MDCChipSetFoundation.prototype.handleChipRemoval = function (_a) {\n        var chipId = _a.chipId, removedAnnouncement = _a.removedAnnouncement;\n        if (removedAnnouncement) {\n            this.adapter.announceMessage(removedAnnouncement);\n        }\n        var index = this.adapter.getIndexOfChipById(chipId);\n        this.deselectAndNotifyClients(chipId);\n        this.adapter.removeChipAtIndex(index);\n        var maxIndex = this.adapter.getChipListCount() - 1;\n        if (maxIndex < 0) {\n            return;\n        }\n        var nextIndex = Math.min(index, maxIndex);\n        this.removeFocusFromChipsExcept(nextIndex);\n        // After removing a chip, we should focus the trailing action for the next chip.\n        this.adapter.focusChipTrailingActionAtIndex(nextIndex);\n    };\n    /**\n     * Handles a chip navigation event.\n     */\n    MDCChipSetFoundation.prototype.handleChipNavigation = function (_a) {\n        var chipId = _a.chipId, key = _a.key, source = _a.source;\n        var maxIndex = this.adapter.getChipListCount() - 1;\n        var index = this.adapter.getIndexOfChipById(chipId);\n        // Early exit if the index is out of range or the key is unusable\n        if (index === -1 || !navigationKeys.has(key)) {\n            return;\n        }\n        var isRTL = this.adapter.isRTL();\n        var isLeftKey = key === chipStrings.ARROW_LEFT_KEY ||\n            key === chipStrings.IE_ARROW_LEFT_KEY;\n        var isRightKey = key === chipStrings.ARROW_RIGHT_KEY ||\n            key === chipStrings.IE_ARROW_RIGHT_KEY;\n        var isDownKey = key === chipStrings.ARROW_DOWN_KEY ||\n            key === chipStrings.IE_ARROW_DOWN_KEY;\n        var shouldIncrement = !isRTL && isRightKey || isRTL && isLeftKey || isDownKey;\n        var isHome = key === chipStrings.HOME_KEY;\n        var isEnd = key === chipStrings.END_KEY;\n        if (shouldIncrement) {\n            index++;\n        }\n        else if (isHome) {\n            index = 0;\n        }\n        else if (isEnd) {\n            index = maxIndex;\n        }\n        else {\n            index--;\n        }\n        // Early exit if the index is out of bounds\n        if (index < 0 || index > maxIndex) {\n            return;\n        }\n        this.removeFocusFromChipsExcept(index);\n        this.focusChipAction(index, key, source);\n    };\n    MDCChipSetFoundation.prototype.focusChipAction = function (index, key, source) {\n        var shouldJumpChips = jumpChipKeys.has(key);\n        if (shouldJumpChips && source === EventSource.PRIMARY) {\n            return this.adapter.focusChipPrimaryActionAtIndex(index);\n        }\n        if (shouldJumpChips && source === EventSource.TRAILING) {\n            return this.adapter.focusChipTrailingActionAtIndex(index);\n        }\n        var dir = this.getDirection(key);\n        if (dir === Direction.LEFT) {\n            return this.adapter.focusChipTrailingActionAtIndex(index);\n        }\n        if (dir === Direction.RIGHT) {\n            return this.adapter.focusChipPrimaryActionAtIndex(index);\n        }\n    };\n    MDCChipSetFoundation.prototype.getDirection = function (key) {\n        var isRTL = this.adapter.isRTL();\n        var isLeftKey = key === chipStrings.ARROW_LEFT_KEY ||\n            key === chipStrings.IE_ARROW_LEFT_KEY;\n        var isRightKey = key === chipStrings.ARROW_RIGHT_KEY ||\n            key === chipStrings.IE_ARROW_RIGHT_KEY;\n        if (!isRTL && isLeftKey || isRTL && isRightKey) {\n            return Direction.LEFT;\n        }\n        return Direction.RIGHT;\n    };\n    /**\n     * Deselects the chip with the given id and optionally notifies clients.\n     */\n    MDCChipSetFoundation.prototype.deselectImpl = function (chipId, shouldNotifyClients) {\n        if (shouldNotifyClients === void 0) { shouldNotifyClients = false; }\n        var index = this.selectedChipIds.indexOf(chipId);\n        if (index >= 0) {\n            this.selectedChipIds.splice(index, 1);\n            var chipIndex = this.adapter.getIndexOfChipById(chipId);\n            this.adapter.selectChipAtIndex(chipIndex, /** isSelected */ false, shouldNotifyClients);\n        }\n    };\n    /**\n     * Deselects the chip with the given id and notifies clients.\n     */\n    MDCChipSetFoundation.prototype.deselectAndNotifyClients = function (chipId) {\n        this.deselectImpl(chipId, true);\n    };\n    /**\n     * Toggles selection of the chip with the given id.\n     */\n    MDCChipSetFoundation.prototype.toggleSelect = function (chipId) {\n        if (this.selectedChipIds.indexOf(chipId) >= 0) {\n            this.deselectAndNotifyClients(chipId);\n        }\n        else {\n            this.selectAndNotifyClients(chipId);\n        }\n    };\n    MDCChipSetFoundation.prototype.removeFocusFromChipsExcept = function (index) {\n        var chipCount = this.adapter.getChipListCount();\n        for (var i = 0; i < chipCount; i++) {\n            if (i !== index) {\n                this.adapter.removeFocusFromChipAtIndex(i);\n            }\n        }\n    };\n    MDCChipSetFoundation.prototype.selectAndNotifyClients = function (chipId) {\n        this.selectImpl(chipId, true);\n    };\n    MDCChipSetFoundation.prototype.selectImpl = function (chipId, shouldNotifyClients) {\n        if (this.selectedChipIds.indexOf(chipId) >= 0) {\n            return;\n        }\n        if (this.adapter.hasClass(cssClasses.CHOICE) &&\n            this.selectedChipIds.length > 0) {\n            var previouslySelectedChip = this.selectedChipIds[0];\n            var previouslySelectedIndex = this.adapter.getIndexOfChipById(previouslySelectedChip);\n            this.selectedChipIds = [];\n            this.adapter.selectChipAtIndex(previouslySelectedIndex, /** isSelected */ false, shouldNotifyClients);\n        }\n        this.selectedChipIds.push(chipId);\n        var index = this.adapter.getIndexOfChipById(chipId);\n        this.adapter.selectChipAtIndex(index, /** isSelected */ true, shouldNotifyClients);\n    };\n    return MDCChipSetFoundation;\n}(MDCFoundation));\nexport { MDCChipSetFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCChipSetFoundation;\n//# sourceMappingURL=foundation.js.map","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __extends, __values } from \"tslib\";\nimport { MDCComponent } from '@material/base/component';\nimport { announce } from '@material/dom/announce';\nimport { MDCChip } from '../chip/component';\nimport { MDCChipFoundation } from '../chip/foundation';\nimport { MDCChipSetFoundation } from './foundation';\nvar _a = MDCChipFoundation.strings, INTERACTION_EVENT = _a.INTERACTION_EVENT, SELECTION_EVENT = _a.SELECTION_EVENT, REMOVAL_EVENT = _a.REMOVAL_EVENT, NAVIGATION_EVENT = _a.NAVIGATION_EVENT;\nvar CHIP_SELECTOR = MDCChipSetFoundation.strings.CHIP_SELECTOR;\nvar idCounter = 0;\nvar MDCChipSet = /** @class */ (function (_super) {\n    __extends(MDCChipSet, _super);\n    function MDCChipSet() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    MDCChipSet.attachTo = function (root) {\n        return new MDCChipSet(root);\n    };\n    Object.defineProperty(MDCChipSet.prototype, \"chips\", {\n        get: function () {\n            return this.chipsList.slice();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCChipSet.prototype, \"selectedChipIds\", {\n        /**\n         * @return An array of the IDs of all selected chips.\n         */\n        get: function () {\n            return this.foundation.getSelectedChipIds();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @param chipFactory A function which creates a new MDCChip.\n     */\n    MDCChipSet.prototype.initialize = function (chipFactory) {\n        if (chipFactory === void 0) { chipFactory = function (el) { return new MDCChip(el); }; }\n        this.chipFactory = chipFactory;\n        this.chipsList = this.instantiateChips(this.chipFactory);\n    };\n    MDCChipSet.prototype.initialSyncWithDOM = function () {\n        var e_1, _a;\n        var _this = this;\n        try {\n            for (var _b = __values(this.chipsList), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var chip = _c.value;\n                if (chip.id && chip.selected) {\n                    this.foundation.select(chip.id);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.handleChipInteraction = function (evt) {\n            return _this.foundation.handleChipInteraction(evt.detail);\n        };\n        this.handleChipSelection = function (evt) {\n            return _this.foundation.handleChipSelection(evt.detail);\n        };\n        this.handleChipRemoval = function (evt) {\n            return _this.foundation.handleChipRemoval(evt.detail);\n        };\n        this.handleChipNavigation = function (evt) {\n            return _this.foundation.handleChipNavigation(evt.detail);\n        };\n        this.listen(INTERACTION_EVENT, this.handleChipInteraction);\n        this.listen(SELECTION_EVENT, this.handleChipSelection);\n        this.listen(REMOVAL_EVENT, this.handleChipRemoval);\n        this.listen(NAVIGATION_EVENT, this.handleChipNavigation);\n    };\n    MDCChipSet.prototype.destroy = function () {\n        var e_2, _a;\n        try {\n            for (var _b = __values(this.chipsList), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var chip = _c.value;\n                chip.destroy();\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        this.unlisten(INTERACTION_EVENT, this.handleChipInteraction);\n        this.unlisten(SELECTION_EVENT, this.handleChipSelection);\n        this.unlisten(REMOVAL_EVENT, this.handleChipRemoval);\n        this.unlisten(NAVIGATION_EVENT, this.handleChipNavigation);\n        _super.prototype.destroy.call(this);\n    };\n    /**\n     * Adds a new chip object to the chip set from the given chip element.\n     */\n    MDCChipSet.prototype.addChip = function (chipEl) {\n        chipEl.id = chipEl.id || \"mdc-chip-\" + ++idCounter;\n        this.chipsList.push(this.chipFactory(chipEl));\n    };\n    MDCChipSet.prototype.getDefaultFoundation = function () {\n        var _this = this;\n        // DO NOT INLINE this variable. For backward compatibility, foundations take a Partial<MDCFooAdapter>.\n        // To ensure we don't accidentally omit any methods, we need a separate, strongly typed adapter variable.\n        var adapter = {\n            announceMessage: function (message) {\n                announce(message);\n            },\n            focusChipPrimaryActionAtIndex: function (index) {\n                _this.chipsList[index].focusPrimaryAction();\n            },\n            focusChipTrailingActionAtIndex: function (index) {\n                _this.chipsList[index].focusTrailingAction();\n            },\n            getChipListCount: function () { return _this.chips.length; },\n            getIndexOfChipById: function (chipId) {\n                return _this.findChipIndex(chipId);\n            },\n            hasClass: function (className) { return _this.root.classList.contains(className); },\n            isRTL: function () { return window.getComputedStyle(_this.root).getPropertyValue('direction') === 'rtl'; },\n            removeChipAtIndex: function (index) {\n                if (index >= 0 && index < _this.chips.length) {\n                    _this.chipsList[index].destroy();\n                    _this.chipsList[index].remove();\n                    _this.chipsList.splice(index, 1);\n                }\n            },\n            removeFocusFromChipAtIndex: function (index) {\n                _this.chipsList[index].removeFocus();\n            },\n            selectChipAtIndex: function (index, selected, shouldNotifyClients) {\n                if (index >= 0 && index < _this.chips.length) {\n                    _this.chipsList[index].setSelectedFromChipSet(selected, shouldNotifyClients);\n                }\n            },\n        };\n        return new MDCChipSetFoundation(adapter);\n    };\n    /**\n     * Instantiates chip components on all of the chip set's child chip elements.\n     */\n    MDCChipSet.prototype.instantiateChips = function (chipFactory) {\n        var chipElements = [].slice.call(this.root.querySelectorAll(CHIP_SELECTOR));\n        return chipElements.map(function (el) {\n            el.id = el.id || \"mdc-chip-\" + ++idCounter;\n            return chipFactory(el);\n        });\n    };\n    /**\n     * Returns the index of the chip with the given id, or -1 if the chip does not exist.\n     */\n    MDCChipSet.prototype.findChipIndex = function (chipId) {\n        for (var i = 0; i < this.chips.length; i++) {\n            if (this.chipsList[i].id === chipId) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    return MDCChipSet;\n}(MDCComponent));\nexport { MDCChipSet };\n//# sourceMappingURL=component.js.map","import {\n    ARROW_LEFT,\n    ARROW_LEFT_KEY_CODE,\n    ARROW_RIGHT,\n    ARROW_RIGHT_KEY_CODE,\n    BACKSPACE,\n    BACKSPACE_KEY_CODE,\n    DELETE,\n    DELETE_KEY_CODE,\n    ENTER,\n    ENTER_KEY_CODE,\n    ESCAPE,\n    ESCAPE_KEY_CODE,\n} from '../../util/keycodes';\n\n/**\n * Key handler for the input field.\n * Lets the user select, activate, and remove chips with the keyboard.\n *\n * @param event - event\n\n */\nexport function handleKeyboardEvent(event: KeyboardEvent) {\n    if (this.textValue.length) {\n        // If there is any text in the input field, keyboard input should\n        // navigate the text, not the chips.\n        return;\n    }\n\n    if (!this.value || !this.value.length) {\n        // If there are no chips, there is nothing to select.\n        return;\n    }\n\n    const isLeft =\n        event.key === ARROW_LEFT || event.keyCode === ARROW_LEFT_KEY_CODE;\n    const isRight =\n        event.key === ARROW_RIGHT || event.keyCode === ARROW_RIGHT_KEY_CODE;\n    const isEnter = event.key === ENTER || event.keyCode === ENTER_KEY_CODE;\n    const isDelete = event.key === DELETE || event.keyCode === DELETE_KEY_CODE;\n    const isBackspace =\n        event.key === BACKSPACE || event.keyCode === BACKSPACE_KEY_CODE;\n    const isEscape = event.key === ESCAPE || event.keyCode === ESCAPE_KEY_CODE;\n\n    if (isLeft) {\n        return handleLeft(this, event);\n    }\n\n    if (isRight) {\n        return handleRight(this, event);\n    }\n\n    if (isEnter) {\n        return handleEnter(this, event);\n    }\n\n    if (isDelete) {\n        return handleDelete(this, event);\n    }\n\n    if (isBackspace) {\n        return handleBackspace(this, event);\n    }\n\n    if (isEscape) {\n        return handleEscape(this, event);\n    }\n}\n\nfunction handleLeft(host, event) {\n    event.preventDefault();\n    if (host.inputChipIndexSelected === null) {\n        host.inputChipIndexSelected = host.value.length - 1;\n\n        return;\n    }\n\n    if (host.inputChipIndexSelected <= 0) {\n        return;\n    }\n\n    host.inputChipIndexSelected -= 1;\n}\n\nfunction handleRight(host, event) {\n    event.preventDefault();\n    if (host.inputChipIndexSelected === null) {\n        host.inputChipIndexSelected = 0;\n\n        return;\n    }\n\n    if (host.inputChipIndexSelected >= host.value.length - 1) {\n        return;\n    }\n\n    host.inputChipIndexSelected += 1;\n}\n\nfunction handleEnter(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        host.emitInteraction(host.value[host.inputChipIndexSelected]);\n    }\n}\n\nfunction handleEscape(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        host.inputChipIndexSelected = null;\n    }\n}\n\nfunction handleDelete(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        removeChip(host);\n    }\n}\n\nfunction handleBackspace(host, event) {\n    if (host.inputChipIndexSelected !== null) {\n        event.preventDefault();\n        removeChip(host);\n    } else if (!event.repeat) {\n        host.inputChipIndexSelected = host.value.length - 1;\n    }\n}\n\nfunction removeChip(host) {\n    if (host.inputChipIndexSelected !== null) {\n        host.removeChip(host.value[host.inputChipIndexSelected].id);\n        host.inputChipIndexSelected = null;\n    }\n}\n","@use '../../style/functions';\n@use '../../style/internal/shared_input-select-picker';\n@use '../../style/mixins';\n\n@use '../../style/internal/lime-theme';\n\n@use '@material/textfield';\n@use '@material/textfield/icon';\n@use '@material/notched-outline/mdc-notched-outline';\n@use '@material/floating-label';\n@use '@material/floating-label/mdc-floating-label';\n\n/**\n * @prop --icon-background-color: Background color of the icon. Defaults to transparent.\n * @prop --icon-color: Color of the icon. Defaults to `rgb(var(--contrast-1100))`.\n * @prop --background-color: Background color of the field when type is set to input.\n * @prop --background-color-disabled: Background color of the field when type is set to input and the component is disabled or readonly.\n * @prop --input-chip-set-selected-chip-color: Color of the highlight around selected chips in input chip-sets.\n */\n\n@include textfield.core-styles;\n@include icon.icon-core-styles;\n\n@include shared_input-select-picker.outlined-style-overrides;\n@include shared_input-select-picker.floating-label-overrides;\n@include shared_input-select-picker.cropped-label-hack;\n@include shared_input-select-picker.disabled-overrides;\n@include shared_input-select-picker.readonly-overrides;\n@include shared_input-select-picker.leading-icon;\n@include shared_input-select-picker.lime-empty-value-for-readonly;\n@include shared_input-select-picker.lime-looks-like-input-value;\n\n$height-of-chip-set-input: functions.pxToRem(36);\n$leading-icon-space: functions.pxToRem(40);\n\n:host(limel-chip-set) {\n    isolation: isolate;\n}\n\n.mdc-chip-set {\n    display: flex;\n    align-items: center;\n    min-height: shared_input-select-picker.$height-of-mdc-text-field;\n    position: relative;\n\n    &.chip-set--with-label {\n        .lime-floating-label--float-above {\n            padding-left: functions.pxToRem(4);\n        }\n    }\n\n    &.mdc-chip-set--input {\n        padding: functions.pxToRem(8);\n\n        width: 100%;\n    }\n\n    &.has-clear-all-button {\n        &.mdc-chip-set--input {\n            padding-right: functions.pxToRem(\n                32\n            ); // This leaves space for \"clear all\" button and avoids overlapping with chips\n        }\n    }\n\n    &.disabled:not(.mdc-chip-set--input) {\n        @include shared_input-select-picker.looks-disabled;\n        pointer-events: none;\n    }\n}\n\n.mdc-text-field {\n    height: auto;\n    cursor: text;\n    flex-wrap: wrap;\n    row-gap: 0.5rem;\n\n    .mdc-text-field__input {\n        @include shared_input-select-picker.input-field-placeholder;\n\n        width: auto;\n        padding: 0 functions.pxToRem(12);\n\n        flex-grow: 1;\n        flex-shrink: 0;\n\n        &.hidden {\n            // This class is added, as soon as there is a chip selected and displayed\n            // This input field should not be visually visible as it breaks the UI in some cases\n            // But it should be rendered to be able to tab between fields and do other keyboard commands /Kia\n            transition: all 0s;\n            opacity: 0;\n            position: absolute;\n            z-index: -100; // to let users interact with chips, in case they're covered\n        }\n        &[type='search'] {\n            -webkit-appearance: textfield; // Removes the default magnifying glass icon on iOS which appears automatically on input fields with type of search\n            background-color: transparent; // overides styles caused by previous line\n\n            &::-webkit-search-cancel-button {\n                display: none; // removes the default X button\n            }\n        }\n    }\n}\n\n// used only in chipsets that do not have input\n.chip-set__label {\n    @include mixins.truncate-text;\n    width: 120%; // `120%` instead of `100%`,\n    // because this class is always together with `mdc-floating-label--float-above`,\n    // which scales the label down. So there is more horizontal space to display the label in.\n    top: functions.pxToRem(13);\n    padding-left: functions.pxToRem(20);\n}\n\n// Because MDC removes some classes in chipset, we add custom\n// classes with similar names and expected behavior & styles.\n// These class names start with `lime-`, instead of `mdc-`.\n.lime-notched-outline--notched {\n    .mdc-notched-outline__notch {\n        border-top: 1px solid transparent !important;\n\n        .lime-floating-label--float-above {\n            // This overrides MDC's original top value which is `top: 50%`.\n            // The reason is that a % value aligns the label in a wrong position\n            // vertically, when there are multiple rows of chips.\n            top: functions.pxToRem(27);\n\n            transform: translateY(-34.75px) scale(0.75);\n            font-size: shared_input-select-picker.$cropped-label-hack--font-size;\n        }\n    }\n}\n\n.force-invalid {\n    @extend .mdc-text-field--invalid;\n}\n\n.clear-all-button {\n    @include mixins.clear-all-button;\n    @include mixins.visualize-keyboard-focus;\n\n    position: absolute;\n    right: functions.pxToRem(8);\n    top: functions.pxToRem(18);\n\n    opacity: 0; // Is hidden, but can receive focus (such as when navigating through tab indexes).\n\n    &:focus,\n    .has-chips:not(.mdc-text-field--disabled):hover &,\n    .has-chips:not(.mdc-text-field--disabled).mdc-text-field--focused & {\n        opacity: 1;\n        outline: none;\n    }\n\n    :not(.has-chips) &,\n    .has-chips.mdc-text-field--disabled & {\n        display: none; // Won't receive focus when disabled\n    }\n}\n\n.has-leading-icon {\n    &:not(.has-chips) {\n        .mdc-text-field__input {\n            padding-left: $leading-icon-space;\n        }\n\n        .mdc-floating-label {\n            &:not(.lime-floating-label--float-above) {\n                left: $leading-icon-space;\n            }\n            &.mdc-floating-label--float-above {\n                left: functions.pxToRem(4);\n            }\n        }\n    }\n\n    limel-chip {\n        &:first-of-type {\n            margin-left: 40px;\n        }\n    }\n\n    .search-icon {\n        transition: transform 0.2s ease;\n        position: absolute;\n        top: functions.pxToRem(16);\n        left: functions.pxToRem(16);\n    }\n\n    limel-icon {\n        background-color: transparent;\n    }\n}\n\n.delimiter {\n    opacity: 0.5;\n    padding: 0 functions.pxToRem(2);\n    color: var(--mdc-theme-on-surface);\n}\n\nlimel-chip {\n    margin-right: 0.5rem;\n    border-radius: 2rem;\n\n    &.can-be-removed {\n        // When chip is selected with keyboard (backspace / arrow-keys) to be deleted\n        box-shadow: var(--shadow-depth-8-error);\n    }\n}\n\n@import './partial-styles/_readonly';\n@import './partial-styles/_file-picker';\n@import './partial-styles/_helper-text';\n","import { Chip, ChipType } from '../chip-set/chip.types';\nimport { Languages } from '../date-picker/date.types';\nimport {\n    MDCChipInteractionEvent,\n    MDCChipSelectionEvent,\n    MDCChipSet,\n} from '@material/chips/deprecated';\nimport { MDCTextField } from '@material/textfield';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Method,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { handleKeyboardEvent } from './chip-set-input-helpers';\nimport translate from '../../global/translations';\nimport { getHref, getTarget } from '../../util/link-helper';\nimport { isEqual } from 'lodash-es';\nimport {\n    getIconBackgroundColor,\n    getIconColor,\n    getIconName,\n    getIconTitle,\n} from '../icon/get-icon-props';\nimport { Link } from '../../interface';\n\nconst INPUT_FIELD_TABINDEX = 1;\n\n/**\n * @exampleComponent limel-example-chip-set\n * @exampleComponent limel-example-chip-set-choice\n * @exampleComponent limel-example-chip-set-filter\n * @exampleComponent limel-example-chip-set-filter-badge\n * @exampleComponent limel-example-chip-set-input\n * @exampleComponent limel-example-chip-set-input-type-text\n * @exampleComponent limel-example-chip-set-input-type-search\n * @exampleComponent limel-example-chip-icon-color\n * @exampleComponent limel-example-chip-set-composite\n */\n@Component({\n    tag: 'limel-chip-set',\n    shadow: true,\n    styleUrl: 'chip-set.scss',\n})\nexport class ChipSet {\n    /**\n     * List of chips for the set\n     */\n    @Prop()\n    public value: Chip[] = [];\n\n    /**\n     * Type of chip set\n     *\n     * - `choice` renders a set of selectable chips where only one is selectable. The `removable` property is ignored\n     * - `filter` renders a set of selectable chips where all are selectable. The `icon` property is ignored\n     * - `input` renders a set of chips that can be used in conjunction with an input field\n     *\n     * If no type is set, a basic set of chips without additional functionality will be rendered\n     */\n    @Prop({ reflect: true })\n    public type?: 'choice' | 'filter' | 'input';\n\n    /**\n     * Label for the chip-set\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Optional helper text to display below the chipset.\n     * When type is `input`, the helper text is displayed below the\n     * input field when it has focus.\n     * When type is not `input`, the helper text is always displayed\n     * if the device is touch screen; otherwise it is shown when chip-set\n     * is hovered or focused using keyboard navigation.\n     */\n    @Prop({ reflect: true })\n    public helperText: string;\n\n    /**\n     * True if the chip set should be disabled\n     */\n    @Prop({ reflect: true })\n    public disabled: boolean = false;\n\n    /**\n     * For chip-sets of type `input`, set to `true` to disable adding and\n     * removing chips, but allow interaction with existing chips in the set.\n     * For any other types, setting either `readonly` or `disabled` disables\n     * the chip-set.\n     */\n    @Prop({ reflect: true })\n    public readonly: boolean = false;\n\n    /**\n     * Set to `true` to indicate that the current value of the input field is\n     * invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid = false;\n\n    /**\n     * For chip-sets of type `input`. Value to use for the `type` attribute on the\n     * input field inside the chip-set.\n     */\n    @Prop({ reflect: true })\n    public inputType: 'search' | 'text' = 'text';\n\n    /**\n     * For chip-sets of type `input`. Limits the maximum number of chips.\n     * When the value is `0` or not set, no limit is applied.\n     */\n    @Prop({ reflect: true })\n    public maxItems: number;\n\n    /**\n     * True if the control requires a value\n     */\n    @Prop({ reflect: true })\n    public required: boolean = false;\n\n    /**\n     * Search label to display when type is `input` and component is in search mode\n     */\n    @Prop({ reflect: true })\n    public searchLabel: string;\n\n    /**\n     * Whether the input field should be emptied when the chip-set loses focus.\n     */\n    @Prop({ reflect: true })\n    public emptyInputOnBlur: boolean = true;\n\n    /**\n     * Whether the \"Clear all\" buttons should be shown\n     */\n    @Prop()\n    public clearAllButton: boolean = true;\n\n    /**\n     * For chip-sets of type `input`. When the value is null, no leading icon is used.\n     * Leading icon to show to the far left in the text field\n     */\n    @Prop({ reflect: true })\n    public leadingIcon: string = null;\n\n    /**\n     * For chip-set of type `input`. Sets delimiters between chips.\n     */\n    @Prop({ reflect: true })\n    public delimiter: string = null;\n\n    /**\n     * Defines the language for translations.\n     * Will translate the translatable strings on the components. For example, the clear all chips label.\n     */\n    @Prop()\n    public language: Languages = 'en';\n\n    /**\n     * Dispatched when a chip is interacted with\n     */\n    @Event()\n    private interact: EventEmitter<Chip>;\n\n    /**\n     * Dispatched when a chip is selected/deselected\n     */\n    @Event()\n    private change: EventEmitter<Chip | Chip[]>;\n\n    /**\n     * Emitted when an input chip set has received focus and editing in the text field has started\n     */\n    @Event()\n    private startEdit: EventEmitter<void>;\n\n    /**\n     * Emitted when an input chip set has lost focus and editing in the text field has ended\n     */\n    @Event()\n    private stopEdit: EventEmitter<void>;\n\n    /**\n     * Dispatched when the input is changed for type `input`\n     */\n    @Event()\n    private input: EventEmitter<string>;\n\n    @Element()\n    private host: HTMLLimelChipSetElement;\n\n    @State()\n    private editMode: boolean = false;\n\n    @State()\n    private textValue: string = '';\n\n    @State()\n    private blurred: boolean = false;\n\n    @State()\n    private inputChipIndexSelected: number = null;\n\n    private mdcChipSet: MDCChipSet;\n    private mdcTextField: MDCTextField;\n    private handleKeyDown = handleKeyboardEvent;\n\n    constructor() {\n        this.renderChip = this.renderChip.bind(this);\n        this.renderInputChip = this.renderInputChip.bind(this);\n        this.isFull = this.isFull.bind(this);\n        this.handleInteractionEvent = this.handleInteractionEvent.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.handleTextFieldFocus = this.handleTextFieldFocus.bind(this);\n        this.handleInputBlur = this.handleInputBlur.bind(this);\n        this.handleTextInput = this.handleTextInput.bind(this);\n        this.inputFieldOnChange = this.inputFieldOnChange.bind(this);\n        this.handleKeyDown = this.handleKeyDown.bind(this);\n        this.inputHidden = this.inputHidden.bind(this);\n        this.handleDeleteAllIconClick =\n            this.handleDeleteAllIconClick.bind(this);\n        this.renderDelimiter = this.renderDelimiter.bind(this);\n    }\n\n    /**\n     * Used to find out whether the chip-set is in edit mode.\n     *\n     * @returns `true` if the chip-set is in edit mode, `false` otherwise.\n     */\n    @Method()\n    public async getEditMode(): Promise<boolean> {\n        return this.editMode;\n    }\n\n    /**\n     * Used to set focus to the chip-set input field.\n     *\n     * @param emptyInput - if `true`, any text in the input is discarded\n     * @returns does not return anything, but methods have to be async\n     */\n    @Method()\n    public async setFocus(emptyInput: boolean = false) {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n\n        this.editMode = true;\n        if (emptyInput) {\n            this.textValue = '';\n        }\n\n        this.host.shadowRoot.querySelector('input').focus();\n        this.startEdit.emit();\n    }\n\n    /**\n     * Used to empty the input field. Used in conjunction with `emptyInputOnBlur` to let the\n     * consumer control when the input is emptied.\n     *\n     * @returns does not return anything, but methods have to be async\n     */\n    @Method()\n    public async emptyInput() {\n        this.syncEmptyInput();\n    }\n\n    public componentDidLoad() {\n        this.triggerIconColorWarning(this.value);\n\n        if (this.type === 'input') {\n            this.mdcTextField = new MDCTextField(\n                this.host.shadowRoot.querySelector('.mdc-text-field'),\n            );\n        }\n\n        this.createMDCChipSet();\n    }\n\n    public componentWillUpdate() {\n        this.destroyMDCChipSet();\n    }\n\n    public componentDidUpdate() {\n        this.createMDCChipSet();\n        const input = this.host.shadowRoot.querySelector('input');\n        if (input && this.editMode) {\n            input.focus();\n        }\n    }\n\n    public disconnectedCallback() {\n        this.destroyMDCChipSet();\n\n        if (this.mdcTextField) {\n            this.mdcTextField.destroy();\n        }\n    }\n\n    public render() {\n        if (this.type === 'input') {\n            return this.renderInputChips();\n        }\n\n        const classes = {\n            'mdc-chip-set': true,\n            disabled: this.disabled || this.readonly,\n            'mdc-text-field--with-trailing-icon': true,\n        };\n        if (this.type) {\n            classes[`mdc-chip-set--${this.type}`] = true;\n        }\n\n        const chipSetLabel = this.renderChipSetLabel();\n        if (chipSetLabel) {\n            classes['chip-set--with-label'] = true;\n        }\n\n        return (\n            <div class={classes} role=\"grid\">\n                {chipSetLabel}\n                {this.value.map(this.renderChip)}\n                {this.renderHelperLine()}\n            </div>\n        );\n    }\n\n    @Watch('value')\n    protected handleChangeChips(newValue: Chip[], oldValue: Chip[]) {\n        if (isEqual(newValue, oldValue)) {\n            return;\n        }\n\n        this.syncEmptyInput();\n    }\n\n    private createMDCChipSet() {\n        this.mdcChipSet = new MDCChipSet(\n            this.host.shadowRoot.querySelector('.mdc-chip-set'),\n        );\n\n        if (!this.type || this.type === 'input') {\n            this.mdcChipSet.listen(\n                'MDCChip:interaction',\n                this.handleInteractionEvent,\n            );\n        }\n\n        if (this.type === 'choice' || this.type === 'filter') {\n            this.mdcChipSet.listen('MDCChip:selection', this.handleSelection);\n        }\n    }\n\n    private destroyMDCChipSet() {\n        if (this.mdcChipSet) {\n            this.mdcChipSet.unlisten(\n                'MDCChip:interaction',\n                this.handleInteractionEvent,\n            );\n            this.mdcChipSet.unlisten('MDCChip:selection', this.handleSelection);\n\n            this.mdcChipSet.destroy();\n        }\n    }\n\n    private renderChipSetLabel() {\n        if (!this.label) {\n            return;\n        }\n\n        return (\n            <label class=\"chip-set__label mdc-floating-label mdc-floating-label--float-above\">\n                {this.label}\n            </label>\n        );\n    }\n\n    private renderInputChips() {\n        return [\n            <div\n                class={{\n                    'mdc-text-field mdc-text-field--outlined': true,\n                    'mdc-chip-set mdc-chip-set--input': true,\n                    'force-invalid': this.isInvalid(),\n                    'mdc-text-field--disabled': this.readonly || this.disabled,\n                    'lime-text-field--readonly': this.readonly,\n                    'has-chips mdc-text-field--label-floating':\n                        this.value.length !== 0,\n                    'has-leading-icon': this.leadingIcon !== null,\n                    'has-clear-all-button': this.clearAllButton,\n                }}\n                onClick={this.handleTextFieldFocus}\n            >\n                {this.value.map(this.renderInputChip)}\n                <input\n                    tabIndex={INPUT_FIELD_TABINDEX}\n                    type={this.inputType}\n                    id=\"input-element\"\n                    disabled={this.readonly || this.disabled}\n                    class={{\n                        'mdc-text-field__input': true,\n                        hidden: this.inputHidden(),\n                    }}\n                    value={this.textValue}\n                    onBlur={this.handleInputBlur}\n                    onFocus={this.handleTextFieldFocus}\n                    onKeyDown={this.handleKeyDown}\n                    onInput={this.handleTextInput}\n                    // Some browsers emit a change event on input elements, we need to stop\n                    // that event from propagating since we are emitting our own change event\n                    onChange={this.inputFieldOnChange}\n                    placeholder={this.isFull() ? '' : this.searchLabel}\n                    readonly={this.isFull()}\n                />\n                <div\n                    class={{\n                        'mdc-notched-outline': true,\n                        'mdc-notched-outline--upgraded': true,\n                        'mdc-text-field--required': this.required,\n                        'lime-notched-outline--notched': this.floatLabelAbove(),\n                    }}\n                    dropzone-tip={this.dropZoneTip()}\n                >\n                    <div class=\"mdc-notched-outline__leading\" />\n                    {this.renderLabel()}\n                    <div class=\"mdc-notched-outline__trailing\" />\n                </div>\n                {this.renderLeadingIcon()}\n                {this.renderEmptyValueForReadonly()}\n                {this.renderClearAllChipsButton()}\n            </div>,\n            this.renderHelperLine(),\n        ];\n    }\n\n    private renderEmptyValueForReadonly = () => {\n        if (this.readonly && this.value.length === 0) {\n            return (\n                <span class=\"lime-empty-value-for-readonly lime-looks-like-input-value\">\n                    –\n                </span>\n            );\n        }\n    };\n\n    private renderLabel() {\n        const labelClassList = {\n            'mdc-floating-label': true,\n            'mdc-text-field--disabled': this.readonly || this.disabled,\n            'mdc-floating-label--required': this.required,\n            'lime-floating-label--float-above': this.floatLabelAbove(),\n        };\n\n        if (!this.label) {\n            return;\n        }\n\n        return (\n            <div class=\"mdc-notched-outline__notch\">\n                <label class={labelClassList} htmlFor=\"input-element\">\n                    {this.label}\n                </label>\n            </div>\n        );\n    }\n\n    private floatLabelAbove = () => {\n        if (!!this.value.length || this.editMode || this.readonly) {\n            return true;\n        }\n    };\n\n    private dropZoneTip = (): string => {\n        return translate.get('file.drag-and-drop-tips', this.language);\n    };\n\n    private isFull(): boolean {\n        return !!this.maxItems && this.value.length >= this.maxItems;\n    }\n\n    private isInvalid() {\n        if (this.readonly) {\n            // A readonly field can never be invalid.\n            return false;\n        }\n\n        if (this.invalid) {\n            return true;\n        }\n\n        if (!this.required) {\n            return false;\n        }\n\n        if (!this.blurred) {\n            return false;\n        }\n\n        return !this.value || !this.value.length;\n    }\n\n    private inputFieldOnChange(event) {\n        event.stopPropagation();\n    }\n\n    /**\n     * Enter edit mode when the text field receives focus. When editMode is true, the input element will be visible\n     */\n    private handleTextFieldFocus() {\n        if (this.disabled || this.readonly) {\n            return;\n        }\n\n        if (this.editMode) {\n            return;\n        }\n\n        this.editMode = true;\n        this.startEdit.emit();\n    }\n\n    /**\n     * Exit edit mode when the input element loses focus. This makes sure the input element does not take up any\n     * additional space when the user it not typing anything\n     */\n    private handleInputBlur() {\n        if (this.emptyInputOnBlur) {\n            this.syncEmptyInput();\n        }\n\n        this.editMode = false;\n        this.blurred = true;\n        this.inputChipIndexSelected = null;\n\n        // This timeout is needed in order to let a new element receive focus\n        setTimeout(() => {\n            this.stopEdit.emit();\n        }, 0);\n    }\n\n    private syncEmptyInput() {\n        this.textValue = '';\n    }\n\n    private inputHidden() {\n        if (this.editMode) {\n            return this.isFull();\n        }\n\n        // If there are chips in the picker, hide the input to avoid the input\n        // being placed on a new line and adding ugly space beneath the chips.\n        // If there are no chips, show the input, or the picker will look weird.\n        return !!(this.value && this.value.length);\n    }\n\n    private handleTextInput(event) {\n        event.stopPropagation();\n        this.inputChipIndexSelected = null;\n        this.textValue = event.target.value;\n        this.input.emit(event.target.value && event.target.value.trim());\n    }\n\n    private handleInteractionEvent(event: MDCChipInteractionEvent) {\n        const chip = this.value.find((item) => {\n            return `${item.id}` === event.detail.chipId;\n        });\n        this.emitInteraction(chip);\n    }\n\n    private emitInteraction(chip: Chip) {\n        this.interact.emit(chip);\n    }\n\n    private handleSelection(event: MDCChipSelectionEvent) {\n        let chip = this.value.find((item) => {\n            return `${item.id}` === event.detail.chipId;\n        });\n        chip = { ...chip, selected: event.detail.selected };\n        this.change.emit(chip);\n    }\n\n    private renderChip(chip: Chip) {\n        const chipType: ChipType =\n            this.type === 'filter' ? 'filter' : 'default';\n\n        const chipProps = this.getChipProps(chip, chipType);\n\n        return <limel-chip {...chipProps} />;\n    }\n\n    private hasHelperText = () => {\n        return this.helperText !== null && this.helperText !== undefined;\n    };\n\n    private renderHelperLine = () => {\n        if (!this.maxItems && !this.hasHelperText()) {\n            return;\n        }\n\n        return (\n            <limel-helper-line\n                length={this.value.length}\n                maxLength={this.maxItems}\n                helperText={this.helperText}\n                invalid={this.isInvalid()}\n            />\n        );\n    };\n\n    private renderInputChip(chip: Chip, index: number) {\n        const chipProps = this.getChipProps(chip, 'default');\n\n        return [\n            <limel-chip\n                class={{\n                    'can-be-removed': this.inputChipIndexSelected === index,\n                }}\n                {...chipProps}\n                onClick={this.catchInputChipClicks}\n                onRemove={this.removeChip(chip.id)}\n            />,\n            this.renderDelimiter(),\n        ];\n    }\n\n    private removeChip = (id: string | number) => () => {\n        const newValue = this.value.filter((chip) => {\n            return `${chip.id}` !== `${id}`;\n        });\n        this.change.emit(newValue);\n    };\n\n    private getChipProps(chip: Chip, chipType: ChipType) {\n        const removable =\n            this.type === 'input' &&\n            (chip.removable || !this.readonly || !this.disabled);\n\n        return {\n            role: 'row',\n            id: `${chip.id}`,\n            text: chip.text,\n            icon: chip.icon,\n            badge: chip.badge,\n            selected: chip.selected,\n            disabled: this.disabled,\n            readonly: this.readonly,\n            type: chipType,\n            removable: removable,\n\n            ...(chip.href && {\n                link: {\n                    href: getHref(chip.href),\n                    target: getTarget(chip.href),\n                },\n            }),\n        };\n    }\n\n    private catchInputChipClicks(event) {\n        event.stopPropagation();\n    }\n\n    private renderLeadingIcon() {\n        if (!this.leadingIcon) {\n            return;\n        }\n\n        return (\n            <i class=\"mdc-text-field__icon search-icon\">\n                <limel-icon name={this.leadingIcon} />\n            </i>\n        );\n    }\n\n    private renderClearAllChipsButton() {\n        if (this.disabled || this.readonly || !this.clearAllButton) {\n            return;\n        }\n\n        return (\n            <a\n                href=\"\"\n                onClick={this.handleDeleteAllIconClick}\n                class=\"mdc-text-field__icon clear-all-button\"\n                tabindex=\"0\"\n                role=\"button\"\n                title={this.clearAllChipsLabel()}\n                aria-label={this.clearAllChipsLabel()}\n            />\n        );\n    }\n\n    private clearAllChipsLabel = (): string => {\n        return translate.get('chip-set.clear-all', this.language);\n    };\n\n    private handleDeleteAllIconClick(event: Event) {\n        event.preventDefault();\n        this.change.emit([]);\n    }\n\n    private renderDelimiter() {\n        if (!this.delimiter) {\n            return;\n        }\n\n        return <div class=\"delimiter\">{this.delimiter}</div>;\n    }\n\n    private triggerIconColorWarning(value: Chip[]) {\n        for (const chip of value) {\n            if (\n                chip.icon &&\n                (chip.iconFillColor ||\n                    chip.iconBackgroundColor ||\n                    chip.iconTitle)\n            ) {\n                /* eslint-disable-next-line no-console */\n                console.warn(\n                    \"The `iconFillColor`, `iconBackgroundColor`, and `iconTitle` props are deprecated now! Use the new `Icon` interface and instead of `iconColor: 'color-name', `iconBackgroundColor: 'color-name', and `iconTitle: 'title'`, write `icon { name: 'icon-name', color: 'color-name', backgroundColor: 'color-name', title: 'title' }`.\",\n                );\n            }\n        }\n    }\n}\n"],"mappings":"i9BAAA,MAAMA,EAAU,6xH,MC0EHC,EAAI,M,wDA2FLC,KAAAC,eAAiB,IACd,CACHC,EAAA,UACIC,MAAM,OACNC,KAAK,SACLC,SAAUL,KAAKK,UAAYL,KAAKM,SAChCC,UAAWP,KAAKQ,qBAEfR,KAAKS,aACLT,KAAKU,cACLV,KAAKW,eAEVX,KAAKY,sBAILZ,KAAAa,aAAe,IACZ,CACHX,EAAA,KACIC,MAAM,OACNW,KAAMd,KAAKe,KAAKD,KAChBE,MAAOhB,KAAKe,KAAKC,MACjBC,OAAQjB,KAAKe,KAAKE,OAAM,gBACTjB,KAAKK,UAAYL,KAAKM,SACrCY,SAAUlB,KAAKK,UAAYL,KAAKM,UAAY,EAAI,EAChDC,UAAWP,KAAKQ,qBAEfR,KAAKS,aACLT,KAAKU,cACLV,KAAKW,eAEVX,KAAKY,sBAILZ,KAAAU,YAAc,IACXR,EAAA,QAAMC,MAAM,QAAQH,KAAKmB,MAmD5BnB,KAAAoB,wBAA2BC,IAC/B,GAAIrB,KAAKK,UAAYL,KAAKM,SAAU,CAChCe,EAAEC,gB,GAIFtB,KAAAuB,kBAAqBC,IACzBA,EAAMC,kBACNzB,KAAK0B,OAAOC,MAAM,EAGd3B,KAAAQ,oBAAuBgB,IAC3B,IAAKxB,KAAK4B,UAAW,CACjB,M,CAGJ,MAAMC,EAAO,CAACC,EAAQC,GACtB,MAAMC,EAAW,CAACC,EAAiBC,GAEnC,GAAIL,EAAKM,SAASX,EAAMY,MAAQJ,EAASG,SAASX,EAAMa,SAAU,CAC9DrC,KAAKuB,kBAAkBC,E,GAIvBxB,KAAAsC,gBAAkB,IACfC,EAAUC,IAAI,uBAAwBxC,KAAKyC,U,cArMzB,K,+FA8BX,M,cAOA,M,cAQA,M,eAMC,M,UAOM,S,CAWlBC,oBACHC,EAAmB3C,KAAK4C,K,CAGrBC,uBACHC,EAAqB9C,KAAK4C,K,CAGvBG,SACH,OACI7C,EAAC8C,EAAI,CAACC,QAASjD,KAAKoB,yBACfpB,KAAKe,KAAOf,KAAKa,eAAiBb,KAAKC,iB,CA4C5CQ,a,QACJ,MAAMyC,EAAOC,EAAYnD,KAAKkD,MAE9B,IAAKA,EAAM,CACP,M,CAGJ,OACIhD,EAAA,cACIkD,MAAO,KACPC,KAAMH,EACNI,MAAO,CACHC,MAAO,IAAGC,EAACxD,KAAKkD,QAAa,MAAAM,SAAA,SAAAA,EAAED,QAC/B,mBAAoB,IAChBE,EAACzD,KAAKkD,QAAa,MAAAO,SAAA,SAAAA,EAAEC,oB,CAOjC/C,cACJ,IAAKX,KAAKoD,MAAO,CACb,M,CAGJ,OAAOlD,EAAA,eAAayD,MAAO3D,KAAKoD,O,CAG5BxC,qBACJ,IAAKZ,KAAK4B,WAAa5B,KAAKM,UAAYN,KAAKK,SAAU,CACnD,M,CAGJ,MAAMuD,EACF,wJAEJ,OACI1D,EAAA,UACIC,MAAM,gCACN0D,UAAW,EAAC,aACA7D,KAAKsC,gBACjBwB,UAAWF,EACXX,QAASjD,KAAKuB,mB;;;;;;;;;;;;;;;;;;;;;;GCjOvB,IAAIwC,GACX,SAAWA,GACPA,EAAmBA,EAAmB,eAAiB,GAAK,cAC5DA,EAAmBA,EAAmB,SAAW,GAAK,QACtDA,EAAmBA,EAAmB,iBAAmB,GAAK,gBAC9DA,EAAmBA,EAAmB,cAAgB,GAAK,aAC3DA,EAAmBA,EAAmB,gBAAkB,GAAK,eAC7DA,EAAmBA,EAAmB,aAAe,GAAK,WAC7D,EAPD,CAOGA,IAAuBA,EAAqB,KACxC,IAAIC,EAAU,CACjBC,YAAa,cACbC,kBAAmB,oCACnBC,iBAAkB,mCAClBC,UAAW;;;;;;;;;;;;;;;;;;;;;;GCTf,IAAIC,EAAiD,SAAUC,GAC3DC,EAAUF,EAAiCC,GAC3C,SAASD,EAAgCG,GACrC,OAAOF,EAAOG,KAAKzE,KAAM0E,EAASA,EAAS,GAAIL,EAAgCM,gBAAiBH,KAAaxE,IACrH,CACI4E,OAAOC,eAAeR,EAAiC,UAAW,CAC9D7B,IAAK,WACD,OAAOwB,CACnB,EACQc,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAeR,EAAiC,iBAAkB,CACrE7B,IAAK,WACD,MAAO,CACHwC,MAAO,WAAc,OAAOC,SAAU,EACtCC,aAAc,WAAc,OAAO,IAAK,EACxCC,aAAc,WAAc,OAAOF,SAAU,EAC7CG,kBAAmB,WAAc,OAAOH,SAAU,EAClDI,iBAAkB,WAAc,OAAOJ,SAAU,EAEjE,EACQH,WAAY,MACZC,aAAc,OAElBV,EAAgCiB,UAAUC,YAAc,SAAUC,GAC9DA,EAAI/D,kBACJzB,KAAKwE,QAAQY,kBAAkBrB,EAAmB0B,MAC1D,EACIpB,EAAgCiB,UAAUI,cAAgB,SAAUF,GAChEA,EAAI/D,kBACJ,IAAIW,EAAMuD,EAAaH,GACvB,GAAIxF,KAAK4F,+BAA+BxD,GAAM,CAC1C,IAAIyD,EAAU7F,KAAK8F,kBAAkB1D,GACrCpC,KAAKwE,QAAQY,kBAAkBS,GAC/B,MACZ,CACQ,GAAIE,EAAkBP,GAAM,CACxBxF,KAAKwE,QAAQa,iBAAiBjD,GAC9B,MACZ,CACA,EACIiC,EAAgCiB,UAAUU,YAAc,WACpDhG,KAAKwE,QAAQW,aAAanB,EAAQI,UAAW,KACrD,EACIC,EAAgCiB,UAAUN,MAAQ,WAC9ChF,KAAKwE,QAAQW,aAAanB,EAAQI,UAAW,KAC7CpE,KAAKwE,QAAQQ,OACrB,EACIX,EAAgCiB,UAAUW,YAAc,WACpD,OAAOjG,KAAKwE,QAAQU,aAAalB,EAAQC,eAAiB,MAClE,EACII,EAAgCiB,UAAUM,+BAAiC,SAAUxD,GACjF,IAAI8D,EAAkB9D,IAAQ+D,EAAIC,OAAShE,IAAQ+D,EAAIE,SACvD,IAAIC,EAAkBlE,IAAQ+D,EAAIpE,WAAaK,IAAQ+D,EAAIrE,OAC3D,OAAOoE,GAAmBI,CAClC,EACIjC,EAAgCiB,UAAUQ,kBAAoB,SAAU1D,GACpE,GAAIA,IAAQ+D,EAAIE,SAAU,CACtB,OAAOtC,EAAmBwC,YACtC,CACQ,GAAInE,IAAQ+D,EAAIC,MAAO,CACnB,OAAOrC,EAAmByC,SACtC,CACQ,GAAIpE,IAAQ+D,EAAIrE,OAAQ,CACpB,OAAOiC,EAAmB0C,UACtC,CACQ,GAAIrE,IAAQ+D,EAAIpE,UAAW,CACvB,OAAOgC,EAAmB2C,aACtC,CAEQ,OAAO3C,EAAmB4C,WAClC,EACI,OAAOtC,CACX,CA1EmC,CA0EjCuC;;;;;;;;;;;;;;;;;;;;;;GCxEF,IAAIC,EAAuC,SAAUvC,GACjDC,EAAUsC,EAAuBvC,GACjC,SAASuC,IACL,OAAOvC,IAAW,MAAQA,EAAOwC,MAAM9G,KAAM+G,YAAc/G,IACnE,CACI4E,OAAOC,eAAegC,EAAsBvB,UAAW,SAAU,CAC7D9C,IAAK,WACD,OAAOxC,KAAKgH,aACxB,EACQlC,WAAY,MACZC,aAAc,OAElB8B,EAAsBI,SAAW,SAAUC,GACvC,OAAO,IAAIL,EAAsBK,EACzC,EACIL,EAAsBvB,UAAU6B,WAAa,SAAUC,GACnD,GAAIA,SAAuB,EAAG,CAAEA,EAAgB,SAAUC,EAAIC,GAC1D,OAAO,IAAIC,EAAUF,EAAIC,EACrC,CAAU,CAIF,IAAIE,EAAgBD,EAAUE,cAAczH,MAC5CA,KAAKgH,cACDI,EAAcpH,KAAKkH,KAAM,IAAIQ,EAAoBF,GAC7D,EACIX,EAAsBvB,UAAUqC,mBAAqB,WACjD,IAAIC,EAAQ5H,KACZA,KAAKuF,YAAc,SAAUC,GACzBoC,EAAMN,WAAW/B,YAAYC,EACzC,EACQxF,KAAK0F,cAAgB,SAAUF,GAC3BoC,EAAMN,WAAW5B,cAAcF,EAC3C,EACQxF,KAAK6H,OAAO,QAAS7H,KAAKuF,aAC1BvF,KAAK6H,OAAO,UAAW7H,KAAK0F,cACpC,EACImB,EAAsBvB,UAAUwC,QAAU,WACtC9H,KAAKgH,cAAcc,UACnB9H,KAAK+H,SAAS,QAAS/H,KAAKuF,aAC5BvF,KAAK+H,SAAS,UAAW/H,KAAK0F,eAC9BpB,EAAOgB,UAAUwC,QAAQrD,KAAKzE,KACtC,EACI6G,EAAsBvB,UAAU0C,qBAAuB,WACnD,IAAIJ,EAAQ5H,KAIZ,IAAIwE,EAAU,CACVQ,MAAO,WAEH4C,EAAMV,KAAKlC,OAC3B,EACYE,aAAc,SAAU+C,GAAQ,OAAOL,EAAMV,KAAKhC,aAAa+C,EAAM,EACrE7C,kBAAmB,SAAUS,GACzB,OAAO+B,EAAMjG,KAAKqC,EAAQE,kBAAmB,CAAE2B,QAASA,GAAW,KACnF,EACYR,iBAAkB,SAAUjD,GACxBwF,EAAMjG,KAAKqC,EAAQG,iBAAkB,CAAE/B,IAAKA,GAAO,KACnE,EACY+C,aAAc,SAAU8C,EAAMC,GAC1BN,EAAMV,KAAK/B,aAAa8C,EAAMC,EAC9C,GAEQ,OAAO,IAAI7D,EAAgCG,EACnD,EACIqC,EAAsBvB,UAAUW,YAAc,WAC1C,OAAOjG,KAAKsH,WAAWrB,aAC/B,EACIY,EAAsBvB,UAAUN,MAAQ,WACpChF,KAAKsH,WAAWtC,OACxB,EACI6B,EAAsBvB,UAAUU,YAAc,WAC1ChG,KAAKsH,WAAWtB,aACxB,EACI,OAAOa,CACX,CA5EyB,CA4EvBsB;;;;;;;;;;;;;;;;;;;;;;GClFK,IAAIC,GACX,SAAWA,GACPA,EAAU,QAAU,OACpBA,EAAU,SAAW,OACxB,EAHD,CAGGA,IAAcA,EAAY,KACtB,IAAIC,GACX,SAAWA,GACPA,EAAY,WAAa,UACzBA,EAAY,YAAc,WAC1BA,EAAY,QAAU,MACzB,EAJD,CAIGA,IAAgBA,EAAc,KAC1B,IAAIrE,EAAU,CACjBsE,6BAA8B,mCAC9BC,aAAc,eACdC,eAAgB,YAChBC,eAAgB,YAChBC,gBAAiB,aACjBC,aAAc,UACdjC,cAAe,YACfkC,mBAAoB,uBACpBnC,WAAY,SACZoC,QAAS,MACTrC,UAAW,QACXsC,qBAAsB,iBACtBC,SAAU,OACVC,kBAAmB,OACnBC,kBAAmB,OACnBC,mBAAoB,QACpBC,gBAAiB,KACjBC,cAAe,MACflF,kBAAmB,sBACnBmF,sBAAuB,2BACvBlF,iBAAkB,qBAClBmF,wBAAyB,4BACzBC,+BAAgC,qCAChCC,cAAe,kBACfC,gBAAiB,oBACjBlD,aAAc,IACdnC,UAAW,WACXsF,yBAA0B,4BAC1BC,gCAAiC,kCACjCC,uBAAwB,6BAErB,IAAIC,EAAa,CACpBC,UAAW,sBACXC,UAAW,iBACXC,UAAW,sBACXC,SAAU,qBACVC,QAAS,oBACTC,oBAAqB,iCACrBC,aAAc,0BACdC,eAAgB,2BAChBC,uBAAwB,mCACxBC,SAAU,qBACVC,KAAM,iBACNC,gBAAiB,4BACjBC,cAAe,4BAEZ,IAAIC,EAAiB,IAAIC,IAEhCD,EAAeE,IAAI7G,EAAQyE,gBAC3BkC,EAAeE,IAAI7G,EAAQ0E,iBAC3BiC,EAAeE,IAAI7G,EAAQwE,gBAC3BmC,EAAeE,IAAI7G,EAAQ2E,cAC3BgC,EAAeE,IAAI7G,EAAQ6E,SAC3B8B,EAAeE,IAAI7G,EAAQ+E,UAC3B4B,EAAeE,IAAI7G,EAAQiF,mBAC3B0B,EAAeE,IAAI7G,EAAQkF,oBAC3ByB,EAAeE,IAAI7G,EAAQgF,mBAC3B2B,EAAeE,IAAI7G,EAAQmF,iBACpB,IAAI2B,EAAe,IAAIF,IAE9BE,EAAaD,IAAI7G,EAAQ2E,cACzBmC,EAAaD,IAAI7G,EAAQwE,gBACzBsC,EAAaD,IAAI7G,EAAQ+E,UACzB+B,EAAaD,IAAI7G,EAAQ6E,SACzBiC,EAAaD,IAAI7G,EAAQmF,iBACzB2B,EAAaD,IAAI7G,EAAQgF;;;;;;;;;;;;;;;;;;;;;;GC1EzB,IAAI+B,EAAkB,CAClBC,OAAQ,EACRC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,IAAK,EACLC,MAAO,GAEX,IAAIC,GACJ,SAAWA,GACPA,EAAcA,EAAc,gBAAkB,GAAK,eACnDA,EAAcA,EAAc,oBAAsB,GAAK,kBAC1D,EAHD,CAGGA,IAAkBA,EAAgB,KACrC,IAAIC,EAAmC,SAAUjH,GAC7CC,EAAUgH,EAAmBjH,GAC7B,SAASiH,EAAkB/G,GACvB,IAAIoD,EAAQtD,EAAOG,KAAKzE,KAAM0E,EAASA,EAAS,GAAI6G,EAAkB5G,gBAAiBH,KAAaxE,KAEpG4H,EAAM4D,gCAAkC,KAMxC5D,EAAM6D,gCAAkC,KACxC,OAAO7D,CACf,CACIhD,OAAOC,eAAe0G,EAAmB,UAAW,CAChD/I,IAAK,WACD,OAAOwB,CACnB,EACQc,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe0G,EAAmB,aAAc,CACnD/I,IAAK,WACD,OAAOqH,CACnB,EACQ/E,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe0G,EAAmB,iBAAkB,CACvD/I,IAAK,WACD,MAAO,CACHkJ,SAAU,WAAc,OAAOzG,SAAU,EACzC0G,sBAAuB,WAAc,OAAO1G,SAAU,EACtD2G,oBAAqB,WAAc,OAAO,KAAM,EAChDC,mBAAoB,WAAc,OAAO5G,SAAU,EACnD6G,oBAAqB,WAAc,OAAO7G,SAAU,EACpDC,aAAc,WAAc,OAAO,IAAK,EACxC6G,+BAAgC,WAAc,OAAOhB,CAAgB,EACrEiB,sBAAuB,WAAc,MAAO,EAAG,EAC/CC,0BAA2B,WAAc,OAAOlB,CAAgB,EAChEmB,SAAU,WAAc,OAAO,KAAM,EACrCC,eAAgB,WAAc,OAAO,KAAM,EAC3CC,MAAO,WAAc,OAAO,KAAM,EAClCC,0BAA2B,WAAc,OAAO,KAAM,EACtDC,iBAAkB,WAAc,OAAOrH,SAAU,EACjDsH,gBAAiB,WAAc,OAAOtH,SAAU,EAChDG,kBAAmB,WAAc,OAAOH,SAAU,EAClDI,iBAAkB,WAAc,OAAOJ,SAAU,EACjDuH,cAAe,WAAc,OAAOvH,SAAU,EAC9CwH,gBAAiB,WAAc,OAAOxH,SAAU,EAChDyH,8BAA+B,WAAc,OAAOzH,SAAU,EAC9D0H,YAAa,WAAc,OAAO1H,SAAU,EAC5C2H,2BAA4B,WAAc,OAAO3H,SAAU,EAC3D4H,0BAA2B,WAAc,OAAO5H,SAAU,EAC1D6H,qBAAsB,WAAc,OAAO7H,SAAU,EACrD8H,iBAAkB,WAAc,OAAO9H,SAAU,EAEjE,EACQH,WAAY,MACZC,aAAc,OAElBwG,EAAkBjG,UAAU0H,WAAa,WACrC,OAAOhN,KAAKwE,QAAQ0H,SAASrC,EAAWU,SAChD,EACIgB,EAAkBjG,UAAU2H,WAAa,WACrC,OAAOjN,KAAKwE,QAAQ0H,SAASrC,EAAWI,SAChD,EACIsB,EAAkBjG,UAAU4H,UAAY,WACpC,OAAOlN,KAAKwE,QAAQ0H,SAASrC,EAAWK,QAChD,EACIqB,EAAkBjG,UAAU6H,YAAc,SAAUC,GAChDpN,KAAKqN,gBAAgBD,GACrBpN,KAAKyM,gBAAgBW,EAC7B,EACI7B,EAAkBjG,UAAUgI,uBAAyB,SAAUF,EAAUG,GACrEvN,KAAKqN,gBAAgBD,GACrB,GAAIG,EAAqB,CACrBvN,KAAKwN,uBAAuBJ,EACxC,CACA,EACI7B,EAAkBjG,UAAUmI,mCAAqC,WAC7D,OAAOzN,KAAKwL,+BACpB,EACID,EAAkBjG,UAAUoI,mCAAqC,SAAUC,GACvE3N,KAAKwL,gCAAkCmC,CAC/C,EACIpC,EAAkBjG,UAAUsI,mCAAqC,SAAUC,GACvE7N,KAAKyL,gCAAkCoC,CAC/C,EACItC,EAAkBjG,UAAUwI,cAAgB,WACxC,IAAIlG,EAAQ5H,KACZ,IAAI+N,EAAc,WAAc,OAAOnG,EAAMpD,QAAQyH,2BAA4B,EACjF,IAAI+B,EAAmB,WACnB,OAAOpG,EAAMpD,QAAQuH,gCACjC,EAGQ,IAAK/L,KAAKwE,QAAQ2H,iBAAkB,CAChC,IAAI8B,EAAgBD,IACpB,GAAIC,EAAe,CACf,IAAIC,EAAWH,IAKf,MAAO,CACH/C,OAAQkD,EAASlD,OACjBC,OAAQiD,EAASjD,OACjBC,KAAMgD,EAAShD,KACfC,MAAO+C,EAAS/C,MAChBC,IAAK8C,EAAS9C,IACdC,MAAO6C,EAAS7C,MAAQ4C,EAAchD,OAE1D,CACA,CACQ,OAAO8C,GACf,EAIIxC,EAAkBjG,UAAU6I,UAAY,WACpCnO,KAAKwE,QAAQkH,SAAS7B,EAAWE,UACzC,EACIwB,EAAkBjG,UAAUC,YAAc,WACtCvF,KAAKwE,QAAQY,oBACbpF,KAAKoO,0BAA0BpO,KAAKqO,mBAC5C,EACI9C,EAAkBjG,UAAUgJ,kBAAoB,WAC5C,GAAItO,KAAKiN,aAAc,CACnBjN,KAAKuO,cACjB,CACA,EAIIhD,EAAkBjG,UAAUkJ,oBAAsB,SAAUhJ,GACxD,IAAIoC,EAAQ5H,KAEZ,IAAIyO,EAAezO,KAAKwE,QAAQoH,oBAAoBpG,EAAIvE,OAAQ4I,EAAWE,WAC3E,IAAI2E,EAAmBlJ,EAAImJ,eAAiB,QAC5C,IAAIC,EAAqBpJ,EAAImJ,eAAiB,UAC9C,GAAIF,GAAgBG,EAAoB,CAEpC,IAAIC,EAAc7O,KAAKwE,QAAQwH,sBAAsB,SAGrD8C,uBAAsB,WAClBlH,EAAMpD,QAAQuI,iBAAiB,QAAS8B,GAExCjH,EAAMpD,QAAQuI,iBAAiB,UAAW,KAC1CnF,EAAMpD,QAAQuI,iBAAiB,SAAU,KAEzC+B,uBAAsB,WAClBlH,EAAMpD,QAAQuI,iBAAiB,QAAS,IAC5D,GACA,IACY,MACZ,CACQ,GAAI0B,GAAgBC,EAAkB,CAClC1O,KAAKgG,cACL,IAAI+I,EAAsB/O,KAAKwE,QAAQU,aAAalB,EAAQuF,gCAC5DvJ,KAAKwE,QAAQgI,cAAcuC,EACvC,CAEQ,IAAKH,EAAoB,CACrB,MACZ,CACQ,IAAII,EAAwBhP,KAAKwE,QAAQoH,oBAAoBpG,EAAIvE,OAAQ4I,EAAWO,eAChFpK,KAAKwE,QAAQ0H,SAASrC,EAAWU,UACrC,IAAI0E,EAAwBjP,KAAKwE,QAAQoH,oBAAoBpG,EAAIvE,OAAQ4I,EAAWC,aAC/E9J,KAAKwE,QAAQ0H,SAASrC,EAAWU,UACtC,GAAIyE,EAAuB,CACvBhP,KAAKwE,QAAQmH,sBAAsB9B,EAAWM,qBAC9C,MACZ,CACQ,GAAI8E,EAAuB,CACvBjP,KAAKwE,QAAQoI,2BAA2B/C,EAAWM,qBACnD,MACZ,CACA,EACIoB,EAAkBjG,UAAU4J,cAAgB,SAAU1J,GAElD,IAAKxF,KAAKmP,uBAAuB3J,GAAM,CACnC,MACZ,CACQxF,KAAKwE,QAAQkH,SAAS7B,EAAWS,uBACzC,EACIiB,EAAkBjG,UAAU8J,eAAiB,SAAU5J,GAEnD,IAAKxF,KAAKmP,uBAAuB3J,GAAM,CACnC,MACZ,CACQ,GAAIxF,KAAKkN,YAAa,CAClBlN,KAAKqP,eACjB,CACQrP,KAAKwE,QAAQmI,YAAY9C,EAAWS,uBAC5C,EAKIiB,EAAkBjG,UAAUgK,gCAAkC,WAC1DtP,KAAKwE,QAAQkI,gCACb1M,KAAKuP,YACb,EAIIhE,EAAkBjG,UAAUI,cAAgB,SAAUF,GAClD,GAAIxF,KAAKkN,YAAa,CAClB,GAAIlN,KAAKwP,oBAAoBhK,GAAM,CAC/BA,EAAIlE,iBACJtB,KAAKqP,eACrB,CAGY,MACZ,CACQ,GAAIrP,KAAKiN,aAAc,CACnB,GAAIjN,KAAKyP,mBAAmBjK,GAAM,CAC9BA,EAAIlE,iBACJtB,KAAKuO,cACrB,CACA,CACQ,GAAIvO,KAAK0P,wBAAwBlK,GAAM,CACnCxF,KAAKwE,QAAQY,oBACbpF,KAAKoO,0BAA0BpO,KAAKqO,oBACpC,MACZ,CACQ,GAAIrO,KAAK2P,eAAenK,GAAM,CAC1BA,EAAIlE,iBACJtB,KAAKuP,aACL,MACZ,CAEQ,IAAK5E,EAAeiF,IAAIpK,EAAIpD,KAAM,CAC9B,MACZ,CAEQoD,EAAIlE,iBACJtB,KAAK6P,gBAAgBrK,EAAIpD,IAAKiG,EAAYyH,QAClD,EACIvE,EAAkBjG,UAAUyK,+BAAiC,SAAUvK,GACnExF,KAAK6P,gBAAgBrK,EAAIwK,OAAO5N,IAAKiG,EAAY4H,SACzD,EAII1E,EAAkBjG,UAAUU,YAAc,WACtChG,KAAKwE,QAAQsI,qBAAqB9I,EAAQI,UAAW,MACrDpE,KAAKwE,QAAQqI,2BACrB,EAKItB,EAAkBjG,UAAUuG,mBAAqB,WAC7C7L,KAAKoO,0BAA0B9C,EAAc4E,aACrD,EAKI3E,EAAkBjG,UAAUwG,oBAAsB,WAC9C,IAAIqE,EAA4BnQ,KAAKwE,QAAQ6H,4BAC7C,GAAI8D,EAA2B,CAC3BnQ,KAAKwE,QAAQsI,qBAAqB9I,EAAQI,UAAW,MACrDpE,KAAKwE,QAAQsH,sBACb,MACZ,CACQ9L,KAAK6L,oBACb,EACIN,EAAkBjG,UAAU8I,0BAA4B,SAAUgC,GAC9DpQ,KAAKwE,QAAQsI,qBAAqB9I,EAAQI,UAAW,KACrD,GAAIgM,IAAkB9E,EAAc4E,aAAc,CAC9ClQ,KAAKwE,QAAQqH,oBACzB,CACQ7L,KAAKwE,QAAQqI,2BACrB,EACItB,EAAkBjG,UAAU+I,iBAAmB,WAC3C,GAAIrO,KAAKyL,gCAAiC,CACtC,OAAOH,EAAc4E,YACjC,CACQ,OAAO5E,EAAc+E,gBAC7B,EACI9E,EAAkBjG,UAAUuK,gBAAkB,SAAUzN,EAAKkO,GACzD,IAAIjE,EAA4BrM,KAAKwE,QAAQ6H,4BAC7C,IAAIkE,EAAMvQ,KAAKwQ,aAAapO,GAE5B,GAAI0I,EAAa8E,IAAIxN,KAASiK,EAA2B,CACrDrM,KAAKwE,QAAQa,iBAAiBjD,EAAKkO,GACnC,MACZ,CACQ,GAAIA,IAAWjI,EAAYyH,SAAWS,IAAQnI,EAAUqI,MAAO,CAC3DzQ,KAAK8L,sBACL,MACZ,CACQ,GAAIwE,IAAWjI,EAAY4H,UAAYM,IAAQnI,EAAUsI,KAAM,CAC3D1Q,KAAK6L,qBACL,MACZ,CACQ7L,KAAKwE,QAAQa,iBAAiBjD,EAAKiG,EAAYsI,KACvD,EACIpF,EAAkBjG,UAAUkL,aAAe,SAAUpO,GACjD,IAAIgK,EAAQpM,KAAKwE,QAAQ4H,QACzB,IAAIwE,EAAYxO,IAAQ4B,EAAQyE,gBAAkBrG,IAAQ4B,EAAQiF,kBAClE,IAAI4H,EAAazO,IAAQ4B,EAAQ0E,iBAAmBtG,IAAQ4B,EAAQkF,mBACpE,IAAKkD,GAASwE,GAAaxE,GAASyE,EAAY,CAC5C,OAAOzI,EAAUsI,IAC7B,CACQ,OAAOtI,EAAUqI,KACzB,EACIlF,EAAkBjG,UAAUiK,WAAa,WACrC,GAAIvP,KAAKwL,gCAAiC,CACtCxL,KAAKmO,WACjB,CACA,EACI5C,EAAkBjG,UAAUmK,mBAAqB,SAAUjK,GACvD,OAAOxF,KAAKmP,uBAAuB3J,IAAQA,EAAIpD,MAAQ4B,EAAQwC,SACvE,EACI+E,EAAkBjG,UAAUkK,oBAAsB,SAAUhK,GACxD,OAAOA,EAAIpD,MAAQ4B,EAAQwC,SACnC,EACI+E,EAAkBjG,UAAUoK,wBAA0B,SAAUlK,GAC5D,OAAOA,EAAIpD,MAAQ4B,EAAQwC,WAAahB,EAAIpD,MAAQ4B,EAAQuC,YACpE,EACIgF,EAAkBjG,UAAUqK,eAAiB,SAAUnK,GACnD,IAAIsL,EAAc9Q,KAAKwE,QAAQ0H,SAASrC,EAAWG,WACnD,OAAO8G,IACFtL,EAAIpD,MAAQ4B,EAAQ0C,eAAiBlB,EAAIpD,MAAQ4B,EAAQyC,YACtDjB,EAAIpD,MAAQ4B,EAAQoF,cACpC,EACImC,EAAkBjG,UAAU+H,gBAAkB,SAAUD,GACpD,GAAIA,EAAU,CACVpN,KAAKwE,QAAQkH,SAAS7B,EAAWU,UACjCvK,KAAKwE,QAAQsI,qBAAqB9I,EAAQuE,aAAc,OACpE,KACa,CACDvI,KAAKwE,QAAQmI,YAAY9C,EAAWU,UACpCvK,KAAKwE,QAAQsI,qBAAqB9I,EAAQuE,aAAc,QACpE,CACA,EACIgD,EAAkBjG,UAAUmH,gBAAkB,SAAUW,GACpDpN,KAAKwE,QAAQiI,gBAAgBW,EAAU,MAC/C,EACI7B,EAAkBjG,UAAUkI,uBAAyB,SAAUJ,GAC3DpN,KAAKwE,QAAQiI,gBAAgBW,EAAU,KAC/C,EACI7B,EAAkBjG,UAAU6J,uBAAyB,SAAU3J,GAC3D,OAAOxF,KAAKwE,QAAQoH,oBAAoBpG,EAAIvE,OAAQ4I,EAAWQ,eACvE,EACIkB,EAAkBjG,UAAUiJ,aAAe,WACvCvO,KAAKwE,QAAQkH,SAAS7B,EAAWK,SACjClK,KAAKwE,QAAQ+H,iBACrB,EACIhB,EAAkBjG,UAAU+J,cAAgB,WACxCrP,KAAKwE,QAAQmI,YAAY9C,EAAWK,SACpClK,KAAKwE,QAAQ8H,kBACrB,EACI,OAAOf,CACX,CAxWqB,CAwWnB3E;;;;;;;;;;;;;;;;;;;;;;GChXF,IAAImK,EAAyB,SAAUzM,GACnCC,EAAUwM,EAASzM,GACnB,SAASyM,IACL,OAAOzM,IAAW,MAAQA,EAAOwC,MAAM9G,KAAM+G,YAAc/G,IACnE,CACI4E,OAAOC,eAAekM,EAAQzL,UAAW,WAAY,CAIjD9C,IAAK,WACD,OAAOxC,KAAKsH,WAAW0F,YACnC,EAIQgE,IAAK,SAAU5D,GACXpN,KAAKsH,WAAW6F,YAAYC,EACxC,EACQtI,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAekM,EAAQzL,UAAW,kCAAmC,CAIxE9C,IAAK,WACD,OAAOxC,KAAKsH,WAAWmG,oCACnC,EAIQuD,IAAK,SAAUrD,GACX3N,KAAKsH,WAAWoG,mCAAmCC,EAC/D,EACQ7I,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAekM,EAAQzL,UAAW,qCAAsC,CAI3E0L,IAAK,SAAUnD,GACX7N,KAAKsH,WAAWsG,mCAAmCC,EAC/D,EACQ/I,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAekM,EAAQzL,UAAW,SAAU,CAC/C9C,IAAK,WACD,OAAOxC,KAAKgH,aACxB,EACQlC,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAekM,EAAQzL,UAAW,KAAM,CAC3C9C,IAAK,WACD,OAAOxC,KAAKkH,KAAK+J,EAC7B,EACQnM,WAAY,MACZC,aAAc,OAElBgM,EAAQ9J,SAAW,SAAUC,GACzB,OAAO,IAAI6J,EAAQ7J,EAC3B,EACI6J,EAAQzL,UAAU6B,WAAa,SAAUC,EAAe8J,GACpD,IAAItJ,EAAQ5H,KACZ,GAAIoH,SAAuB,EAAG,CAAEA,EAAgB,SAAUC,EAAIC,GAAc,OAAO,IAAIC,EAAUF,EAAIC,EAAY,CAAG,CACpH,GAAI4J,SAA+B,EAAG,CAAEA,EAAwB,SAAU7J,GAAM,OAAO,IAAIR,EAAsBQ,EAAI,CAAG,CACxHrH,KAAKmR,YAAcnR,KAAKkH,KAAKkK,cAAcpN,EAAQqF,uBACnDrJ,KAAKqR,UAAYrR,KAAKkH,KAAKkK,cAAcpN,EAAQ4E,oBACjD5I,KAAKsR,cACDtR,KAAKkH,KAAKkK,cAAcpN,EAAQsF,yBACpC,IAAIiI,EAAmBvR,KAAKkH,KAAKkK,cAAcpN,EAAQ0F,0BACvD,GAAI6H,EAAkB,CAClBvR,KAAKwR,eAAiBN,EAAsBK,EACxD,CAGQ,IAAI/J,EAAgB9C,EAASA,EAAS,GAAI6C,EAAUE,cAAczH,OAAQ,CAAEyR,oBAAqB,WAAc,OAAO7J,EAAMN,WAAWwG,eAAgB,IACvJ9N,KAAKgH,cACDI,EAAcpH,KAAKkH,KAAM,IAAIQ,EAAoBF,GAC7D,EACIuJ,EAAQzL,UAAUqC,mBAAqB,WACnC,IAAIC,EAAQ5H,KAEZA,KAAKsP,gCAAkC,WACnC1H,EAAMN,WAAWgI,iCAC7B,EACQtP,KAAK+P,+BACD,SAAUvK,GACNoC,EAAMN,WAAWyI,+BAA+BvK,EAChE,EAEQxF,KAAKuF,YAAc,WACfqC,EAAMN,WAAW/B,aAC7B,EACQvF,KAAK0F,cAAgB,SAAUF,GAC3BoC,EAAMN,WAAW5B,cAAcF,EAC3C,EACQxF,KAAKwO,oBAAsB,SAAUhJ,GACjCoC,EAAMN,WAAWkH,oBAAoBhJ,EACjD,EACQxF,KAAKkP,cAAgB,SAAU1J,GAC3BoC,EAAMN,WAAW4H,cAAc1J,EAC3C,EACQxF,KAAKoP,eAAiB,SAAU5J,GAC5BoC,EAAMN,WAAW8H,eAAe5J,EAC5C,EACQxF,KAAK6H,OAAO,gBAAiB7H,KAAKwO,qBAClCxO,KAAK6H,OAAO,QAAS7H,KAAKuF,aAC1BvF,KAAK6H,OAAO,UAAW7H,KAAK0F,eAC5B1F,KAAK6H,OAAO,UAAW7H,KAAKkP,eAC5BlP,KAAK6H,OAAO,WAAY7H,KAAKoP,gBAC7B,GAAIpP,KAAKwR,eAAgB,CACrBxR,KAAK6H,OAAO6J,EAAsBxN,kBAAmBlE,KAAKsP,iCAC1DtP,KAAK6H,OAAO6J,EAAsBvN,iBAAkBnE,KAAK+P,+BACrE,CACA,EACIgB,EAAQzL,UAAUwC,QAAU,WACxB9H,KAAKgH,cAAcc,UACnB9H,KAAK+H,SAAS,gBAAiB/H,KAAKwO,qBACpCxO,KAAK+H,SAAS,UAAW/H,KAAK0F,eAC9B1F,KAAK+H,SAAS,QAAS/H,KAAKuF,aAC5BvF,KAAK+H,SAAS,UAAW/H,KAAKkP,eAC9BlP,KAAK+H,SAAS,WAAY/H,KAAKoP,gBAC/B,GAAIpP,KAAKwR,eAAgB,CACrBxR,KAAK+H,SAAS2J,EAAsBxN,kBAAmBlE,KAAKsP,iCAC5DtP,KAAK+H,SAAS2J,EAAsBvN,iBAAkBnE,KAAK+P,+BACvE,CACQzL,EAAOgB,UAAUwC,QAAQrD,KAAKzE,KACtC,EAII+Q,EAAQzL,UAAU6I,UAAY,WAC1BnO,KAAKsH,WAAW6G,WACxB,EACI4C,EAAQzL,UAAU0C,qBAAuB,WACrC,IAAIJ,EAAQ5H,KAGZ,IAAIwE,EAAU,CACVkH,SAAU,SAAUiG,GAAa,OAAO/J,EAAMV,KAAK0K,UAAU/G,IAAI8G,EAAW,EAC5EhG,sBAAuB,SAAUgG,GAC7B,GAAI/J,EAAMuJ,YAAa,CACnBvJ,EAAMuJ,YAAYS,UAAU/G,IAAI8G,EACpD,CACA,EACY/F,oBAAqB,SAAU3K,EAAQ0Q,GACnC,OAAO1Q,EAASA,EAAO2Q,UAAUC,SAASF,GAAa,KACvE,EACY9F,mBAAoB,WAChB,GAAIjE,EAAM0J,cAAe,CACrB1J,EAAM0J,cAActM,OACxC,CACA,EACY8G,oBAAqB,WACjB,GAAIlE,EAAM4J,eAAgB,CACtB5J,EAAM4J,eAAexM,OACzC,CACA,EACYE,aAAc,SAAU+C,GAAQ,OAAOL,EAAMV,KAAKhC,aAAa+C,EAAM,EACrE8D,+BAAgC,WAC5B,OAAOnE,EAAMyJ,UAAYzJ,EAAMyJ,UAAUS,wBAA0B,IACnF,EACY9F,sBAAuB,SAAU2C,GAC7B,OAAOoD,OAAOC,iBAAiBpK,EAAMV,MAAM+K,iBAAiBtD,EAC5E,EACY1C,0BAA2B,WAAc,OAAOrE,EAAMV,KAAK4K,uBAAwB,EACnF5F,SAAU,SAAUyF,GAAa,OAAO/J,EAAMV,KAAK0K,UAAUC,SAASF,EAAW,EACjFxF,eAAgB,WAAc,QAASvE,EAAMuJ,WAAY,EACzD/E,MAAO,WAAc,OAAO2F,OAAOC,iBAAiBpK,EAAMV,MAAM+K,iBAAiB,eAAiB,KAAM,EACxG5F,0BAA2B,WACvB,GAAIzE,EAAM4J,eAAgB,CACtB,OAAO5J,EAAM4J,eAAevL,aAChD,CACgB,OAAO,KACvB,EACYb,kBAAmB,WAAc,OAAOwC,EAAMjG,KAAKqC,EAAQE,kBAAmB,CAAEgO,OAAQtK,EAAMqJ,IAAM,KAAyB,EAC7H5L,iBAAkB,SAAUjD,EAAKkO,GAC7B,OAAO1I,EAAMjG,KAAKqC,EAAQG,iBAAkB,CAAE+N,OAAQtK,EAAMqJ,GAAI7O,IAAKA,EAAKkO,OAAQA,GAAU,KAC5G,EACY9D,cAAe,SAAUuC,GACrBnH,EAAMjG,KAAKqC,EAAQwF,cAAe,CAAE0I,OAAQtK,EAAMqJ,GAAIlC,oBAAqBA,GAAuB,KAClH,EACYtC,gBAAiB,SAAUW,EAAU+E,GACjC,OAAOvK,EAAMjG,KAAKqC,EAAQyF,gBAAiB,CAAEyI,OAAQtK,EAAMqJ,GAAI7D,SAAUA,EAAU+E,aAAcA,GAAgB,KACjI,EACYzF,8BAA+B,WAC3B,OAAO9E,EAAMjG,KAAKqC,EAAQ2F,gCAAiC,CAAEuI,OAAQtK,EAAMqJ,IAAM,KACjG,EACY1E,gBAAiB,WAAY,EAC7BD,iBAAkB,WAAY,EAC9BK,YAAa,SAAUgF,GAAa,OAAO/J,EAAMV,KAAK0K,UAAUlQ,OAAOiQ,EAAW,EAClF/E,2BAA4B,SAAU+E,GAClC,GAAI/J,EAAMuJ,YAAa,CACnBvJ,EAAMuJ,YAAYS,UAAUlQ,OAAOiQ,EACvD,CACA,EACY9E,0BAA2B,WACvB,GAAIjF,EAAM4J,eAAgB,CACtB5J,EAAM4J,eAAexL,aACzC,CACA,EACY8G,qBAAsB,SAAU7E,EAAMC,GAClC,GAAIN,EAAM0J,cAAe,CACrB1J,EAAM0J,cAAcnM,aAAa8C,EAAMC,EAC3D,CACA,EACY6E,iBAAkB,SAAU4B,EAAczG,GACtC,OAAON,EAAMV,KAAK5D,MAAM8O,YAAYzD,EAAczG,EAClE,GAEQ,OAAO,IAAIqD,EAAkB/G,EACrC,EACIuM,EAAQzL,UAAUgI,uBAAyB,SAAUF,EAAUG,GAC3DvN,KAAKsH,WAAWgG,uBAAuBF,EAAUG,EACzD,EACIwD,EAAQzL,UAAUuG,mBAAqB,WACnC7L,KAAKsH,WAAWuE,oBACxB,EACIkF,EAAQzL,UAAUwG,oBAAsB,WACpC9L,KAAKsH,WAAWwE,qBACxB,EACIiF,EAAQzL,UAAUU,YAAc,WAC5BhG,KAAKsH,WAAWtB,aACxB,EACI+K,EAAQzL,UAAU5D,OAAS,WACvB,IAAI2Q,EAASrS,KAAKkH,KAAKoL,WACvB,GAAID,IAAW,KAAM,CACjBA,EAAOE,YAAYvS,KAAKkH,KACpC,CACA,EACI,OAAO6J,CACX,CA1OW,CA0OT5I;;;;;;;;;;;;;;;;;;;;;;GC/OK,IAAIqK,GACX,SAAWA,GACPA,EAAkB,UAAY,SAC9BA,EAAkB,aAAe,WACpC,EAHD,CAGGA,IAAsBA,EAAoB,KAItC,IAAIC,EAAwB,wBAI5B,SAASC,EAASC,EAASC,GAC9BC,GAAUC,cAAcC,IAAIJ,EAASC,EACzC,CACA,IAAIC,GAA2B,WAE3B,SAASA,IACL7S,KAAKgT,YAAc,IAAIC,GAC/B,CACIJ,EAAUC,YAAc,WACpB,IAAKD,EAAUK,SAAU,CACrBL,EAAUK,SAAW,IAAIL,CACrC,CACQ,OAAOA,EAAUK,QACzB,EACIL,EAAUvN,UAAUyN,IAAM,SAAUJ,EAASC,GACzC,IAAIpP,EAAIC,EACR,IAAI0P,GAAY3P,EAAKoP,IAAY,MAAQA,SAAiB,OAAS,EAAIA,EAAQO,YAAc,MAAQ3P,SAAY,EAAIA,EAAKgP,EAAkBY,OAC5I,IAAIC,GAAiB5P,EAAKmP,IAAY,MAAQA,SAAiB,OAAS,EAAIA,EAAQS,iBAAmB,MAAQ5P,SAAY,EAAIA,EAAK6P,SACpI,IAAIC,EAAavT,KAAKwT,cAAcL,EAAUE,GAG9CE,EAAWE,YAAc,GAEzBC,YAAW,WACPH,EAAWE,YAAcd,EACzBU,EAAcM,iBAAiB,QAASC,EACpD,GAAW,GACH,SAASA,IACLL,EAAWE,YAAc,GACzBJ,EAAcQ,oBAAoB,QAASD,EACvD,CACA,EACIf,EAAUvN,UAAUkO,cAAgB,SAAUL,EAAUE,GACpD,IAAIS,EAAsB9T,KAAKgT,YAAYxQ,IAAI6Q,GAC/C,IAAKS,EAAqB,CACtBA,EAAsB,IAAIb,IAC1BjT,KAAKgT,YAAYhC,IAAIqC,EAAeS,EAChD,CACQ,IAAIC,EAAqBD,EAAoBtR,IAAI2Q,GACjD,GAAIY,GACAV,EAAcW,KAAKnC,SAASkC,GAAqB,CACjD,OAAOA,CACnB,CACQ,IAAIR,EAAavT,KAAKiU,iBAAiBd,EAAUE,GACjDS,EAAoB9C,IAAImC,EAAUI,GAClC,OAAOA,CACf,EACIV,EAAUvN,UAAU2O,iBAAmB,SAAUd,EAAUE,GACvD,IAAIhM,EAAKgM,EAAca,cAAc,OACrC7M,EAAG/D,MAAM6Q,SAAW,WACpB9M,EAAG/D,MAAM8H,IAAM,UACf/D,EAAG/D,MAAM4H,KAAO,UAChB7D,EAAG/D,MAAM2H,OAAS,MAClB5D,EAAG/D,MAAM8Q,SAAW,SACpB/M,EAAGlC,aAAa,cAAe,QAC/BkC,EAAGlC,aAAa,YAAagO,GAC7B9L,EAAGlC,aAAasN,EAAuB,QACvCY,EAAcW,KAAKK,YAAYhN,GAC/B,OAAOA,CACf,EACI,OAAOwL,CACX,CA1Da;;;;;;;;;;;;;;;;;;;;;;GClBN,IAAI7O,GAAU,CACjBsQ,cAAe,aAEZ,IAAIzK,GAAa,CACpB0K,OAAQ,uBACRC,OAAQ;;;;;;;;;;;;;;;;;;;;;;GCDZ,IAAIC,GAAsC,SAAUnQ,GAChDC,EAAUkQ,EAAsBnQ,GAChC,SAASmQ,EAAqBjQ,GAC1B,IAAIoD,EAAQtD,EAAOG,KAAKzE,KAAM0E,EAASA,EAAS,GAAI+P,EAAqB9P,gBAAiBH,KAAaxE,KAIvG4H,EAAM8M,gBAAkB,GACxB,OAAO9M,CACf,CACIhD,OAAOC,eAAe4P,EAAsB,UAAW,CACnDjS,IAAK,WACD,OAAOwB,EACnB,EACQc,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe4P,EAAsB,aAAc,CACtDjS,IAAK,WACD,OAAOqH,EACnB,EACQ/E,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe4P,EAAsB,iBAAkB,CAC1DjS,IAAK,WACD,MAAO,CACHmS,gBAAiB,WAAc,OAAO1P,SAAU,EAChD2P,8BAA+B,WAAc,OAAO3P,SAAU,EAC9D4P,+BAAgC,WAAc,OAAO5P,SAAU,EAC/D6P,iBAAkB,WAAc,OAAQ,CAAE,EAC1CC,mBAAoB,WAAc,OAAQ,CAAE,EAC5C7I,SAAU,WAAc,OAAO,KAAM,EACrCE,MAAO,WAAc,OAAO,KAAM,EAClC4I,kBAAmB,WAAc,OAAO/P,SAAU,EAClDgQ,2BAA4B,WAAc,OAAOhQ,SAAU,EAC3DiQ,kBAAmB,WAAc,OAAOjQ,SAAU,EAElE,EACQH,WAAY,MACZC,aAAc,OAKlB0P,EAAqBnP,UAAU6P,mBAAqB,WAChD,OAAOnV,KAAK0U,gBAAgBU,OACpC,EAKIX,EAAqBnP,UAAU+P,OAAS,SAAUnD,GAC9ClS,KAAKsV,WAAWpD,EAAQ,MAChC,EAIIuC,EAAqBnP,UAAUiQ,sBAAwB,SAAU/R,GAC7D,IAAI0O,EAAS1O,EAAG0O,OAChB,IAAIsD,EAAQxV,KAAKwE,QAAQuQ,mBAAmB7C,GAC5ClS,KAAKyV,2BAA2BD,GAChC,GAAIxV,KAAKwE,QAAQ0H,SAASrC,GAAW0K,SACjCvU,KAAKwE,QAAQ0H,SAASrC,GAAW2K,QAAS,CAC1CxU,KAAK0V,aAAaxD,EAC9B,CACA,EAIIuC,EAAqBnP,UAAUqQ,oBAAsB,SAAUnS,GAC3D,IAAI0O,EAAS1O,EAAG0O,OAAQ9E,EAAW5J,EAAG4J,SAAU+E,EAAe3O,EAAG2O,aAElE,GAAIA,EAAc,CACd,MACZ,CACQ,IAAIyD,EAAiB5V,KAAK0U,gBAAgBmB,QAAQ3D,IAAW,EAC7D,GAAI9E,IAAawI,EAAgB,CAC7B5V,KAAKqV,OAAOnD,EACxB,MACa,IAAK9E,GAAYwI,EAAgB,CAClC5V,KAAK8V,aAAa5D,EAC9B,CACA,EAIIuC,EAAqBnP,UAAUyQ,kBAAoB,SAAUvS,GACzD,IAAI0O,EAAS1O,EAAG0O,OAAQnD,EAAsBvL,EAAGuL,oBACjD,GAAIA,EAAqB,CACrB/O,KAAKwE,QAAQmQ,gBAAgB5F,EACzC,CACQ,IAAIyG,EAAQxV,KAAKwE,QAAQuQ,mBAAmB7C,GAC5ClS,KAAKgW,yBAAyB9D,GAC9BlS,KAAKwE,QAAQwQ,kBAAkBQ,GAC/B,IAAIS,EAAWjW,KAAKwE,QAAQsQ,mBAAqB,EACjD,GAAImB,EAAW,EAAG,CACd,MACZ,CACQ,IAAIC,EAAYC,KAAKC,IAAIZ,EAAOS,GAChCjW,KAAKyV,2BAA2BS,GAEhClW,KAAKwE,QAAQqQ,+BAA+BqB,EACpD,EAIIzB,EAAqBnP,UAAU+Q,qBAAuB,SAAU7S,GAC5D,IAAI0O,EAAS1O,EAAG0O,OAAQ9P,EAAMoB,EAAGpB,IAAKkO,EAAS9M,EAAG8M,OAClD,IAAI2F,EAAWjW,KAAKwE,QAAQsQ,mBAAqB,EACjD,IAAIU,EAAQxV,KAAKwE,QAAQuQ,mBAAmB7C,GAE5C,GAAIsD,KAAW,IAAM7K,EAAeiF,IAAIxN,GAAM,CAC1C,MACZ,CACQ,IAAIgK,EAAQpM,KAAKwE,QAAQ4H,QACzB,IAAIwE,EAAYxO,IAAQkU,EAAY7N,gBAChCrG,IAAQkU,EAAYrN,kBACxB,IAAI4H,EAAazO,IAAQkU,EAAY5N,iBACjCtG,IAAQkU,EAAYpN,mBACxB,IAAIqN,EAAYnU,IAAQkU,EAAY9N,gBAChCpG,IAAQkU,EAAYtN,kBACxB,IAAIwN,GAAmBpK,GAASyE,GAAczE,GAASwE,GAAa2F,EACpE,IAAIE,EAASrU,IAAQkU,EAAYvN,SACjC,IAAI2N,EAAQtU,IAAQkU,EAAYzN,QAChC,GAAI2N,EAAiB,CACjBhB,GACZ,MACa,GAAIiB,EAAQ,CACbjB,EAAQ,CACpB,MACa,GAAIkB,EAAO,CACZlB,EAAQS,CACpB,KACa,CACDT,GACZ,CAEQ,GAAIA,EAAQ,GAAKA,EAAQS,EAAU,CAC/B,MACZ,CACQjW,KAAKyV,2BAA2BD,GAChCxV,KAAK2W,gBAAgBnB,EAAOpT,EAAKkO,EACzC,EACImE,EAAqBnP,UAAUqR,gBAAkB,SAAUnB,EAAOpT,EAAKkO,GACnE,IAAIsG,EAAkB9L,EAAa8E,IAAIxN,GACvC,GAAIwU,GAAmBtG,IAAWjI,EAAYyH,QAAS,CACnD,OAAO9P,KAAKwE,QAAQoQ,8BAA8BY,EAC9D,CACQ,GAAIoB,GAAmBtG,IAAWjI,EAAY4H,SAAU,CACpD,OAAOjQ,KAAKwE,QAAQqQ,+BAA+BW,EAC/D,CACQ,IAAIjF,EAAMvQ,KAAKwQ,aAAapO,GAC5B,GAAImO,IAAQnI,EAAUsI,KAAM,CACxB,OAAO1Q,KAAKwE,QAAQqQ,+BAA+BW,EAC/D,CACQ,GAAIjF,IAAQnI,EAAUqI,MAAO,CACzB,OAAOzQ,KAAKwE,QAAQoQ,8BAA8BY,EAC9D,CACA,EACIf,EAAqBnP,UAAUkL,aAAe,SAAUpO,GACpD,IAAIgK,EAAQpM,KAAKwE,QAAQ4H,QACzB,IAAIwE,EAAYxO,IAAQkU,EAAY7N,gBAChCrG,IAAQkU,EAAYrN,kBACxB,IAAI4H,EAAazO,IAAQkU,EAAY5N,iBACjCtG,IAAQkU,EAAYpN,mBACxB,IAAKkD,GAASwE,GAAaxE,GAASyE,EAAY,CAC5C,OAAOzI,EAAUsI,IAC7B,CACQ,OAAOtI,EAAUqI,KACzB,EAIIgE,EAAqBnP,UAAUwQ,aAAe,SAAU5D,EAAQ3E,GAC5D,GAAIA,SAA6B,EAAG,CAAEA,EAAsB,KAAM,CAClE,IAAIiI,EAAQxV,KAAK0U,gBAAgBmB,QAAQ3D,GACzC,GAAIsD,GAAS,EAAG,CACZxV,KAAK0U,gBAAgBmC,OAAOrB,EAAO,GACnC,IAAIsB,EAAY9W,KAAKwE,QAAQuQ,mBAAmB7C,GAChDlS,KAAKwE,QAAQ0Q,kBAAkB4B,EAA6B,MAAOvJ,EAC/E,CACA,EAIIkH,EAAqBnP,UAAU0Q,yBAA2B,SAAU9D,GAChElS,KAAK8V,aAAa5D,EAAQ,KAClC,EAIIuC,EAAqBnP,UAAUoQ,aAAe,SAAUxD,GACpD,GAAIlS,KAAK0U,gBAAgBmB,QAAQ3D,IAAW,EAAG,CAC3ClS,KAAKgW,yBAAyB9D,EAC1C,KACa,CACDlS,KAAK+W,uBAAuB7E,EACxC,CACA,EACIuC,EAAqBnP,UAAUmQ,2BAA6B,SAAUD,GAClE,IAAIwB,EAAYhX,KAAKwE,QAAQsQ,mBAC7B,IAAK,IAAImC,EAAI,EAAGA,EAAID,EAAWC,IAAK,CAChC,GAAIA,IAAMzB,EAAO,CACbxV,KAAKwE,QAAQyQ,2BAA2BgC,EACxD,CACA,CACA,EACIxC,EAAqBnP,UAAUyR,uBAAyB,SAAU7E,GAC9DlS,KAAKsV,WAAWpD,EAAQ,KAChC,EACIuC,EAAqBnP,UAAUgQ,WAAa,SAAUpD,EAAQ3E,GAC1D,GAAIvN,KAAK0U,gBAAgBmB,QAAQ3D,IAAW,EAAG,CAC3C,MACZ,CACQ,GAAIlS,KAAKwE,QAAQ0H,SAASrC,GAAW0K,SACjCvU,KAAK0U,gBAAgBwC,OAAS,EAAG,CACjC,IAAIC,EAAyBnX,KAAK0U,gBAAgB,GAClD,IAAI0C,EAA0BpX,KAAKwE,QAAQuQ,mBAAmBoC,GAC9DnX,KAAK0U,gBAAkB,GACvB1U,KAAKwE,QAAQ0Q,kBAAkBkC,EAA2C,MAAO7J,EAC7F,CACQvN,KAAK0U,gBAAgB2C,KAAKnF,GAC1B,IAAIsD,EAAQxV,KAAKwE,QAAQuQ,mBAAmB7C,GAC5ClS,KAAKwE,QAAQ0Q,kBAAkBM,EAAyB,KAAMjI,EACtE,EACI,OAAOkH,CACX,CAnOwB,CAmOtB7N;;;;;;;;;;;;;;;;;;;;;;GCjOF,IAAIpD,GAAK+H,EAAkBvH,QAASE,GAAoBV,GAAGU,kBAAmBuF,GAAkBjG,GAAGiG,gBAAiBD,GAAgBhG,GAAGgG,cAAerF,GAAmBX,GAAGW,iBAC5K,IAAImQ,GAAgBG,GAAqBzQ,QAAQsQ,cACjD,IAAIgD,GAAY,EAChB,IAAIC,GAA4B,SAAUjT,GACtCC,EAAUgT,EAAYjT,GACtB,SAASiT,IACL,OAAOjT,IAAW,MAAQA,EAAOwC,MAAM9G,KAAM+G,YAAc/G,IACnE,CACIuX,EAAWtQ,SAAW,SAAUC,GAC5B,OAAO,IAAIqQ,EAAWrQ,EAC9B,EACItC,OAAOC,eAAe0S,EAAWjS,UAAW,QAAS,CACjD9C,IAAK,WACD,OAAOxC,KAAKwX,UAAUpC,OAClC,EACQtQ,WAAY,MACZC,aAAc,OAElBH,OAAOC,eAAe0S,EAAWjS,UAAW,kBAAmB,CAI3D9C,IAAK,WACD,OAAOxC,KAAKsH,WAAW6N,oBACnC,EACQrQ,WAAY,MACZC,aAAc,OAKlBwS,EAAWjS,UAAU6B,WAAa,SAAUsQ,GACxC,GAAIA,SAAqB,EAAG,CAAEA,EAAc,SAAUpQ,GAAM,OAAO,IAAI0J,EAAQ1J,EAAI,CAAG,CACtFrH,KAAKyX,YAAcA,EACnBzX,KAAKwX,UAAYxX,KAAK0X,iBAAiB1X,KAAKyX,YACpD,EACIF,EAAWjS,UAAUqC,mBAAqB,WACtC,IAAIgQ,EAAKnU,EACT,IAAIoE,EAAQ5H,KACZ,IACI,IAAK,IAAIyD,EAAKmU,EAAS5X,KAAKwX,WAAYK,EAAKpU,EAAGqU,QAASD,EAAGE,KAAMF,EAAKpU,EAAGqU,OAAQ,CAC9E,IAAIE,EAAOH,EAAG3P,MACd,GAAI8P,EAAK/G,IAAM+G,EAAK5K,SAAU,CAC1BpN,KAAKsH,WAAW+N,OAAO2C,EAAK/G,GAChD,CACA,CACA,CACQ,MAAOgH,GAASN,EAAM,CAAEO,MAAOD,EAAQ,CAC/C,QACY,IACI,GAAIJ,IAAOA,EAAGE,OAASvU,EAAKC,EAAG0U,QAAS3U,EAAGiB,KAAKhB,EAChE,CACA,QAAsB,GAAIkU,EAAK,MAAMA,EAAIO,KAAM,CAC/C,CACQlY,KAAKuV,sBAAwB,SAAU/P,GACnC,OAAOoC,EAAMN,WAAWiO,sBAAsB/P,EAAIwK,OAC9D,EACQhQ,KAAK2V,oBAAsB,SAAUnQ,GACjC,OAAOoC,EAAMN,WAAWqO,oBAAoBnQ,EAAIwK,OAC5D,EACQhQ,KAAK+V,kBAAoB,SAAUvQ,GAC/B,OAAOoC,EAAMN,WAAWyO,kBAAkBvQ,EAAIwK,OAC1D,EACQhQ,KAAKqW,qBAAuB,SAAU7Q,GAClC,OAAOoC,EAAMN,WAAW+O,qBAAqB7Q,EAAIwK,OAC7D,EACQhQ,KAAK6H,OAAO3D,GAAmBlE,KAAKuV,uBACpCvV,KAAK6H,OAAO4B,GAAiBzJ,KAAK2V,qBAClC3V,KAAK6H,OAAO2B,GAAexJ,KAAK+V,mBAChC/V,KAAK6H,OAAO1D,GAAkBnE,KAAKqW,qBAC3C,EACIkB,EAAWjS,UAAUwC,QAAU,WAC3B,IAAIsQ,EAAK5U,EACT,IACI,IAAK,IAAIC,EAAKmU,EAAS5X,KAAKwX,WAAYK,EAAKpU,EAAGqU,QAASD,EAAGE,KAAMF,EAAKpU,EAAGqU,OAAQ,CAC9E,IAAIE,EAAOH,EAAG3P,MACd8P,EAAKlQ,SACrB,CACA,CACQ,MAAOuQ,GAASD,EAAM,CAAEF,MAAOG,EAAQ,CAC/C,QACY,IACI,GAAIR,IAAOA,EAAGE,OAASvU,EAAKC,EAAG0U,QAAS3U,EAAGiB,KAAKhB,EAChE,CACA,QAAsB,GAAI2U,EAAK,MAAMA,EAAIF,KAAM,CAC/C,CACQlY,KAAK+H,SAAS7D,GAAmBlE,KAAKuV,uBACtCvV,KAAK+H,SAAS0B,GAAiBzJ,KAAK2V,qBACpC3V,KAAK+H,SAASyB,GAAexJ,KAAK+V,mBAClC/V,KAAK+H,SAAS5D,GAAkBnE,KAAKqW,sBACrC/R,EAAOgB,UAAUwC,QAAQrD,KAAKzE,KACtC,EAIIuX,EAAWjS,UAAUgT,QAAU,SAAUC,GACrCA,EAAOtH,GAAKsH,EAAOtH,IAAM,eAAgBqG,GACzCtX,KAAKwX,UAAUH,KAAKrX,KAAKyX,YAAYc,GAC7C,EACIhB,EAAWjS,UAAU0C,qBAAuB,WACxC,IAAIJ,EAAQ5H,KAGZ,IAAIwE,EAAU,CACVmQ,gBAAiB,SAAUhC,GACvBD,EAASC,EACzB,EACYiC,8BAA+B,SAAUY,GACrC5N,EAAM4P,UAAUhC,GAAO3J,oBACvC,EACYgJ,+BAAgC,SAAUW,GACtC5N,EAAM4P,UAAUhC,GAAO1J,qBACvC,EACYgJ,iBAAkB,WAAc,OAAOlN,EAAM4Q,MAAMtB,MAAO,EAC1DnC,mBAAoB,SAAU7C,GAC1B,OAAOtK,EAAM6Q,cAAcvG,EAC3C,EACYhG,SAAU,SAAUyF,GAAa,OAAO/J,EAAMV,KAAK0K,UAAUC,SAASF,EAAW,EACjFvF,MAAO,WAAc,OAAO2F,OAAOC,iBAAiBpK,EAAMV,MAAM+K,iBAAiB,eAAiB,KAAM,EACxG+C,kBAAmB,SAAUQ,GACzB,GAAIA,GAAS,GAAKA,EAAQ5N,EAAM4Q,MAAMtB,OAAQ,CAC1CtP,EAAM4P,UAAUhC,GAAO1N,UACvBF,EAAM4P,UAAUhC,GAAO9T,SACvBkG,EAAM4P,UAAUX,OAAOrB,EAAO,EAClD,CACA,EACYP,2BAA4B,SAAUO,GAClC5N,EAAM4P,UAAUhC,GAAOxP,aACvC,EACYkP,kBAAmB,SAAUM,EAAOpI,EAAUG,GAC1C,GAAIiI,GAAS,GAAKA,EAAQ5N,EAAM4Q,MAAMtB,OAAQ,CAC1CtP,EAAM4P,UAAUhC,GAAOlI,uBAAuBF,EAAUG,EAC5E,CACA,GAEQ,OAAO,IAAIkH,GAAqBjQ,EACxC,EAII+S,EAAWjS,UAAUoS,iBAAmB,SAAUD,GAC9C,IAAIiB,EAAe,GAAGtD,MAAM3Q,KAAKzE,KAAKkH,KAAKyR,iBAAiBrE,KAC5D,OAAOoE,EAAaE,KAAI,SAAUvR,GAC9BA,EAAG4J,GAAK5J,EAAG4J,IAAM,eAAgBqG,GACjC,OAAOG,EAAYpQ,EAC/B,GACA,EAIIkQ,EAAWjS,UAAUmT,cAAgB,SAAUvG,GAC3C,IAAK,IAAI+E,EAAI,EAAGA,EAAIjX,KAAKwY,MAAMtB,OAAQD,IAAK,CACxC,GAAIjX,KAAKwX,UAAUP,GAAGhG,KAAOiB,EAAQ,CACjC,OAAO+E,CACvB,CACA,CACQ,OAAQ,CAChB,EACI,OAAOM,CACX,CA5Jc,CA4JZpP,G,SCrKc0Q,GAAoBrX,GAChC,GAAIxB,KAAK8Y,UAAU5B,OAAQ,CAGvB,M,CAGJ,IAAKlX,KAAKkI,QAAUlI,KAAKkI,MAAMgP,OAAQ,CAEnC,M,CAGJ,MAAM6B,EACFvX,EAAMY,MAAQ4W,GAAcxX,EAAMa,UAAY4W,EAClD,MAAMC,EACF1X,EAAMY,MAAQ+W,GAAe3X,EAAMa,UAAY+W,EACnD,MAAMC,EAAU7X,EAAMY,MAAQgE,GAAS5E,EAAMa,UAAYiX,EACzD,MAAMC,EAAW/X,EAAMY,MAAQN,GAAUN,EAAMa,UAAYJ,EAC3D,MAAMuX,EACFhY,EAAMY,MAAQL,GAAaP,EAAMa,UAAYH,EACjD,MAAMuX,EAAWjY,EAAMY,MAAQsX,GAAUlY,EAAMa,UAAYsX,EAE3D,GAAIZ,EAAQ,CACR,OAAOa,GAAW5Z,KAAMwB,E,CAG5B,GAAI0X,EAAS,CACT,OAAOW,GAAY7Z,KAAMwB,E,CAG7B,GAAI6X,EAAS,CACT,OAAOS,GAAY9Z,KAAMwB,E,CAG7B,GAAI+X,EAAU,CACV,OAAOQ,GAAa/Z,KAAMwB,E,CAG9B,GAAIgY,EAAa,CACb,OAAOQ,GAAgBha,KAAMwB,E,CAGjC,GAAIiY,EAAU,CACV,OAAOQ,GAAaja,KAAMwB,E,CAElC,CAEA,SAASoY,GAAWhX,EAAMpB,GACtBA,EAAMF,iBACN,GAAIsB,EAAKsX,yBAA2B,KAAM,CACtCtX,EAAKsX,uBAAyBtX,EAAKsF,MAAMgP,OAAS,EAElD,M,CAGJ,GAAItU,EAAKsX,wBAA0B,EAAG,CAClC,M,CAGJtX,EAAKsX,wBAA0B,CACnC,CAEA,SAASL,GAAYjX,EAAMpB,GACvBA,EAAMF,iBACN,GAAIsB,EAAKsX,yBAA2B,KAAM,CACtCtX,EAAKsX,uBAAyB,EAE9B,M,CAGJ,GAAItX,EAAKsX,wBAA0BtX,EAAKsF,MAAMgP,OAAS,EAAG,CACtD,M,CAGJtU,EAAKsX,wBAA0B,CACnC,CAEA,SAASJ,GAAYlX,EAAMpB,GACvB,GAAIoB,EAAKsX,yBAA2B,KAAM,CACtC1Y,EAAMF,iBACNsB,EAAKuX,gBAAgBvX,EAAKsF,MAAMtF,EAAKsX,wB,CAE7C,CAEA,SAASD,GAAarX,EAAMpB,GACxB,GAAIoB,EAAKsX,yBAA2B,KAAM,CACtC1Y,EAAMF,iBACNsB,EAAKsX,uBAAyB,I,CAEtC,CAEA,SAASH,GAAanX,EAAMpB,GACxB,GAAIoB,EAAKsX,yBAA2B,KAAM,CACtC1Y,EAAMF,iBACNiO,GAAW3M,E,CAEnB,CAEA,SAASoX,GAAgBpX,EAAMpB,GAC3B,GAAIoB,EAAKsX,yBAA2B,KAAM,CACtC1Y,EAAMF,iBACNiO,GAAW3M,E,MACR,IAAKpB,EAAM4Y,OAAQ,CACtBxX,EAAKsX,uBAAyBtX,EAAKsF,MAAMgP,OAAS,C,CAE1D,CAEA,SAAS3H,GAAW3M,GAChB,GAAIA,EAAKsX,yBAA2B,KAAM,CACtCtX,EAAK2M,WAAW3M,EAAKsF,MAAMtF,EAAKsX,wBAAwBjJ,IACxDrO,EAAKsX,uBAAyB,I,CAEtC,CCtIA,MAAMG,GAAa,qq0DC+BnB,MAAMC,GAAuB,E,MAkBhBC,GAAO,MAqKhBC,YAAAC,G,iLAFQza,KAAA0a,cAAgB7B,GAqOhB7Y,KAAA2a,4BAA8B,KAClC,GAAI3a,KAAKM,UAAYN,KAAKkI,MAAMgP,SAAW,EAAG,CAC1C,OACIhX,EAAA,QAAMC,MAAM,6DAA2D,I,GA4B3EH,KAAA4a,gBAAkB,KACtB,KAAM5a,KAAKkI,MAAMgP,QAAUlX,KAAK6a,UAAY7a,KAAKM,SAAU,CACvD,OAAO,I,GAIPN,KAAA8a,YAAc,IACXvY,EAAUC,IAAI,0BAA2BxC,KAAKyC,UAqHjDzC,KAAA+a,cAAgB,IACb/a,KAAKgb,aAAe,MAAQhb,KAAKgb,aAAe/V,UAGnDjF,KAAAib,iBAAmB,KACvB,IAAKjb,KAAKkb,WAAalb,KAAK+a,gBAAiB,CACzC,M,CAGJ,OACI7a,EAAA,qBACIgX,OAAQlX,KAAKkI,MAAMgP,OACnBiE,UAAWnb,KAAKkb,SAChBF,WAAYhb,KAAKgb,WACjBI,QAASpb,KAAKqb,aAChB,EAoBFrb,KAAAuP,WAAc0B,GAAwB,KAC1C,MAAMqK,EAAWtb,KAAKkI,MAAMqT,QAAQvD,GACzB,GAAGA,EAAK/G,OAAS,GAAGA,MAE/BjR,KAAKwb,OAAO7Z,KAAK2Z,EAAS,EA+DtBtb,KAAAyb,mBAAqB,IAClBlZ,EAAUC,IAAI,qBAAsBxC,KAAKyC,U,WAroB7B,G,iFAmCI,M,cASA,M,aAOV,M,eAOqB,O,sCAaX,M,iDAYQ,K,oBAMF,K,iBAOJ,K,eAMF,K,cAOE,K,cAoCD,M,eAGA,G,aAGD,M,4BAGc,KAOrCzC,KAAK0b,WAAa1b,KAAK0b,WAAWC,KAAK3b,MACvCA,KAAK4b,gBAAkB5b,KAAK4b,gBAAgBD,KAAK3b,MACjDA,KAAK6b,OAAS7b,KAAK6b,OAAOF,KAAK3b,MAC/BA,KAAK8b,uBAAyB9b,KAAK8b,uBAAuBH,KAAK3b,MAC/DA,KAAK+b,gBAAkB/b,KAAK+b,gBAAgBJ,KAAK3b,MACjDA,KAAKgc,qBAAuBhc,KAAKgc,qBAAqBL,KAAK3b,MAC3DA,KAAKic,gBAAkBjc,KAAKic,gBAAgBN,KAAK3b,MACjDA,KAAKkc,gBAAkBlc,KAAKkc,gBAAgBP,KAAK3b,MACjDA,KAAKmc,mBAAqBnc,KAAKmc,mBAAmBR,KAAK3b,MACvDA,KAAK0a,cAAgB1a,KAAK0a,cAAciB,KAAK3b,MAC7CA,KAAKoc,YAAcpc,KAAKoc,YAAYT,KAAK3b,MACzCA,KAAKqc,yBACDrc,KAAKqc,yBAAyBV,KAAK3b,MACvCA,KAAKsc,gBAAkBtc,KAAKsc,gBAAgBX,KAAK3b,K,CAS9Cuc,oBACH,OAAOvc,KAAK6a,Q,CAUT0B,eAAeC,EAAsB,OACxC,GAAIxc,KAAKK,UAAYL,KAAKM,SAAU,CAChC,M,CAGJN,KAAK6a,SAAW,KAChB,GAAI2B,EAAY,CACZxc,KAAK8Y,UAAY,E,CAGrB9Y,KAAK4C,KAAK6Z,WAAWrL,cAAc,SAASpM,QAC5ChF,KAAK0c,UAAU/a,M,CAUZ4a,mBACHvc,KAAK2c,gB,CAGFC,mBACH5c,KAAK6c,wBAAwB7c,KAAKkI,OAElC,GAAIlI,KAAK8c,OAAS,QAAS,CACvB9c,KAAK+c,aAAe,IAAIC,EACpBhd,KAAK4C,KAAK6Z,WAAWrL,cAAc,mB,CAI3CpR,KAAKid,kB,CAGFC,sBACHld,KAAKmd,mB,CAGFC,qBACHpd,KAAKid,mBACL,MAAMI,EAAQrd,KAAK4C,KAAK6Z,WAAWrL,cAAc,SACjD,GAAIiM,GAASrd,KAAK6a,SAAU,CACxBwC,EAAMrY,O,EAIPnC,uBACH7C,KAAKmd,oBAEL,GAAInd,KAAK+c,aAAc,CACnB/c,KAAK+c,aAAajV,S,EAInB/E,SACH,GAAI/C,KAAK8c,OAAS,QAAS,CACvB,OAAO9c,KAAKsd,kB,CAGhB,MAAMC,EAAU,CACZ,eAAgB,KAChBld,SAAUL,KAAKK,UAAYL,KAAKM,SAChC,qCAAsC,MAE1C,GAAIN,KAAK8c,KAAM,CACXS,EAAQ,iBAAiBvd,KAAK8c,QAAU,I,CAG5C,MAAMU,EAAexd,KAAKyd,qBAC1B,GAAID,EAAc,CACdD,EAAQ,wBAA0B,I,CAGtC,OACIrd,EAAA,OAAKC,MAAOod,EAASnd,KAAK,QACrBod,EACAxd,KAAKkI,MAAM0Q,IAAI5Y,KAAK0b,YACpB1b,KAAKib,mB,CAMRyC,kBAAkBpC,EAAkBqC,GAC1C,GAAIC,EAAQtC,EAAUqC,GAAW,CAC7B,M,CAGJ3d,KAAK2c,gB,CAGDM,mBACJjd,KAAK6d,WAAa,IAAItG,GAClBvX,KAAK4C,KAAK6Z,WAAWrL,cAAc,kBAGvC,IAAKpR,KAAK8c,MAAQ9c,KAAK8c,OAAS,QAAS,CACrC9c,KAAK6d,WAAWhW,OACZ,sBACA7H,KAAK8b,uB,CAIb,GAAI9b,KAAK8c,OAAS,UAAY9c,KAAK8c,OAAS,SAAU,CAClD9c,KAAK6d,WAAWhW,OAAO,oBAAqB7H,KAAK+b,gB,EAIjDoB,oBACJ,GAAInd,KAAK6d,WAAY,CACjB7d,KAAK6d,WAAW9V,SACZ,sBACA/H,KAAK8b,wBAET9b,KAAK6d,WAAW9V,SAAS,oBAAqB/H,KAAK+b,iBAEnD/b,KAAK6d,WAAW/V,S,EAIhB2V,qBACJ,IAAKzd,KAAK2D,MAAO,CACb,M,CAGJ,OACIzD,EAAA,SAAOC,MAAM,sEACRH,KAAK2D,M,CAKV2Z,mBACJ,MAAO,CACHpd,EAAA,OACIC,MAAO,CACH,0CAA2C,KAC3C,mCAAoC,KACpC,gBAAiBH,KAAKqb,YACtB,2BAA4Brb,KAAKM,UAAYN,KAAKK,SAClD,4BAA6BL,KAAKM,SAClC,2CACIN,KAAKkI,MAAMgP,SAAW,EAC1B,mBAAoBlX,KAAKmR,cAAgB,KACzC,uBAAwBnR,KAAK8d,gBAEjC7a,QAASjD,KAAKgc,sBAEbhc,KAAKkI,MAAM0Q,IAAI5Y,KAAK4b,iBACrB1b,EAAA,SACI2D,SAAUyW,GACVwC,KAAM9c,KAAK+d,UACX9M,GAAG,gBACH5Q,SAAUL,KAAKM,UAAYN,KAAKK,SAChCF,MAAO,CACH,wBAAyB,KACzB6d,OAAQhe,KAAKoc,eAEjBlU,MAAOlI,KAAK8Y,UACZmF,OAAQje,KAAKic,gBACbiC,QAASle,KAAKgc,qBACdzb,UAAWP,KAAK0a,cAChByD,QAASne,KAAKkc,gBAGdkC,SAAUpe,KAAKmc,mBACfkC,YAAare,KAAK6b,SAAW,GAAK7b,KAAKse,YACvChe,SAAUN,KAAK6b,WAEnB3b,EAAA,OACIC,MAAO,CACH,sBAAuB,KACvB,gCAAiC,KACjC,2BAA4BH,KAAKue,SACjC,gCAAiCve,KAAK4a,mBACzC,eACa5a,KAAK8a,eAEnB5a,EAAA,OAAKC,MAAM,iCACVH,KAAKU,cACNR,EAAA,OAAKC,MAAM,mCAEdH,KAAKwe,oBACLxe,KAAK2a,8BACL3a,KAAKye,6BAEVze,KAAKib,mB,CAcLva,cACJ,MAAMge,EAAiB,CACnB,qBAAsB,KACtB,2BAA4B1e,KAAKM,UAAYN,KAAKK,SAClD,+BAAgCL,KAAKue,SACrC,mCAAoCve,KAAK4a,mBAG7C,IAAK5a,KAAK2D,MAAO,CACb,M,CAGJ,OACIzD,EAAA,OAAKC,MAAM,8BACPD,EAAA,SAAOC,MAAOue,EAAgBC,QAAQ,iBACjC3e,KAAK2D,O,CAgBdkY,SACJ,QAAS7b,KAAKkb,UAAYlb,KAAKkI,MAAMgP,QAAUlX,KAAKkb,Q,CAGhDG,YACJ,GAAIrb,KAAKM,SAAU,CAEf,OAAO,K,CAGX,GAAIN,KAAKob,QAAS,CACd,OAAO,I,CAGX,IAAKpb,KAAKue,SAAU,CAChB,OAAO,K,CAGX,IAAKve,KAAK4e,QAAS,CACf,OAAO,K,CAGX,OAAQ5e,KAAKkI,QAAUlI,KAAKkI,MAAMgP,M,CAG9BiF,mBAAmB3a,GACvBA,EAAMC,iB,CAMFua,uBACJ,GAAIhc,KAAKK,UAAYL,KAAKM,SAAU,CAChC,M,CAGJ,GAAIN,KAAK6a,SAAU,CACf,M,CAGJ7a,KAAK6a,SAAW,KAChB7a,KAAK0c,UAAU/a,M,CAOXsa,kBACJ,GAAIjc,KAAK6e,iBAAkB,CACvB7e,KAAK2c,gB,CAGT3c,KAAK6a,SAAW,MAChB7a,KAAK4e,QAAU,KACf5e,KAAKka,uBAAyB,KAG9BxG,YAAW,KACP1T,KAAK8e,SAASnd,MAAM,GACrB,E,CAGCgb,iBACJ3c,KAAK8Y,UAAY,E,CAGbsD,cACJ,GAAIpc,KAAK6a,SAAU,CACf,OAAO7a,KAAK6b,Q,CAMhB,SAAU7b,KAAKkI,OAASlI,KAAKkI,MAAMgP,O,CAG/BgF,gBAAgB1a,GACpBA,EAAMC,kBACNzB,KAAKka,uBAAyB,KAC9Bla,KAAK8Y,UAAYtX,EAAMP,OAAOiH,MAC9BlI,KAAKqd,MAAM1b,KAAKH,EAAMP,OAAOiH,OAAS1G,EAAMP,OAAOiH,MAAM6W,O,CAGrDjD,uBAAuBta,GAC3B,MAAMwW,EAAOhY,KAAKkI,MAAM8W,MAAMC,GACnB,GAAGA,EAAKhO,OAASzP,EAAMwO,OAAOkC,SAEzClS,KAAKma,gBAAgBnC,E,CAGjBmC,gBAAgBnC,GACpBhY,KAAKkf,SAASvd,KAAKqW,E,CAGf+D,gBAAgBva,GACpB,IAAIwW,EAAOhY,KAAKkI,MAAM8W,MAAMC,GACjB,GAAGA,EAAKhO,OAASzP,EAAMwO,OAAOkC,SAEzC8F,EAAIpT,OAAAua,OAAAva,OAAAua,OAAA,GAAQnH,GAAI,CAAE5K,SAAU5L,EAAMwO,OAAO5C,WACzCpN,KAAKwb,OAAO7Z,KAAKqW,E,CAGb0D,WAAW1D,GACf,MAAMoH,EACFpf,KAAK8c,OAAS,SAAW,SAAW,UAExC,MAAMuC,EAAYrf,KAAKsf,aAAatH,EAAMoH,GAE1C,OAAOlf,EAAA,aAAA0E,OAAAua,OAAA,GAAgBE,G,CAsBnBzD,gBAAgB5D,EAAYxC,GAChC,MAAM6J,EAAYrf,KAAKsf,aAAatH,EAAM,WAE1C,MAAO,CACH9X,EAAA,aAAA0E,OAAAua,OAAA,CACIhf,MAAO,CACH,iBAAkBH,KAAKka,yBAA2B1E,IAElD6J,EAAS,CACbpc,QAASjD,KAAKuf,qBACdC,SAAUxf,KAAKuP,WAAWyI,EAAK/G,OAEnCjR,KAAKsc,kB,CAWLgD,aAAatH,EAAYoH,GAC7B,MAAMxd,EACF5B,KAAK8c,OAAS,UACb9E,EAAKpW,YAAc5B,KAAKM,WAAaN,KAAKK,UAE/C,OAAAuE,OAAAua,OAAA,CACI/e,KAAM,MACN6Q,GAAI,GAAG+G,EAAK/G,KACZ9P,KAAM6W,EAAK7W,KACX+B,KAAM8U,EAAK9U,KACXE,MAAO4U,EAAK5U,MACZgK,SAAU4K,EAAK5K,SACf/M,SAAUL,KAAKK,SACfC,SAAUN,KAAKM,SACfwc,KAAMsC,EACNxd,UAAWA,GAEPoW,EAAKlX,MAAQ,CACbC,KAAM,CACFD,KAAM2e,EAAQzH,EAAKlX,MACnBG,OAAQye,EAAU1H,EAAKlX,Q,CAM/Bye,qBAAqB/d,GACzBA,EAAMC,iB,CAGF+c,oBACJ,IAAKxe,KAAKmR,YAAa,CACnB,M,CAGJ,OACIjR,EAAA,KAAGC,MAAM,oCACLD,EAAA,cAAYmD,KAAMrD,KAAKmR,c,CAK3BsN,4BACJ,GAAIze,KAAKK,UAAYL,KAAKM,WAAaN,KAAK8d,eAAgB,CACxD,M,CAGJ,OACI5d,EAAA,KACIY,KAAK,GACLmC,QAASjD,KAAKqc,yBACdlc,MAAM,wCACNe,SAAS,IACTd,KAAK,SACLY,MAAOhB,KAAKyb,qBAAoB,aACpBzb,KAAKyb,sB,CASrBY,yBAAyB7a,GAC7BA,EAAMF,iBACNtB,KAAKwb,OAAO7Z,KAAK,G,CAGb2a,kBACJ,IAAKtc,KAAK2f,UAAW,CACjB,M,CAGJ,OAAOzf,EAAA,OAAKC,MAAM,aAAaH,KAAK2f,U,CAGhC9C,wBAAwB3U,GAC5B,IAAK,MAAM8P,KAAQ9P,EAAO,CACtB,GACI8P,EAAK9U,OACJ8U,EAAK4H,eACF5H,EAAK6H,qBACL7H,EAAK8H,WACX,CAEEC,QAAQC,KACJ,oU"}