{"version":3,"names":["ListCheckboxIconsExample","constructor","hostRef","this","handleChange","event","selectedItems","detail","items","map","item","selected","find","selectedItem","value","Object","assign","text","icon","iconColor","disabled","filter","render","h","onChange","type"],"sources":["./src/components/list/examples/list-checkbox-icons.tsx"],"sourcesContent":["import { LimelListCustomEvent, ListItem } from '@limetech/lime-elements';\nimport { Component, h, State } from '@stencil/core';\n\n/**\n * List with checkboxes and icons\n */\n@Component({\n    tag: 'limel-example-list-checkbox-icons',\n    shadow: true,\n})\nexport class ListCheckboxIconsExample {\n    @State()\n    private items: ListItem[] = [\n        {\n            text: 'Pikachu',\n            value: 1,\n            selected: true,\n            icon: 'pokemon',\n            iconColor: 'var(--lime-yellow)',\n        },\n        {\n            text: 'Charmander',\n            value: 2,\n            selected: false,\n            disabled: true,\n            icon: 'fire_element',\n            iconColor: 'var(--lime-red)',\n        },\n        {\n            text: 'Super Mario',\n            value: 3,\n            selected: false,\n            icon: 'super_mario',\n            iconColor: 'var(--lime-deep-red)',\n        },\n        {\n            text: 'Yoshi',\n            value: 4,\n            selected: false,\n            disabled: true,\n            icon: 'easter_egg',\n            iconColor: 'var(--lime-green)',\n        },\n        {\n            text: 'Minion',\n            value: 6,\n            selected: true,\n            icon: 'minion_1',\n            iconColor: 'var(--lime-blue)',\n        },\n        {\n            text: 'PokÃ©ball',\n            value: 5,\n            selected: false,\n            icon: 'pokeball',\n            iconColor: 'var(--lime-magenta)',\n        },\n    ];\n\n    @State()\n    private selectedItems: ListItem[] = [];\n\n    constructor() {\n        this.selectedItems = this.items.filter((item) => {\n            return !!item.selected;\n        });\n    }\n\n    public render() {\n        return [\n            <limel-list\n                onChange={this.handleChange}\n                items={this.items}\n                type=\"checkbox\"\n            />,\n            <limel-example-value value={this.selectedItems} />,\n        ];\n    }\n\n    private handleChange = (event: LimelListCustomEvent<ListItem[]>) => {\n        this.selectedItems = event.detail;\n        this.items = this.items.map((item: ListItem) => {\n            const selected = !!event.detail.find((selectedItem: ListItem) => {\n                return selectedItem.value === item.value;\n            });\n\n            return { ...item, selected: selected };\n        });\n    };\n}\n"],"mappings":"qDAUaA,EAAwB,MAoDjCC,YAAAC,G,UAiBQC,KAAAC,aAAgBC,IACpBF,KAAKG,cAAgBD,EAAME,OAC3BJ,KAAKK,MAAQL,KAAKK,MAAMC,KAAKC,IACzB,MAAMC,IAAaN,EAAME,OAAOK,MAAMC,GAC3BA,EAAaC,QAAUJ,EAAKI,QAGvC,OAAAC,OAAAC,OAAAD,OAAAC,OAAA,GAAYN,GAAI,CAAEC,SAAUA,GAAQ,GACtC,E,WA3EsB,CACxB,CACIM,KAAM,UACNH,MAAO,EACPH,SAAU,KACVO,KAAM,UACNC,UAAW,sBAEf,CACIF,KAAM,aACNH,MAAO,EACPH,SAAU,MACVS,SAAU,KACVF,KAAM,eACNC,UAAW,mBAEf,CACIF,KAAM,cACNH,MAAO,EACPH,SAAU,MACVO,KAAM,cACNC,UAAW,wBAEf,CACIF,KAAM,QACNH,MAAO,EACPH,SAAU,MACVS,SAAU,KACVF,KAAM,aACNC,UAAW,qBAEf,CACIF,KAAM,SACNH,MAAO,EACPH,SAAU,KACVO,KAAM,WACNC,UAAW,oBAEf,CACIF,KAAM,WACNH,MAAO,EACPH,SAAU,MACVO,KAAM,WACNC,UAAW,wB,mBAKiB,GAGhChB,KAAKG,cAAgBH,KAAKK,MAAMa,QAAQX,KAC3BA,EAAKC,U,CAIfW,SACH,MAAO,CACHC,EAAA,cACIC,SAAUrB,KAAKC,aACfI,MAAOL,KAAKK,MACZiB,KAAK,aAETF,EAAA,uBAAqBT,MAAOX,KAAKG,gB"}