{"version":3,"names":["SnackbarPersistentNonDismissibleExample","constructor","hostRef","this","handleChange","event","stopPropagation","persistent","detail","triggerSnackbarWithAction","triggerSnackbar","bind","render","h","label","onClick","message","timeout","dismissible","style","value","onChange","selector","snackbar","host","shadowRoot","querySelector","show"],"sources":["./src/components/snackbar/examples/snackbar-persistent-non-dismissible.tsx"],"sourcesContent":["import { Component, Element, State, h } from '@stencil/core';\n\n/**\n * Persistent and non-dismissible\n * In some scenarios, a Snackbar that is persistent\n * can simultaneously be non-dismissible.\n *\n * This is good for handling cases in which the system tries to\n * communicate an ongoing background process or a status that the user\n * cannot take an action on, but should be kept informed about.\n *\n * In such cases, you should programmatically close the Snackbar\n * when the process is completed or the status changes!\n */\n@Component({\n    tag: 'limel-example-snackbar-persistent-non-dismissible',\n    shadow: true,\n})\nexport class SnackbarPersistentNonDismissibleExample {\n    @Element()\n    private host: HTMLLimelSnackbarElement;\n\n    private triggerSnackbarWithAction: (event: MouseEvent) => void;\n\n    @State()\n    private persistent: boolean = true;\n\n    constructor() {\n        this.triggerSnackbarWithAction = this.triggerSnackbar.bind(\n            this,\n            'limel-snackbar',\n        );\n    }\n\n    public render() {\n        return [\n            <limel-button\n                label=\"Show a persistent & non-dismissible alert\"\n                onClick={this.triggerSnackbarWithAction}\n            />,\n            <limel-snackbar\n                message=\"Your internet connection was lost! Hang on while we're trying to reconnectâ€¦\"\n                timeout={0}\n                dismissible={false}\n            />,\n            <limel-example-controls\n                style={{ '--example-controls-column-layout': 'auto-fit' }}\n            >\n                <limel-switch\n                    label=\"Toggle online status\"\n                    value={this.persistent}\n                    onChange={this.handleChange}\n                />\n            </limel-example-controls>,\n        ];\n    }\n\n    private triggerSnackbar(selector) {\n        const snackbar: HTMLLimelSnackbarElement =\n            this.host.shadowRoot.querySelector(selector);\n        snackbar.show();\n    }\n\n    private handleChange = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.persistent = event.detail;\n    };\n}\n"],"mappings":"4DAkBaA,EAAuC,MAShDC,YAAAC,G,UAoCQC,KAAAC,aAAgBC,IACpBA,EAAMC,kBACNH,KAAKI,WAAaF,EAAMG,MAAM,E,gBAxCJ,KAG1BL,KAAKM,0BAA4BN,KAAKO,gBAAgBC,KAClDR,KACA,iB,CAIDS,SACH,MAAO,CACHC,EAAA,gBACIC,MAAM,4CACNC,QAASZ,KAAKM,4BAElBI,EAAA,kBACIG,QAAQ,8EACRC,QAAS,EACTC,YAAa,QAEjBL,EAAA,0BACIM,MAAO,CAAE,mCAAoC,aAE7CN,EAAA,gBACIC,MAAM,uBACNM,MAAOjB,KAAKI,WACZc,SAAUlB,KAAKC,gB,CAMvBM,gBAAgBY,GACpB,MAAMC,EACFpB,KAAKqB,KAAKC,WAAWC,cAAcJ,GACvCC,EAASI,M"}