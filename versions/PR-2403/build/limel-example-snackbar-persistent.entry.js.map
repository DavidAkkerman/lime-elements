{"version":3,"names":["SnackbarPersistentExample","constructor","hostRef","this","triggerSnackbarWithAction","triggerSnackbar","bind","render","h","label","onClick","message","actionText","timeout","onAction","snackbarOnAction","selector","snackbar","host","shadowRoot","querySelector","show","console","log"],"sources":["./src/components/snackbar/examples/snackbar-persistent.tsx"],"sourcesContent":["import { Component, Element, h } from '@stencil/core';\n\n/**\n * Persistent\n * Dismissive Snackbars appear temporarily, and disappear automatically\n * without requiring users to manually dismiss them.\n * However, sometimes you may need to display a Snackbar\n * which keeps being displayed persistently until the user deliberately takes\n * an action or clicks the dismiss button. This could be to ensure that\n *\n * - the user actually reads message that is being displayed.\n * - has time to take an informed decision to press the action button.\n *\n * To make a Snackbar persistent, set the `timeout` property to `0`.\n */\n@Component({\n    tag: 'limel-example-snackbar-persistent',\n    shadow: true,\n})\nexport class SnackbarPersistentExample {\n    @Element()\n    private host: HTMLLimelSnackbarElement;\n\n    private triggerSnackbarWithAction: (event: MouseEvent) => void;\n\n    constructor() {\n        this.triggerSnackbarWithAction = this.triggerSnackbar.bind(\n            this,\n            'limel-snackbar',\n        );\n    }\n\n    public render() {\n        return [\n            <limel-button\n                label=\"Show a persistent alert\"\n                onClick={this.triggerSnackbarWithAction}\n            />,\n            <limel-snackbar\n                message=\"We use cookies to deliver services and analyze traffic.\"\n                actionText=\"Okay, I got it!\"\n                timeout={0}\n                onAction={this.snackbarOnAction}\n            />,\n        ];\n    }\n\n    private triggerSnackbar(selector) {\n        const snackbar: HTMLLimelSnackbarElement =\n            this.host.shadowRoot.querySelector(selector);\n        snackbar.show();\n    }\n\n    private snackbarOnAction() {\n        console.log(\n            'Great! You have just agreed with our terms & conditions without reading it.',\n        );\n    }\n}\n"],"mappings":"4DAmBaA,EAAyB,MAMlCC,YAAAC,G,UACIC,KAAKC,0BAA4BD,KAAKE,gBAAgBC,KAClDH,KACA,iB,CAIDI,SACH,MAAO,CACHC,EAAA,gBACIC,MAAM,0BACNC,QAASP,KAAKC,4BAElBI,EAAA,kBACIG,QAAQ,0DACRC,WAAW,kBACXC,QAAS,EACTC,SAAUX,KAAKY,mB,CAKnBV,gBAAgBW,GACpB,MAAMC,EACFd,KAAKe,KAAKC,WAAWC,cAAcJ,GACvCC,EAASI,M,CAGLN,mBACJO,QAAQC,IACJ,8E"}