{"version":3,"names":["set","object","path","value","baseSet","getFullConfig","versions","version","configs","config","i","route","getRoute","configSelector","selector","split","LineType","OutputFormatType","LINE_BY_LINE","SIDE_BY_SIDE","LineMatchingType","LINES","WORDS","NONE","DiffStyleType","WORD","CHAR","specials","regex","RegExp","join","escapeForRegExp","str","replace","unifyPath","hashCode","text","chr","len","hash","length","charCodeAt","getExtension","filename","language","filenameParts","startsWithAny","prefixes","reduce","startsWith","prefix","baseDiffFilenamePrefixes","getFilename","line","linePrefix","extraPrefix","undefined","FilenameRegExp","exec","matchingPrefix","find","p","indexOf","fnameWithoutPrefix","slice","getSrcFilename","srcPrefix","getDstFilename","dstPrefix","parse","diffInput","files","currentFile","currentBlock","oldLine","oldLine2","newLine","possibleOldName","possibleNewName","oldFileNameHeader","newFileNameHeader","hunkHeaderPrefix","oldMode","newMode","deletedFileMode","newFileMode","copyFrom","copyTo","renameFrom","renameTo","similarityIndex","dissimilarityIndex","index","binaryFiles","binaryDiff","combinedIndex","combinedMode","combinedNewFile","combinedDeletedFile","diffLines","saveBlock","blocks","push","saveFile","oldName","newName","startFile","deletedLines","addedLines","startBlock","values","isCombined","parseInt","console","error","lines","oldStartLine","oldStartLine2","newStartLine","header","createLine","currentLine","content","addedPrefixes","deletedPrefixes","type","INSERT","oldNumber","newNumber","DELETE","CONTEXT","existHunkHeader","lineIdx","idx","forEach","lineIndex","prevLine","nxtLine","afterNxtLine","gitDiffStart","Error","isGitDiff","unixDiffBinaryStart","isBinary","isTooBig","diffMaxChanges","diffMaxLineLength","message","diffTooBigMessage","doesNotExistHunkHeader","isDeleted","isNew","isCopy","isRename","test","unchangedPercentage","changedPercentage","checksumBefore","checksumAfter","mode","global","factory","exports","this","Diff","prototype","diff","oldString","newString","options","arguments","callback","self","done","setTimeout","castInput","removeEmpty","tokenize","newLen","oldLen","editLength","maxEditLength","Math","min","bestPath","newPos","components","oldPos","extractCommon","count","execEditLength","diagonalPath","basePath","addPath","removePath","_oldPos","canAdd","canRemove","clonePath","pushComponent","buildValues","useLongestToken","ret","added","removed","last","commonCount","equals","left","right","comparator","ignoreCase","toLowerCase","array","chars","componentPos","componentLen","component","map","oldValue","tmp","lastComponent","pop","characterDiff","diffChars","oldStr","newStr","generateOptions","defaults","name","hasOwnProperty","extendedWordChars","reWhitespace","wordDiff","ignoreWhitespace","tokens","splice","diffWords","diffWordsWithSpace","lineDiff","retLines","linesAndNewlines","newlineIsToken","trim","diffTrimmedLines","sentenceDiff","diffSentences","cssDiff","diffCss","_typeof","obj","Symbol","iterator","constructor","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Object","from","o","minLen","n","toString","call","arr2","TypeError","objectPrototypeToString","jsonDiff","_this$options","undefinedReplacement","_this$options$stringi","stringifyReplacer","k","v","JSON","stringify","canonicalize","diffJson","oldObj","newObj","stack","replacementStack","replacer","key","canonicalizedObj","toJSON","sortedKeys","_key","sort","arrayDiff","diffArrays","oldArr","newArr","parsePatch","uniDiff","diffstr","delimiters","match","list","parseIndex","parseFileHeader","hunks","_line","parseHunk","strict","fileHeader","keyPrefix","data","fileName","substr","chunkHeaderIndex","chunkHeaderLine","chunkHeader","hunk","oldStart","oldLines","newStart","newLines","linedelimiters","addCount","removeCount","operation","distanceIterator","start","minLine","maxLine","wantForward","backwardExhausted","forwardExhausted","localOffset","applyPatch","source","compareLine","lineNumber","patchContent","errorCount","fuzzFactor","offset","removeEOFNL","addEOFNL","hunkFits","toPos","j","diffOffset","_i","_hunk","_toPos","delimiter","previousOperation","_k","applyPatches","currentIndex","processIndex","complete","loadFile","err","updatedContent","patched","structuredPatch","oldFileName","newFileName","oldHeader","newHeader","context","contextLines","entry","oldRangeStart","newRangeStart","curRange","_loop","current","_curRange","prev","apply","_curRange2","_curRange3","contextSize","oldEOFNewline","newEOFNewline","noNlBeforeAdds","formatPatch","createTwoFilesPatch","createPatch","arrayEqual","a","b","arrayStartsWith","calcLineCount","_calcOldNewLineCount","calcOldNewLineCount","merge","mine","theirs","base","loadPatch","fileNameChanged","selectField","mineIndex","theirsIndex","mineOffset","theirsOffset","mineCurrent","Infinity","theirsCurrent","hunkBefore","cloneHunk","mergedHunk","mergeLines","param","patch","conflict","check","mineLines","theirOffset","theirLines","their","insertLeading","theirCurrent","mutualChange","_hunk$lines","collectChange","_hunk$lines2","removal","insertTrailing","myChanges","theirChanges","allRemoves","skipRemoveSuperset","_hunk$lines3","_hunk$lines4","_hunk$lines5","swap","collectContext","merged","_hunk$lines6","insert","state","matchChanges","changes","matchIndex","contextChanges","conflicted","change","removeChanges","delta","changeContent","myCount","theirCount","convertChangesToDMP","convertChangesToXML","escapeHTML","s","defineProperty","levenshtein","matrix","charAt","newDistanceFn","x","y","xValue","yValue","lev","newMatcherFn","distance","findBestMatch","cache","Map","bestMatchDist","bestMatch","cacheKey","md","has","get","indexA","indexB","score","group","level","bm","a1","b1","aMatch","bMatch","tailA","tailB","a2","b2","group1","groupMatch","group2","result","concat","CSSLineClass","INSERTS","DELETES","INFO","INSERT_CHANGES","DELETE_CHANGES","defaultRenderConfig","matching","matchWordsThreshold","maxLineLengthHighlight","diffStyle","separator","rematch.newDistanceFn","matcher","rematch.newMatcherFn","isDevNullName","removeInsElements","removeDelElements","toCSSClass","lineType","prefixLength","escapeForHtml","deconstructLine","escape","indexToSplit","substring","filenameDiff","file","oldFilename","newFilename","prefixPaths","suffixPaths","oldFilenameParts","newFilenameParts","oldFilenamePartsSize","newFilenamePartsSize","unshift","finalPrefix","finalSuffix","oldRemainingPath","newRemainingPath","getHtmlId","getFileIcon","templateName","diffHighlight","diffLine1","diffLine2","assign","line1","line2","jsDiff.diffChars","jsDiff.diffWordsWithSpace","changedWords","filter","element","chunks","chunk","dist","highlightedLine","part","elemType","addClass","escapedValue","baseTemplatesPath","iconsBaseTemplatesPath","render","diffFiles","hoganUtils","fileHtmlId","renderUtils.getHtmlId","renderUtils.filenameDiff","fileIcon","template","renderUtils.getFileIcon","filesNumber","defaultLineByLineRendererConfig","renderUtils.defaultRenderConfig","renderNothingWhenEmpty","matchingMaxComparisons","maxLineSizeInBlockForComparison","genericTemplatesPath","tagsBaseTemplatesPath","LineByLineRenderer","diffsHtml","diffs","generateFileHtml","generateEmptyDiff","makeFileDiffHtml","fileDiffTemplate","filePathTemplate","fileIconTemplate","fileTagTemplate","filePath","fileDiffName","fileTag","contentClass","renderUtils.CSSLineClass","Rematch.newMatcherFn","Rematch.newDistanceFn","e","renderUtils.deconstructLine","block","blockHeader","renderUtils.escapeForHtml","lineClass","applyLineGroupping","applyRematchMatching","processChangedLines","generateSingleLineHtml","blockLinesGroups","diffLine","comparisons","maxLineSizeInBlock","max","elem","doMatching","fileHtml","maxLinesNumber","renderUtils.diffHighlight","preparedOldLine","renderUtils.toCSSClass","preparedNewLine","generateLineHtml","lineNumberHtml","defaultSideBySideRendererConfig","SideBySideRenderer","makeHeaderHtml","number","accomulated","html","generateSingleHtml","Hogan","rIsWhitespace","rQuot","rNewline","rCr","rSlash","rLineSep","rParagraphSep","tags","$","_v","_t","scan","IN_TEXT","IN_TAG_TYPE","IN_TAG","tagType","tag","buf","seenTag","lineStart","otag","ctag","addBuf","String","lineIsWhitespace","isAllWhitespace","filterLine","haveSeenTag","noNewLine","next","indent","changeDelimiters","close","closeIndex","tagChange","cleanTripleStache","token","l","allowedInSuper","buildTree","kind","customTags","instructions","opener","tail","shift","isOpener","nodes","isCloser","end","open","c","stringifySubstitutions","items","esc","stringifyPartials","codeObj","partials","subs","wrapMain","code","serialNo","generate","tree","walk","asString","makeTemplate","Template","makePartials","Function","chooseMethod","createPartial","node","sym","codegen","ctx","inPartial","write","tripleStache","nodelist","func","sectionTags","disableLambda","modelGet","compile","instance","compiler","r","hoganEscape","t","coerceToString","ri","ep","symbol","partial","stackText","activeSub","createSpecializedPartial","stackSubs","stackPartials","rp","rs","section","val","inverted","pass","ms","d","returnFound","found","names","f","doModelGet","cx","findInScope","mv","ls","oldTags","ct","fl","textSource","subsText","sub","scope","PartialTemplate","Substitutions","rAmp","rLt","rGt","rApos","hChars","require$$0","hogan","defaultTemplates","Hogan.Template","HoganJsUtils","compiledTemplates","rawTemplates","compiledRawTemplates","entries","previousTemplates","templateString","compiledTemplate","Hogan.compile","preCompiledTemplates","static","namespace","view","params","templateKey","defaultDiff2HtmlConfig","outputFormat","drawFileList","configuration","DiffParser.parse","fileList","fileListPrinter.render","diffOutput","_base","_interopRequireDefault","__esModule","default","_params","_default","_distanceIterator","_parse","_create","_array","enumerable","_character","_word","_sentence","_css","_json","_apply","_merge","_dmp","_xml","codeDiffCss","CodeDiff","defaultRenderOptions","selectedVersion","handleSelect","event","stopPropagation","Number","detail","updateItems","renderComparison","getComparisonHtml","getVersion","getLatestVersion","componentWillLoad","localStorage","getItem","matchConfigSelector","_","id","selected","isSelected","h","onSelect","label","slot","class","single","innerHTML","item","itemCopy","configPath","versionBefore","versionAfter","jsonBefore","jsonAfter","titleBefore","titleAfter","defaultIndent","contentBefore","contentAfter","reformatJson","renderOptions","diffArray","diff2html"],"sources":["./node_modules/lodash-es/set.js","./src/components/code-diff/getDelta.js","./node_modules/diff2html/lib-esm/types.js","./node_modules/diff2html/lib-esm/utils.js","./node_modules/diff2html/lib-esm/diff-parser.js","./node_modules/diff/dist/diff.js","./node_modules/diff2html/lib-esm/rematch.js","./node_modules/diff2html/lib-esm/render-utils.js","./node_modules/diff2html/lib-esm/file-list-renderer.js","./node_modules/diff2html/lib-esm/line-by-line-renderer.js","./node_modules/diff2html/lib-esm/side-by-side-renderer.js","./node_modules/hogan.js/lib/compiler.js","./node_modules/hogan.js/lib/template.js","./node_modules/hogan.js/lib/hogan.js","./node_modules/diff2html/lib-esm/diff2html-templates.js","./node_modules/diff2html/lib-esm/hoganjs-utils.js","./node_modules/diff2html/lib-esm/diff2html.js","./node_modules/diff/lib/diff/base.js","./node_modules/diff/lib/diff/character.js","./node_modules/diff/lib/util/params.js","./node_modules/diff/lib/diff/word.js","./node_modules/diff/lib/diff/line.js","./node_modules/diff/lib/diff/sentence.js","./node_modules/diff/lib/diff/css.js","./node_modules/diff/lib/diff/json.js","./node_modules/diff/lib/diff/array.js","./node_modules/diff/lib/patch/parse.js","./node_modules/diff/lib/util/distance-iterator.js","./node_modules/diff/lib/patch/apply.js","./node_modules/diff/lib/patch/create.js","./node_modules/diff/lib/util/array.js","./node_modules/diff/lib/patch/merge.js","./node_modules/diff/lib/convert/dmp.js","./node_modules/diff/lib/convert/xml.js","./node_modules/diff/lib/index.js","./src/components/code-diff/code-diff.scss?tag=limel-code-diff&encapsulation=shadow","./src/components/code-diff/code-diff.tsx"],"sourcesContent":["import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n","import { set } from 'lodash-es';\n\nexport function getFullConfig(versions, version) {\n    const configs = versions;\n\n    const config = {};\n    // eslint-disable-next-line guard-for-in\n    for (const i in configs) {\n        const route = getRoute(configs[i].configSelector);\n\n        set(config, route, configs[i].config);\n\n        if (configs[i].version >= version) {\n            break;\n        }\n    }\n\n    return config;\n}\n\nfunction getRoute(selector) {\n    return selector.split('/');\n}\n","export var LineType;\n(function (LineType) {\n    LineType[\"INSERT\"] = \"insert\";\n    LineType[\"DELETE\"] = \"delete\";\n    LineType[\"CONTEXT\"] = \"context\";\n})(LineType || (LineType = {}));\nexport const OutputFormatType = {\n    LINE_BY_LINE: 'line-by-line',\n    SIDE_BY_SIDE: 'side-by-side',\n};\nexport const LineMatchingType = {\n    LINES: 'lines',\n    WORDS: 'words',\n    NONE: 'none',\n};\nexport const DiffStyleType = {\n    WORD: 'word',\n    CHAR: 'char',\n};\n//# sourceMappingURL=types.js.map","const specials = [\n    '-',\n    '[',\n    ']',\n    '/',\n    '{',\n    '}',\n    '(',\n    ')',\n    '*',\n    '+',\n    '?',\n    '.',\n    '\\\\',\n    '^',\n    '$',\n    '|',\n];\nconst regex = RegExp('[' + specials.join('\\\\') + ']', 'g');\nexport function escapeForRegExp(str) {\n    return str.replace(regex, '\\\\$&');\n}\nexport function unifyPath(path) {\n    return path ? path.replace(/\\\\/g, '/') : path;\n}\nexport function hashCode(text) {\n    let i, chr, len;\n    let hash = 0;\n    for (i = 0, len = text.length; i < len; i++) {\n        chr = text.charCodeAt(i);\n        hash = (hash << 5) - hash + chr;\n        hash |= 0;\n    }\n    return hash;\n}\n//# sourceMappingURL=utils.js.map","import { LineType } from './types';\nimport { escapeForRegExp } from './utils';\nfunction getExtension(filename, language) {\n    const filenameParts = filename.split('.');\n    return filenameParts.length > 1 ? filenameParts[filenameParts.length - 1] : language;\n}\nfunction startsWithAny(str, prefixes) {\n    return prefixes.reduce((startsWith, prefix) => startsWith || str.startsWith(prefix), false);\n}\nconst baseDiffFilenamePrefixes = ['a/', 'b/', 'i/', 'w/', 'c/', 'o/'];\nfunction getFilename(line, linePrefix, extraPrefix) {\n    const prefixes = extraPrefix !== undefined ? [...baseDiffFilenamePrefixes, extraPrefix] : baseDiffFilenamePrefixes;\n    const FilenameRegExp = linePrefix\n        ? new RegExp(`^${escapeForRegExp(linePrefix)} \"?(.+?)\"?$`)\n        : new RegExp('^\"?(.+?)\"?$');\n    const [, filename = ''] = FilenameRegExp.exec(line) || [];\n    const matchingPrefix = prefixes.find(p => filename.indexOf(p) === 0);\n    const fnameWithoutPrefix = matchingPrefix ? filename.slice(matchingPrefix.length) : filename;\n    return fnameWithoutPrefix.replace(/\\s+\\d{4}-\\d{2}-\\d{2} \\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)? [+-]\\d{4}.*$/, '');\n}\nfunction getSrcFilename(line, srcPrefix) {\n    return getFilename(line, '---', srcPrefix);\n}\nfunction getDstFilename(line, dstPrefix) {\n    return getFilename(line, '+++', dstPrefix);\n}\nexport function parse(diffInput, config = {}) {\n    const files = [];\n    let currentFile = null;\n    let currentBlock = null;\n    let oldLine = null;\n    let oldLine2 = null;\n    let newLine = null;\n    let possibleOldName = null;\n    let possibleNewName = null;\n    const oldFileNameHeader = '--- ';\n    const newFileNameHeader = '+++ ';\n    const hunkHeaderPrefix = '@@';\n    const oldMode = /^old mode (\\d{6})/;\n    const newMode = /^new mode (\\d{6})/;\n    const deletedFileMode = /^deleted file mode (\\d{6})/;\n    const newFileMode = /^new file mode (\\d{6})/;\n    const copyFrom = /^copy from \"?(.+)\"?/;\n    const copyTo = /^copy to \"?(.+)\"?/;\n    const renameFrom = /^rename from \"?(.+)\"?/;\n    const renameTo = /^rename to \"?(.+)\"?/;\n    const similarityIndex = /^similarity index (\\d+)%/;\n    const dissimilarityIndex = /^dissimilarity index (\\d+)%/;\n    const index = /^index ([\\da-z]+)\\.\\.([\\da-z]+)\\s*(\\d{6})?/;\n    const binaryFiles = /^Binary files (.*) and (.*) differ/;\n    const binaryDiff = /^GIT binary patch/;\n    const combinedIndex = /^index ([\\da-z]+),([\\da-z]+)\\.\\.([\\da-z]+)/;\n    const combinedMode = /^mode (\\d{6}),(\\d{6})\\.\\.(\\d{6})/;\n    const combinedNewFile = /^new file mode (\\d{6})/;\n    const combinedDeletedFile = /^deleted file mode (\\d{6}),(\\d{6})/;\n    const diffLines = diffInput\n        .replace(/\\\\ No newline at end of file/g, '')\n        .replace(/\\r\\n?/g, '\\n')\n        .split('\\n');\n    function saveBlock() {\n        if (currentBlock !== null && currentFile !== null) {\n            currentFile.blocks.push(currentBlock);\n            currentBlock = null;\n        }\n    }\n    function saveFile() {\n        if (currentFile !== null) {\n            if (!currentFile.oldName && possibleOldName !== null) {\n                currentFile.oldName = possibleOldName;\n            }\n            if (!currentFile.newName && possibleNewName !== null) {\n                currentFile.newName = possibleNewName;\n            }\n            if (currentFile.newName) {\n                files.push(currentFile);\n                currentFile = null;\n            }\n        }\n        possibleOldName = null;\n        possibleNewName = null;\n    }\n    function startFile() {\n        saveBlock();\n        saveFile();\n        currentFile = {\n            blocks: [],\n            deletedLines: 0,\n            addedLines: 0,\n        };\n    }\n    function startBlock(line) {\n        saveBlock();\n        let values;\n        if (currentFile !== null) {\n            if ((values = /^@@ -(\\d+)(?:,\\d+)? \\+(\\d+)(?:,\\d+)? @@.*/.exec(line))) {\n                currentFile.isCombined = false;\n                oldLine = parseInt(values[1], 10);\n                newLine = parseInt(values[2], 10);\n            }\n            else if ((values = /^@@@ -(\\d+)(?:,\\d+)? -(\\d+)(?:,\\d+)? \\+(\\d+)(?:,\\d+)? @@@.*/.exec(line))) {\n                currentFile.isCombined = true;\n                oldLine = parseInt(values[1], 10);\n                oldLine2 = parseInt(values[2], 10);\n                newLine = parseInt(values[3], 10);\n            }\n            else {\n                if (line.startsWith(hunkHeaderPrefix)) {\n                    console.error('Failed to parse lines, starting in 0!');\n                }\n                oldLine = 0;\n                newLine = 0;\n                currentFile.isCombined = false;\n            }\n        }\n        currentBlock = {\n            lines: [],\n            oldStartLine: oldLine,\n            oldStartLine2: oldLine2,\n            newStartLine: newLine,\n            header: line,\n        };\n    }\n    function createLine(line) {\n        if (currentFile === null || currentBlock === null || oldLine === null || newLine === null)\n            return;\n        const currentLine = {\n            content: line,\n        };\n        const addedPrefixes = currentFile.isCombined ? ['+ ', ' +', '++'] : ['+'];\n        const deletedPrefixes = currentFile.isCombined ? ['- ', ' -', '--'] : ['-'];\n        if (startsWithAny(line, addedPrefixes)) {\n            currentFile.addedLines++;\n            currentLine.type = LineType.INSERT;\n            currentLine.oldNumber = undefined;\n            currentLine.newNumber = newLine++;\n        }\n        else if (startsWithAny(line, deletedPrefixes)) {\n            currentFile.deletedLines++;\n            currentLine.type = LineType.DELETE;\n            currentLine.oldNumber = oldLine++;\n            currentLine.newNumber = undefined;\n        }\n        else {\n            currentLine.type = LineType.CONTEXT;\n            currentLine.oldNumber = oldLine++;\n            currentLine.newNumber = newLine++;\n        }\n        currentBlock.lines.push(currentLine);\n    }\n    function existHunkHeader(line, lineIdx) {\n        let idx = lineIdx;\n        while (idx < diffLines.length - 3) {\n            if (line.startsWith('diff')) {\n                return false;\n            }\n            if (diffLines[idx].startsWith(oldFileNameHeader) &&\n                diffLines[idx + 1].startsWith(newFileNameHeader) &&\n                diffLines[idx + 2].startsWith(hunkHeaderPrefix)) {\n                return true;\n            }\n            idx++;\n        }\n        return false;\n    }\n    diffLines.forEach((line, lineIndex) => {\n        if (!line || line.startsWith('*')) {\n            return;\n        }\n        let values;\n        const prevLine = diffLines[lineIndex - 1];\n        const nxtLine = diffLines[lineIndex + 1];\n        const afterNxtLine = diffLines[lineIndex + 2];\n        if (line.startsWith('diff --git') || line.startsWith('diff --combined')) {\n            startFile();\n            const gitDiffStart = /^diff --git \"?([a-ciow]\\/.+)\"? \"?([a-ciow]\\/.+)\"?/;\n            if ((values = gitDiffStart.exec(line))) {\n                possibleOldName = getFilename(values[1], undefined, config.dstPrefix);\n                possibleNewName = getFilename(values[2], undefined, config.srcPrefix);\n            }\n            if (currentFile === null) {\n                throw new Error('Where is my file !!!');\n            }\n            currentFile.isGitDiff = true;\n            return;\n        }\n        if (line.startsWith('Binary files') && !(currentFile === null || currentFile === void 0 ? void 0 : currentFile.isGitDiff)) {\n            startFile();\n            const unixDiffBinaryStart = /^Binary files \"?([a-ciow]\\/.+)\"? and \"?([a-ciow]\\/.+)\"? differ/;\n            if ((values = unixDiffBinaryStart.exec(line))) {\n                possibleOldName = getFilename(values[1], undefined, config.dstPrefix);\n                possibleNewName = getFilename(values[2], undefined, config.srcPrefix);\n            }\n            if (currentFile === null) {\n                throw new Error('Where is my file !!!');\n            }\n            currentFile.isBinary = true;\n            return;\n        }\n        if (!currentFile ||\n            (!currentFile.isGitDiff &&\n                currentFile &&\n                line.startsWith(oldFileNameHeader) &&\n                nxtLine.startsWith(newFileNameHeader) &&\n                afterNxtLine.startsWith(hunkHeaderPrefix))) {\n            startFile();\n        }\n        if (currentFile === null || currentFile === void 0 ? void 0 : currentFile.isTooBig) {\n            return;\n        }\n        if (currentFile &&\n            ((typeof config.diffMaxChanges === 'number' &&\n                currentFile.addedLines + currentFile.deletedLines > config.diffMaxChanges) ||\n                (typeof config.diffMaxLineLength === 'number' && line.length > config.diffMaxLineLength))) {\n            currentFile.isTooBig = true;\n            currentFile.addedLines = 0;\n            currentFile.deletedLines = 0;\n            currentFile.blocks = [];\n            currentBlock = null;\n            const message = typeof config.diffTooBigMessage === 'function'\n                ? config.diffTooBigMessage(files.length)\n                : 'Diff too big to be displayed';\n            startBlock(message);\n            return;\n        }\n        if ((line.startsWith(oldFileNameHeader) && nxtLine.startsWith(newFileNameHeader)) ||\n            (line.startsWith(newFileNameHeader) && prevLine.startsWith(oldFileNameHeader))) {\n            if (currentFile &&\n                !currentFile.oldName &&\n                line.startsWith('--- ') &&\n                (values = getSrcFilename(line, config.srcPrefix))) {\n                currentFile.oldName = values;\n                currentFile.language = getExtension(currentFile.oldName, currentFile.language);\n                return;\n            }\n            if (currentFile &&\n                !currentFile.newName &&\n                line.startsWith('+++ ') &&\n                (values = getDstFilename(line, config.dstPrefix))) {\n                currentFile.newName = values;\n                currentFile.language = getExtension(currentFile.newName, currentFile.language);\n                return;\n            }\n        }\n        if (currentFile &&\n            (line.startsWith(hunkHeaderPrefix) ||\n                (currentFile.isGitDiff && currentFile.oldName && currentFile.newName && !currentBlock))) {\n            startBlock(line);\n            return;\n        }\n        if (currentBlock && (line.startsWith('+') || line.startsWith('-') || line.startsWith(' '))) {\n            createLine(line);\n            return;\n        }\n        const doesNotExistHunkHeader = !existHunkHeader(line, lineIndex);\n        if (currentFile === null) {\n            throw new Error('Where is my file !!!');\n        }\n        if ((values = oldMode.exec(line))) {\n            currentFile.oldMode = values[1];\n        }\n        else if ((values = newMode.exec(line))) {\n            currentFile.newMode = values[1];\n        }\n        else if ((values = deletedFileMode.exec(line))) {\n            currentFile.deletedFileMode = values[1];\n            currentFile.isDeleted = true;\n        }\n        else if ((values = newFileMode.exec(line))) {\n            currentFile.newFileMode = values[1];\n            currentFile.isNew = true;\n        }\n        else if ((values = copyFrom.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.oldName = values[1];\n            }\n            currentFile.isCopy = true;\n        }\n        else if ((values = copyTo.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.newName = values[1];\n            }\n            currentFile.isCopy = true;\n        }\n        else if ((values = renameFrom.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.oldName = values[1];\n            }\n            currentFile.isRename = true;\n        }\n        else if ((values = renameTo.exec(line))) {\n            if (doesNotExistHunkHeader) {\n                currentFile.newName = values[1];\n            }\n            currentFile.isRename = true;\n        }\n        else if ((values = binaryFiles.exec(line))) {\n            currentFile.isBinary = true;\n            currentFile.oldName = getFilename(values[1], undefined, config.srcPrefix);\n            currentFile.newName = getFilename(values[2], undefined, config.dstPrefix);\n            startBlock('Binary file');\n        }\n        else if (binaryDiff.test(line)) {\n            currentFile.isBinary = true;\n            startBlock(line);\n        }\n        else if ((values = similarityIndex.exec(line))) {\n            currentFile.unchangedPercentage = parseInt(values[1], 10);\n        }\n        else if ((values = dissimilarityIndex.exec(line))) {\n            currentFile.changedPercentage = parseInt(values[1], 10);\n        }\n        else if ((values = index.exec(line))) {\n            currentFile.checksumBefore = values[1];\n            currentFile.checksumAfter = values[2];\n            values[3] && (currentFile.mode = values[3]);\n        }\n        else if ((values = combinedIndex.exec(line))) {\n            currentFile.checksumBefore = [values[2], values[3]];\n            currentFile.checksumAfter = values[1];\n        }\n        else if ((values = combinedMode.exec(line))) {\n            currentFile.oldMode = [values[2], values[3]];\n            currentFile.newMode = values[1];\n        }\n        else if ((values = combinedNewFile.exec(line))) {\n            currentFile.newFileMode = values[1];\n            currentFile.isNew = true;\n        }\n        else if ((values = combinedDeletedFile.exec(line))) {\n            currentFile.deletedFileMode = values[1];\n            currentFile.isDeleted = true;\n        }\n    });\n    saveBlock();\n    saveFile();\n    return files;\n}\n//# sourceMappingURL=diff-parser.js.map","/*!\n\n diff v5.1.0\n\nSoftware License Agreement (BSD License)\n\nCopyright (c) 2009-2015, Kevin Decker <kpdecker@gmail.com>\n\nAll rights reserved.\n\nRedistribution and use of this software in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above\n  copyright notice, this list of conditions and the\n  following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the\n  following disclaimer in the documentation and/or other\n  materials provided with the distribution.\n\n* Neither the name of Kevin Decker nor the names of its\n  contributors may be used to endorse or promote products\n  derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER\nIN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\nOF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n@license\n*/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.Diff = {}));\n}(this, (function (exports) { 'use strict';\n\n  function Diff() {}\n  Diff.prototype = {\n    diff: function diff(oldString, newString) {\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var callback = options.callback;\n\n      if (typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n\n      this.options = options;\n      var self = this;\n\n      function done(value) {\n        if (callback) {\n          setTimeout(function () {\n            callback(undefined, value);\n          }, 0);\n          return true;\n        } else {\n          return value;\n        }\n      } // Allow subclasses to massage the input prior to running\n\n\n      oldString = this.castInput(oldString);\n      newString = this.castInput(newString);\n      oldString = this.removeEmpty(this.tokenize(oldString));\n      newString = this.removeEmpty(this.tokenize(newString));\n      var newLen = newString.length,\n          oldLen = oldString.length;\n      var editLength = 1;\n      var maxEditLength = newLen + oldLen;\n\n      if (options.maxEditLength) {\n        maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n      }\n\n      var bestPath = [{\n        newPos: -1,\n        components: []\n      }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n      var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n      if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n        // Identity per the equality and tokenizer\n        return done([{\n          value: this.join(newString),\n          count: newString.length\n        }]);\n      } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n      function execEditLength() {\n        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n          var basePath = void 0;\n\n          var addPath = bestPath[diagonalPath - 1],\n              removePath = bestPath[diagonalPath + 1],\n              _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n          if (addPath) {\n            // No one else is going to attempt to use this value, clear it\n            bestPath[diagonalPath - 1] = undefined;\n          }\n\n          var canAdd = addPath && addPath.newPos + 1 < newLen,\n              canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n          if (!canAdd && !canRemove) {\n            // If this path is a terminal then prune\n            bestPath[diagonalPath] = undefined;\n            continue;\n          } // Select the diagonal that we want to branch from. We select the prior\n          // path whose position in the new string is the farthest from the origin\n          // and does not pass the bounds of the diff graph\n\n\n          if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n            basePath = clonePath(removePath);\n            self.pushComponent(basePath.components, undefined, true);\n          } else {\n            basePath = addPath; // No need to clone, we've pulled it from the list\n\n            basePath.newPos++;\n            self.pushComponent(basePath.components, true, undefined);\n          }\n\n          _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n          if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n            return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n          } else {\n            // Otherwise track this path as a potential candidate and continue.\n            bestPath[diagonalPath] = basePath;\n          }\n        }\n\n        editLength++;\n      } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n      // sync and async mode which is never fun. Loops over execEditLength until a value\n      // is produced, or until the edit length exceeds options.maxEditLength (if given),\n      // in which case it will return undefined.\n\n\n      if (callback) {\n        (function exec() {\n          setTimeout(function () {\n            if (editLength > maxEditLength) {\n              return callback();\n            }\n\n            if (!execEditLength()) {\n              exec();\n            }\n          }, 0);\n        })();\n      } else {\n        while (editLength <= maxEditLength) {\n          var ret = execEditLength();\n\n          if (ret) {\n            return ret;\n          }\n        }\n      }\n    },\n    pushComponent: function pushComponent(components, added, removed) {\n      var last = components[components.length - 1];\n\n      if (last && last.added === added && last.removed === removed) {\n        // We need to clone here as the component clone operation is just\n        // as shallow array clone\n        components[components.length - 1] = {\n          count: last.count + 1,\n          added: added,\n          removed: removed\n        };\n      } else {\n        components.push({\n          count: 1,\n          added: added,\n          removed: removed\n        });\n      }\n    },\n    extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n      var newLen = newString.length,\n          oldLen = oldString.length,\n          newPos = basePath.newPos,\n          oldPos = newPos - diagonalPath,\n          commonCount = 0;\n\n      while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n        newPos++;\n        oldPos++;\n        commonCount++;\n      }\n\n      if (commonCount) {\n        basePath.components.push({\n          count: commonCount\n        });\n      }\n\n      basePath.newPos = newPos;\n      return oldPos;\n    },\n    equals: function equals(left, right) {\n      if (this.options.comparator) {\n        return this.options.comparator(left, right);\n      } else {\n        return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n      }\n    },\n    removeEmpty: function removeEmpty(array) {\n      var ret = [];\n\n      for (var i = 0; i < array.length; i++) {\n        if (array[i]) {\n          ret.push(array[i]);\n        }\n      }\n\n      return ret;\n    },\n    castInput: function castInput(value) {\n      return value;\n    },\n    tokenize: function tokenize(value) {\n      return value.split('');\n    },\n    join: function join(chars) {\n      return chars.join('');\n    }\n  };\n\n  function buildValues(diff, components, newString, oldString, useLongestToken) {\n    var componentPos = 0,\n        componentLen = components.length,\n        newPos = 0,\n        oldPos = 0;\n\n    for (; componentPos < componentLen; componentPos++) {\n      var component = components[componentPos];\n\n      if (!component.removed) {\n        if (!component.added && useLongestToken) {\n          var value = newString.slice(newPos, newPos + component.count);\n          value = value.map(function (value, i) {\n            var oldValue = oldString[oldPos + i];\n            return oldValue.length > value.length ? oldValue : value;\n          });\n          component.value = diff.join(value);\n        } else {\n          component.value = diff.join(newString.slice(newPos, newPos + component.count));\n        }\n\n        newPos += component.count; // Common case\n\n        if (!component.added) {\n          oldPos += component.count;\n        }\n      } else {\n        component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n        oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n        // The diffing algorithm is tied to add then remove output and this is the simplest\n        // route to get the desired output with minimal overhead.\n\n        if (componentPos && components[componentPos - 1].added) {\n          var tmp = components[componentPos - 1];\n          components[componentPos - 1] = components[componentPos];\n          components[componentPos] = tmp;\n        }\n      }\n    } // Special case handle for when one terminal is ignored (i.e. whitespace).\n    // For this case we merge the terminal into the prior string and drop the change.\n    // This is only available for string mode.\n\n\n    var lastComponent = components[componentLen - 1];\n\n    if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n      components[componentLen - 2].value += lastComponent.value;\n      components.pop();\n    }\n\n    return components;\n  }\n\n  function clonePath(path) {\n    return {\n      newPos: path.newPos,\n      components: path.components.slice(0)\n    };\n  }\n\n  var characterDiff = new Diff();\n  function diffChars(oldStr, newStr, options) {\n    return characterDiff.diff(oldStr, newStr, options);\n  }\n\n  function generateOptions(options, defaults) {\n    if (typeof options === 'function') {\n      defaults.callback = options;\n    } else if (options) {\n      for (var name in options) {\n        /* istanbul ignore else */\n        if (options.hasOwnProperty(name)) {\n          defaults[name] = options[name];\n        }\n      }\n    }\n\n    return defaults;\n  }\n\n  //\n  // Ranges and exceptions:\n  // Latin-1 Supplement, 0080–00FF\n  //  - U+00D7  × Multiplication sign\n  //  - U+00F7  ÷ Division sign\n  // Latin Extended-A, 0100–017F\n  // Latin Extended-B, 0180–024F\n  // IPA Extensions, 0250–02AF\n  // Spacing Modifier Letters, 02B0–02FF\n  //  - U+02C7  ˇ &#711;  Caron\n  //  - U+02D8  ˘ &#728;  Breve\n  //  - U+02D9  ˙ &#729;  Dot Above\n  //  - U+02DA  ˚ &#730;  Ring Above\n  //  - U+02DB  ˛ &#731;  Ogonek\n  //  - U+02DC  ˜ &#732;  Small Tilde\n  //  - U+02DD  ˝ &#733;  Double Acute Accent\n  // Latin Extended Additional, 1E00–1EFF\n\n  var extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\n  var reWhitespace = /\\S/;\n  var wordDiff = new Diff();\n\n  wordDiff.equals = function (left, right) {\n    if (this.options.ignoreCase) {\n      left = left.toLowerCase();\n      right = right.toLowerCase();\n    }\n\n    return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n  };\n\n  wordDiff.tokenize = function (value) {\n    // All whitespace symbols except newline group into one token, each newline - in separate token\n    var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n    for (var i = 0; i < tokens.length - 1; i++) {\n      // If we have an empty string in the next field and we have only word chars before and after, merge\n      if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n        tokens[i] += tokens[i + 2];\n        tokens.splice(i + 1, 2);\n        i--;\n      }\n    }\n\n    return tokens;\n  };\n\n  function diffWords(oldStr, newStr, options) {\n    options = generateOptions(options, {\n      ignoreWhitespace: true\n    });\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n  function diffWordsWithSpace(oldStr, newStr, options) {\n    return wordDiff.diff(oldStr, newStr, options);\n  }\n\n  var lineDiff = new Diff();\n\n  lineDiff.tokenize = function (value) {\n    var retLines = [],\n        linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n    if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n      linesAndNewlines.pop();\n    } // Merge the content and line separators into single tokens\n\n\n    for (var i = 0; i < linesAndNewlines.length; i++) {\n      var line = linesAndNewlines[i];\n\n      if (i % 2 && !this.options.newlineIsToken) {\n        retLines[retLines.length - 1] += line;\n      } else {\n        if (this.options.ignoreWhitespace) {\n          line = line.trim();\n        }\n\n        retLines.push(line);\n      }\n    }\n\n    return retLines;\n  };\n\n  function diffLines(oldStr, newStr, callback) {\n    return lineDiff.diff(oldStr, newStr, callback);\n  }\n  function diffTrimmedLines(oldStr, newStr, callback) {\n    var options = generateOptions(callback, {\n      ignoreWhitespace: true\n    });\n    return lineDiff.diff(oldStr, newStr, options);\n  }\n\n  var sentenceDiff = new Diff();\n\n  sentenceDiff.tokenize = function (value) {\n    return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n  };\n\n  function diffSentences(oldStr, newStr, callback) {\n    return sentenceDiff.diff(oldStr, newStr, callback);\n  }\n\n  var cssDiff = new Diff();\n\n  cssDiff.tokenize = function (value) {\n    return value.split(/([{}:;,]|\\s+)/);\n  };\n\n  function diffCss(oldStr, newStr, callback) {\n    return cssDiff.diff(oldStr, newStr, callback);\n  }\n\n  function _typeof(obj) {\n    \"@babel/helpers - typeof\";\n\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var objectPrototypeToString = Object.prototype.toString;\n  var jsonDiff = new Diff(); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n  // dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n  jsonDiff.useLongestToken = true;\n  jsonDiff.tokenize = lineDiff.tokenize;\n\n  jsonDiff.castInput = function (value) {\n    var _this$options = this.options,\n        undefinedReplacement = _this$options.undefinedReplacement,\n        _this$options$stringi = _this$options.stringifyReplacer,\n        stringifyReplacer = _this$options$stringi === void 0 ? function (k, v) {\n      return typeof v === 'undefined' ? undefinedReplacement : v;\n    } : _this$options$stringi;\n    return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n  };\n\n  jsonDiff.equals = function (left, right) {\n    return Diff.prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'));\n  };\n\n  function diffJson(oldObj, newObj, options) {\n    return jsonDiff.diff(oldObj, newObj, options);\n  } // This function handles the presence of circular references by bailing out when encountering an\n  // object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n  function canonicalize(obj, stack, replacementStack, replacer, key) {\n    stack = stack || [];\n    replacementStack = replacementStack || [];\n\n    if (replacer) {\n      obj = replacer(key, obj);\n    }\n\n    var i;\n\n    for (i = 0; i < stack.length; i += 1) {\n      if (stack[i] === obj) {\n        return replacementStack[i];\n      }\n    }\n\n    var canonicalizedObj;\n\n    if ('[object Array]' === objectPrototypeToString.call(obj)) {\n      stack.push(obj);\n      canonicalizedObj = new Array(obj.length);\n      replacementStack.push(canonicalizedObj);\n\n      for (i = 0; i < obj.length; i += 1) {\n        canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n      return canonicalizedObj;\n    }\n\n    if (obj && obj.toJSON) {\n      obj = obj.toJSON();\n    }\n\n    if (_typeof(obj) === 'object' && obj !== null) {\n      stack.push(obj);\n      canonicalizedObj = {};\n      replacementStack.push(canonicalizedObj);\n\n      var sortedKeys = [],\n          _key;\n\n      for (_key in obj) {\n        /* istanbul ignore else */\n        if (obj.hasOwnProperty(_key)) {\n          sortedKeys.push(_key);\n        }\n      }\n\n      sortedKeys.sort();\n\n      for (i = 0; i < sortedKeys.length; i += 1) {\n        _key = sortedKeys[i];\n        canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n      }\n\n      stack.pop();\n      replacementStack.pop();\n    } else {\n      canonicalizedObj = obj;\n    }\n\n    return canonicalizedObj;\n  }\n\n  var arrayDiff = new Diff();\n\n  arrayDiff.tokenize = function (value) {\n    return value.slice();\n  };\n\n  arrayDiff.join = arrayDiff.removeEmpty = function (value) {\n    return value;\n  };\n\n  function diffArrays(oldArr, newArr, callback) {\n    return arrayDiff.diff(oldArr, newArr, callback);\n  }\n\n  function parsePatch(uniDiff) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        list = [],\n        i = 0;\n\n    function parseIndex() {\n      var index = {};\n      list.push(index); // Parse diff metadata\n\n      while (i < diffstr.length) {\n        var line = diffstr[i]; // File header found, end parsing diff metadata\n\n        if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n          break;\n        } // Diff index\n\n\n        var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n        if (header) {\n          index.index = header[1];\n        }\n\n        i++;\n      } // Parse file headers if they are defined. Unified diff requires them, but\n      // there's no technical issues to have an isolated hunk without file header\n\n\n      parseFileHeader(index);\n      parseFileHeader(index); // Parse hunks\n\n      index.hunks = [];\n\n      while (i < diffstr.length) {\n        var _line = diffstr[i];\n\n        if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n          break;\n        } else if (/^@@/.test(_line)) {\n          index.hunks.push(parseHunk());\n        } else if (_line && options.strict) {\n          // Ignore unexpected content unless in strict mode\n          throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n        } else {\n          i++;\n        }\n      }\n    } // Parses the --- and +++ headers, if none are found, no lines\n    // are consumed.\n\n\n    function parseFileHeader(index) {\n      var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n      if (fileHeader) {\n        var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n        var data = fileHeader[2].split('\\t', 2);\n        var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n        if (/^\".*\"$/.test(fileName)) {\n          fileName = fileName.substr(1, fileName.length - 2);\n        }\n\n        index[keyPrefix + 'FileName'] = fileName;\n        index[keyPrefix + 'Header'] = (data[1] || '').trim();\n        i++;\n      }\n    } // Parses a hunk\n    // This assumes that we are at the start of a hunk.\n\n\n    function parseHunk() {\n      var chunkHeaderIndex = i,\n          chunkHeaderLine = diffstr[i++],\n          chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n      var hunk = {\n        oldStart: +chunkHeader[1],\n        oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n        newStart: +chunkHeader[3],\n        newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n        lines: [],\n        linedelimiters: []\n      }; // Unified Diff Format quirk: If the chunk size is 0,\n      // the first number is one lower than one would expect.\n      // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n      if (hunk.oldLines === 0) {\n        hunk.oldStart += 1;\n      }\n\n      if (hunk.newLines === 0) {\n        hunk.newStart += 1;\n      }\n\n      var addCount = 0,\n          removeCount = 0;\n\n      for (; i < diffstr.length; i++) {\n        // Lines starting with '---' could be mistaken for the \"remove line\" operation\n        // But they could be the header for the next file. Therefore prune such cases out.\n        if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n          break;\n        }\n\n        var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n        if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n          hunk.lines.push(diffstr[i]);\n          hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n          if (operation === '+') {\n            addCount++;\n          } else if (operation === '-') {\n            removeCount++;\n          } else if (operation === ' ') {\n            addCount++;\n            removeCount++;\n          }\n        } else {\n          break;\n        }\n      } // Handle the empty block count case\n\n\n      if (!addCount && hunk.newLines === 1) {\n        hunk.newLines = 0;\n      }\n\n      if (!removeCount && hunk.oldLines === 1) {\n        hunk.oldLines = 0;\n      } // Perform optional sanity checking\n\n\n      if (options.strict) {\n        if (addCount !== hunk.newLines) {\n          throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n\n        if (removeCount !== hunk.oldLines) {\n          throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n        }\n      }\n\n      return hunk;\n    }\n\n    while (i < diffstr.length) {\n      parseIndex();\n    }\n\n    return list;\n  }\n\n  // Iterator that traverses in the range of [min, max], stepping\n  // by distance from a given start position. I.e. for [0, 4], with\n  // start of 2, this will iterate 2, 3, 1, 4, 0.\n  function distanceIterator (start, minLine, maxLine) {\n    var wantForward = true,\n        backwardExhausted = false,\n        forwardExhausted = false,\n        localOffset = 1;\n    return function iterator() {\n      if (wantForward && !forwardExhausted) {\n        if (backwardExhausted) {\n          localOffset++;\n        } else {\n          wantForward = false;\n        } // Check if trying to fit beyond text length, and if not, check it fits\n        // after offset location (or desired location on first iteration)\n\n\n        if (start + localOffset <= maxLine) {\n          return localOffset;\n        }\n\n        forwardExhausted = true;\n      }\n\n      if (!backwardExhausted) {\n        if (!forwardExhausted) {\n          wantForward = true;\n        } // Check if trying to fit before text beginning, and if not, check it fits\n        // before offset location\n\n\n        if (minLine <= start - localOffset) {\n          return -localOffset++;\n        }\n\n        backwardExhausted = true;\n        return iterator();\n      } // We tried to fit hunk before text beginning and beyond text length, then\n      // hunk can't fit on the text. Return undefined\n\n    };\n  }\n\n  function applyPatch(source, uniDiff) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    if (Array.isArray(uniDiff)) {\n      if (uniDiff.length > 1) {\n        throw new Error('applyPatch only works with a single input.');\n      }\n\n      uniDiff = uniDiff[0];\n    } // Apply the diff to the input\n\n\n    var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n        delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n        hunks = uniDiff.hunks,\n        compareLine = options.compareLine || function (lineNumber, line, operation, patchContent) {\n      return line === patchContent;\n    },\n        errorCount = 0,\n        fuzzFactor = options.fuzzFactor || 0,\n        minLine = 0,\n        offset = 0,\n        removeEOFNL,\n        addEOFNL;\n    /**\n     * Checks if the hunk exactly fits on the provided location\n     */\n\n\n    function hunkFits(hunk, toPos) {\n      for (var j = 0; j < hunk.lines.length; j++) {\n        var line = hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line;\n\n        if (operation === ' ' || operation === '-') {\n          // Context sanity check\n          if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n            errorCount++;\n\n            if (errorCount > fuzzFactor) {\n              return false;\n            }\n          }\n\n          toPos++;\n        }\n      }\n\n      return true;\n    } // Search best fit offsets for each hunk based on the previous ones\n\n\n    for (var i = 0; i < hunks.length; i++) {\n      var hunk = hunks[i],\n          maxLine = lines.length - hunk.oldLines,\n          localOffset = 0,\n          toPos = offset + hunk.oldStart - 1;\n      var iterator = distanceIterator(toPos, minLine, maxLine);\n\n      for (; localOffset !== undefined; localOffset = iterator()) {\n        if (hunkFits(hunk, toPos + localOffset)) {\n          hunk.offset = offset += localOffset;\n          break;\n        }\n      }\n\n      if (localOffset === undefined) {\n        return false;\n      } // Set lower text limit to end of the current hunk, so next ones don't try\n      // to fit over already patched text\n\n\n      minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n    } // Apply patch hunks\n\n\n    var diffOffset = 0;\n\n    for (var _i = 0; _i < hunks.length; _i++) {\n      var _hunk = hunks[_i],\n          _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n      diffOffset += _hunk.newLines - _hunk.oldLines;\n\n      for (var j = 0; j < _hunk.lines.length; j++) {\n        var line = _hunk.lines[j],\n            operation = line.length > 0 ? line[0] : ' ',\n            content = line.length > 0 ? line.substr(1) : line,\n            delimiter = _hunk.linedelimiters[j];\n\n        if (operation === ' ') {\n          _toPos++;\n        } else if (operation === '-') {\n          lines.splice(_toPos, 1);\n          delimiters.splice(_toPos, 1);\n          /* istanbul ignore else */\n        } else if (operation === '+') {\n          lines.splice(_toPos, 0, content);\n          delimiters.splice(_toPos, 0, delimiter);\n          _toPos++;\n        } else if (operation === '\\\\') {\n          var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n          if (previousOperation === '+') {\n            removeEOFNL = true;\n          } else if (previousOperation === '-') {\n            addEOFNL = true;\n          }\n        }\n      }\n    } // Handle EOFNL insertion/removal\n\n\n    if (removeEOFNL) {\n      while (!lines[lines.length - 1]) {\n        lines.pop();\n        delimiters.pop();\n      }\n    } else if (addEOFNL) {\n      lines.push('');\n      delimiters.push('\\n');\n    }\n\n    for (var _k = 0; _k < lines.length - 1; _k++) {\n      lines[_k] = lines[_k] + delimiters[_k];\n    }\n\n    return lines.join('');\n  } // Wrapper that supports multiple file patches via callbacks.\n\n  function applyPatches(uniDiff, options) {\n    if (typeof uniDiff === 'string') {\n      uniDiff = parsePatch(uniDiff);\n    }\n\n    var currentIndex = 0;\n\n    function processIndex() {\n      var index = uniDiff[currentIndex++];\n\n      if (!index) {\n        return options.complete();\n      }\n\n      options.loadFile(index, function (err, data) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        var updatedContent = applyPatch(data, index, options);\n        options.patched(index, updatedContent, function (err) {\n          if (err) {\n            return options.complete(err);\n          }\n\n          processIndex();\n        });\n      });\n    }\n\n    processIndex();\n  }\n\n  function structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    if (!options) {\n      options = {};\n    }\n\n    if (typeof options.context === 'undefined') {\n      options.context = 4;\n    }\n\n    var diff = diffLines(oldStr, newStr, options);\n\n    if (!diff) {\n      return;\n    }\n\n    diff.push({\n      value: '',\n      lines: []\n    }); // Append an empty value to make cleanup easier\n\n    function contextLines(lines) {\n      return lines.map(function (entry) {\n        return ' ' + entry;\n      });\n    }\n\n    var hunks = [];\n    var oldRangeStart = 0,\n        newRangeStart = 0,\n        curRange = [],\n        oldLine = 1,\n        newLine = 1;\n\n    var _loop = function _loop(i) {\n      var current = diff[i],\n          lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n      current.lines = lines;\n\n      if (current.added || current.removed) {\n        var _curRange;\n\n        // If we have previous context, start with that\n        if (!oldRangeStart) {\n          var prev = diff[i - 1];\n          oldRangeStart = oldLine;\n          newRangeStart = newLine;\n\n          if (prev) {\n            curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n            oldRangeStart -= curRange.length;\n            newRangeStart -= curRange.length;\n          }\n        } // Output our changes\n\n\n        (_curRange = curRange).push.apply(_curRange, _toConsumableArray(lines.map(function (entry) {\n          return (current.added ? '+' : '-') + entry;\n        }))); // Track the updated file position\n\n\n        if (current.added) {\n          newLine += lines.length;\n        } else {\n          oldLine += lines.length;\n        }\n      } else {\n        // Identical context lines. Track line changes\n        if (oldRangeStart) {\n          // Close out any changes that have been output (or join overlapping)\n          if (lines.length <= options.context * 2 && i < diff.length - 2) {\n            var _curRange2;\n\n            // Overlapping\n            (_curRange2 = curRange).push.apply(_curRange2, _toConsumableArray(contextLines(lines)));\n          } else {\n            var _curRange3;\n\n            // end the range and output\n            var contextSize = Math.min(lines.length, options.context);\n\n            (_curRange3 = curRange).push.apply(_curRange3, _toConsumableArray(contextLines(lines.slice(0, contextSize))));\n\n            var hunk = {\n              oldStart: oldRangeStart,\n              oldLines: oldLine - oldRangeStart + contextSize,\n              newStart: newRangeStart,\n              newLines: newLine - newRangeStart + contextSize,\n              lines: curRange\n            };\n\n            if (i >= diff.length - 2 && lines.length <= options.context) {\n              // EOF is inside this hunk\n              var oldEOFNewline = /\\n$/.test(oldStr);\n              var newEOFNewline = /\\n$/.test(newStr);\n              var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n              if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n                // special case: old has no eol and no trailing context; no-nl can end up before adds\n                // however, if the old file is empty, do not output the no-nl line\n                curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n              }\n\n              if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n                curRange.push('\\\\ No newline at end of file');\n              }\n            }\n\n            hunks.push(hunk);\n            oldRangeStart = 0;\n            newRangeStart = 0;\n            curRange = [];\n          }\n        }\n\n        oldLine += lines.length;\n        newLine += lines.length;\n      }\n    };\n\n    for (var i = 0; i < diff.length; i++) {\n      _loop(i);\n    }\n\n    return {\n      oldFileName: oldFileName,\n      newFileName: newFileName,\n      oldHeader: oldHeader,\n      newHeader: newHeader,\n      hunks: hunks\n    };\n  }\n  function formatPatch(diff) {\n    var ret = [];\n\n    if (diff.oldFileName == diff.newFileName) {\n      ret.push('Index: ' + diff.oldFileName);\n    }\n\n    ret.push('===================================================================');\n    ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n    ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n    for (var i = 0; i < diff.hunks.length; i++) {\n      var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n      // the first number is one lower than one would expect.\n      // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n      if (hunk.oldLines === 0) {\n        hunk.oldStart -= 1;\n      }\n\n      if (hunk.newLines === 0) {\n        hunk.newStart -= 1;\n      }\n\n      ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n      ret.push.apply(ret, hunk.lines);\n    }\n\n    return ret.join('\\n') + '\\n';\n  }\n  function createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n  }\n  function createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n    return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n  }\n\n  function arrayEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    return arrayStartsWith(a, b);\n  }\n  function arrayStartsWith(array, start) {\n    if (start.length > array.length) {\n      return false;\n    }\n\n    for (var i = 0; i < start.length; i++) {\n      if (start[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function calcLineCount(hunk) {\n    var _calcOldNewLineCount = calcOldNewLineCount(hunk.lines),\n        oldLines = _calcOldNewLineCount.oldLines,\n        newLines = _calcOldNewLineCount.newLines;\n\n    if (oldLines !== undefined) {\n      hunk.oldLines = oldLines;\n    } else {\n      delete hunk.oldLines;\n    }\n\n    if (newLines !== undefined) {\n      hunk.newLines = newLines;\n    } else {\n      delete hunk.newLines;\n    }\n  }\n  function merge(mine, theirs, base) {\n    mine = loadPatch(mine, base);\n    theirs = loadPatch(theirs, base);\n    var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n    // Leaving sanity checks on this to the API consumer that may know more about the\n    // meaning in their own context.\n\n    if (mine.index || theirs.index) {\n      ret.index = mine.index || theirs.index;\n    }\n\n    if (mine.newFileName || theirs.newFileName) {\n      if (!fileNameChanged(mine)) {\n        // No header or no change in ours, use theirs (and ours if theirs does not exist)\n        ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n        ret.newFileName = theirs.newFileName || mine.newFileName;\n        ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n        ret.newHeader = theirs.newHeader || mine.newHeader;\n      } else if (!fileNameChanged(theirs)) {\n        // No header or no change in theirs, use ours\n        ret.oldFileName = mine.oldFileName;\n        ret.newFileName = mine.newFileName;\n        ret.oldHeader = mine.oldHeader;\n        ret.newHeader = mine.newHeader;\n      } else {\n        // Both changed... figure it out\n        ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n        ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n        ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n        ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n      }\n    }\n\n    ret.hunks = [];\n    var mineIndex = 0,\n        theirsIndex = 0,\n        mineOffset = 0,\n        theirsOffset = 0;\n\n    while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n      var mineCurrent = mine.hunks[mineIndex] || {\n        oldStart: Infinity\n      },\n          theirsCurrent = theirs.hunks[theirsIndex] || {\n        oldStart: Infinity\n      };\n\n      if (hunkBefore(mineCurrent, theirsCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n        mineIndex++;\n        theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n      } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n        // This patch does not overlap with any of the others, yay.\n        ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n        theirsIndex++;\n        mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n      } else {\n        // Overlap, merge as best we can\n        var mergedHunk = {\n          oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n          oldLines: 0,\n          newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n          newLines: 0,\n          lines: []\n        };\n        mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n        theirsIndex++;\n        mineIndex++;\n        ret.hunks.push(mergedHunk);\n      }\n    }\n\n    return ret;\n  }\n\n  function loadPatch(param, base) {\n    if (typeof param === 'string') {\n      if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n        return parsePatch(param)[0];\n      }\n\n      if (!base) {\n        throw new Error('Must provide a base reference or pass in a patch');\n      }\n\n      return structuredPatch(undefined, undefined, base, param);\n    }\n\n    return param;\n  }\n\n  function fileNameChanged(patch) {\n    return patch.newFileName && patch.newFileName !== patch.oldFileName;\n  }\n\n  function selectField(index, mine, theirs) {\n    if (mine === theirs) {\n      return mine;\n    } else {\n      index.conflict = true;\n      return {\n        mine: mine,\n        theirs: theirs\n      };\n    }\n  }\n\n  function hunkBefore(test, check) {\n    return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n  }\n\n  function cloneHunk(hunk, offset) {\n    return {\n      oldStart: hunk.oldStart,\n      oldLines: hunk.oldLines,\n      newStart: hunk.newStart + offset,\n      newLines: hunk.newLines,\n      lines: hunk.lines\n    };\n  }\n\n  function mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n    // This will generally result in a conflicted hunk, but there are cases where the context\n    // is the only overlap where we can successfully merge the content here.\n    var mine = {\n      offset: mineOffset,\n      lines: mineLines,\n      index: 0\n    },\n        their = {\n      offset: theirOffset,\n      lines: theirLines,\n      index: 0\n    }; // Handle any leading content\n\n    insertLeading(hunk, mine, their);\n    insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n    while (mine.index < mine.lines.length && their.index < their.lines.length) {\n      var mineCurrent = mine.lines[mine.index],\n          theirCurrent = their.lines[their.index];\n\n      if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n        // Both modified ...\n        mutualChange(hunk, mine, their);\n      } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n        var _hunk$lines;\n\n        // Mine inserted\n        (_hunk$lines = hunk.lines).push.apply(_hunk$lines, _toConsumableArray(collectChange(mine)));\n      } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n        var _hunk$lines2;\n\n        // Theirs inserted\n        (_hunk$lines2 = hunk.lines).push.apply(_hunk$lines2, _toConsumableArray(collectChange(their)));\n      } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n        // Mine removed or edited\n        removal(hunk, mine, their);\n      } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n        // Their removed or edited\n        removal(hunk, their, mine, true);\n      } else if (mineCurrent === theirCurrent) {\n        // Context identity\n        hunk.lines.push(mineCurrent);\n        mine.index++;\n        their.index++;\n      } else {\n        // Context mismatch\n        conflict(hunk, collectChange(mine), collectChange(their));\n      }\n    } // Now push anything that may be remaining\n\n\n    insertTrailing(hunk, mine);\n    insertTrailing(hunk, their);\n    calcLineCount(hunk);\n  }\n\n  function mutualChange(hunk, mine, their) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectChange(their);\n\n    if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n      // Special case for remove changes that are supersets of one another\n      if (arrayStartsWith(myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n        var _hunk$lines3;\n\n        (_hunk$lines3 = hunk.lines).push.apply(_hunk$lines3, _toConsumableArray(myChanges));\n\n        return;\n      } else if (arrayStartsWith(theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n        var _hunk$lines4;\n\n        (_hunk$lines4 = hunk.lines).push.apply(_hunk$lines4, _toConsumableArray(theirChanges));\n\n        return;\n      }\n    } else if (arrayEqual(myChanges, theirChanges)) {\n      var _hunk$lines5;\n\n      (_hunk$lines5 = hunk.lines).push.apply(_hunk$lines5, _toConsumableArray(myChanges));\n\n      return;\n    }\n\n    conflict(hunk, myChanges, theirChanges);\n  }\n\n  function removal(hunk, mine, their, swap) {\n    var myChanges = collectChange(mine),\n        theirChanges = collectContext(their, myChanges);\n\n    if (theirChanges.merged) {\n      var _hunk$lines6;\n\n      (_hunk$lines6 = hunk.lines).push.apply(_hunk$lines6, _toConsumableArray(theirChanges.merged));\n    } else {\n      conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n    }\n  }\n\n  function conflict(hunk, mine, their) {\n    hunk.conflict = true;\n    hunk.lines.push({\n      conflict: true,\n      mine: mine,\n      theirs: their\n    });\n  }\n\n  function insertLeading(hunk, insert, their) {\n    while (insert.offset < their.offset && insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n      insert.offset++;\n    }\n  }\n\n  function insertTrailing(hunk, insert) {\n    while (insert.index < insert.lines.length) {\n      var line = insert.lines[insert.index++];\n      hunk.lines.push(line);\n    }\n  }\n\n  function collectChange(state) {\n    var ret = [],\n        operation = state.lines[state.index][0];\n\n    while (state.index < state.lines.length) {\n      var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n      if (operation === '-' && line[0] === '+') {\n        operation = '+';\n      }\n\n      if (operation === line[0]) {\n        ret.push(line);\n        state.index++;\n      } else {\n        break;\n      }\n    }\n\n    return ret;\n  }\n\n  function collectContext(state, matchChanges) {\n    var changes = [],\n        merged = [],\n        matchIndex = 0,\n        contextChanges = false,\n        conflicted = false;\n\n    while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n      var change = state.lines[state.index],\n          match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n      if (match[0] === '+') {\n        break;\n      }\n\n      contextChanges = contextChanges || change[0] !== ' ';\n      merged.push(match);\n      matchIndex++; // Consume any additions in the other block as a conflict to attempt\n      // to pull in the remaining context after this\n\n      if (change[0] === '+') {\n        conflicted = true;\n\n        while (change[0] === '+') {\n          changes.push(change);\n          change = state.lines[++state.index];\n        }\n      }\n\n      if (match.substr(1) === change.substr(1)) {\n        changes.push(change);\n        state.index++;\n      } else {\n        conflicted = true;\n      }\n    }\n\n    if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n      conflicted = true;\n    }\n\n    if (conflicted) {\n      return changes;\n    }\n\n    while (matchIndex < matchChanges.length) {\n      merged.push(matchChanges[matchIndex++]);\n    }\n\n    return {\n      merged: merged,\n      changes: changes\n    };\n  }\n\n  function allRemoves(changes) {\n    return changes.reduce(function (prev, change) {\n      return prev && change[0] === '-';\n    }, true);\n  }\n\n  function skipRemoveSuperset(state, removeChanges, delta) {\n    for (var i = 0; i < delta; i++) {\n      var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n      if (state.lines[state.index + i] !== ' ' + changeContent) {\n        return false;\n      }\n    }\n\n    state.index += delta;\n    return true;\n  }\n\n  function calcOldNewLineCount(lines) {\n    var oldLines = 0;\n    var newLines = 0;\n    lines.forEach(function (line) {\n      if (typeof line !== 'string') {\n        var myCount = calcOldNewLineCount(line.mine);\n        var theirCount = calcOldNewLineCount(line.theirs);\n\n        if (oldLines !== undefined) {\n          if (myCount.oldLines === theirCount.oldLines) {\n            oldLines += myCount.oldLines;\n          } else {\n            oldLines = undefined;\n          }\n        }\n\n        if (newLines !== undefined) {\n          if (myCount.newLines === theirCount.newLines) {\n            newLines += myCount.newLines;\n          } else {\n            newLines = undefined;\n          }\n        }\n      } else {\n        if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n          newLines++;\n        }\n\n        if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n          oldLines++;\n        }\n      }\n    });\n    return {\n      oldLines: oldLines,\n      newLines: newLines\n    };\n  }\n\n  // See: http://code.google.com/p/google-diff-match-patch/wiki/API\n  function convertChangesToDMP(changes) {\n    var ret = [],\n        change,\n        operation;\n\n    for (var i = 0; i < changes.length; i++) {\n      change = changes[i];\n\n      if (change.added) {\n        operation = 1;\n      } else if (change.removed) {\n        operation = -1;\n      } else {\n        operation = 0;\n      }\n\n      ret.push([operation, change.value]);\n    }\n\n    return ret;\n  }\n\n  function convertChangesToXML(changes) {\n    var ret = [];\n\n    for (var i = 0; i < changes.length; i++) {\n      var change = changes[i];\n\n      if (change.added) {\n        ret.push('<ins>');\n      } else if (change.removed) {\n        ret.push('<del>');\n      }\n\n      ret.push(escapeHTML(change.value));\n\n      if (change.added) {\n        ret.push('</ins>');\n      } else if (change.removed) {\n        ret.push('</del>');\n      }\n    }\n\n    return ret.join('');\n  }\n\n  function escapeHTML(s) {\n    var n = s;\n    n = n.replace(/&/g, '&amp;');\n    n = n.replace(/</g, '&lt;');\n    n = n.replace(/>/g, '&gt;');\n    n = n.replace(/\"/g, '&quot;');\n    return n;\n  }\n\n  exports.Diff = Diff;\n  exports.applyPatch = applyPatch;\n  exports.applyPatches = applyPatches;\n  exports.canonicalize = canonicalize;\n  exports.convertChangesToDMP = convertChangesToDMP;\n  exports.convertChangesToXML = convertChangesToXML;\n  exports.createPatch = createPatch;\n  exports.createTwoFilesPatch = createTwoFilesPatch;\n  exports.diffArrays = diffArrays;\n  exports.diffChars = diffChars;\n  exports.diffCss = diffCss;\n  exports.diffJson = diffJson;\n  exports.diffLines = diffLines;\n  exports.diffSentences = diffSentences;\n  exports.diffTrimmedLines = diffTrimmedLines;\n  exports.diffWords = diffWords;\n  exports.diffWordsWithSpace = diffWordsWithSpace;\n  exports.merge = merge;\n  exports.parsePatch = parsePatch;\n  exports.structuredPatch = structuredPatch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","export function levenshtein(a, b) {\n    if (a.length === 0) {\n        return b.length;\n    }\n    if (b.length === 0) {\n        return a.length;\n    }\n    const matrix = [];\n    let i;\n    for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n    }\n    let j;\n    for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n    }\n    for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\n                matrix[i][j] = matrix[i - 1][j - 1];\n            }\n            else {\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, Math.min(matrix[i][j - 1] + 1, matrix[i - 1][j] + 1));\n            }\n        }\n    }\n    return matrix[b.length][a.length];\n}\nexport function newDistanceFn(str) {\n    return (x, y) => {\n        const xValue = str(x).trim();\n        const yValue = str(y).trim();\n        const lev = levenshtein(xValue, yValue);\n        return lev / (xValue.length + yValue.length);\n    };\n}\nexport function newMatcherFn(distance) {\n    function findBestMatch(a, b, cache = new Map()) {\n        let bestMatchDist = Infinity;\n        let bestMatch;\n        for (let i = 0; i < a.length; ++i) {\n            for (let j = 0; j < b.length; ++j) {\n                const cacheKey = JSON.stringify([a[i], b[j]]);\n                let md;\n                if (!(cache.has(cacheKey) && (md = cache.get(cacheKey)))) {\n                    md = distance(a[i], b[j]);\n                    cache.set(cacheKey, md);\n                }\n                if (md < bestMatchDist) {\n                    bestMatchDist = md;\n                    bestMatch = { indexA: i, indexB: j, score: bestMatchDist };\n                }\n            }\n        }\n        return bestMatch;\n    }\n    function group(a, b, level = 0, cache = new Map()) {\n        const bm = findBestMatch(a, b, cache);\n        if (!bm || a.length + b.length < 3) {\n            return [[a, b]];\n        }\n        const a1 = a.slice(0, bm.indexA);\n        const b1 = b.slice(0, bm.indexB);\n        const aMatch = [a[bm.indexA]];\n        const bMatch = [b[bm.indexB]];\n        const tailA = bm.indexA + 1;\n        const tailB = bm.indexB + 1;\n        const a2 = a.slice(tailA);\n        const b2 = b.slice(tailB);\n        const group1 = group(a1, b1, level + 1, cache);\n        const groupMatch = group(aMatch, bMatch, level + 1, cache);\n        const group2 = group(a2, b2, level + 1, cache);\n        let result = groupMatch;\n        if (bm.indexA > 0 || bm.indexB > 0) {\n            result = group1.concat(result);\n        }\n        if (a.length > tailA || b.length > tailB) {\n            result = result.concat(group2);\n        }\n        return result;\n    }\n    return group;\n}\n//# sourceMappingURL=rematch.js.map","import * as jsDiff from 'diff';\nimport { unifyPath, hashCode } from './utils';\nimport * as rematch from './rematch';\nimport { LineMatchingType, DiffStyleType, LineType } from './types';\nexport const CSSLineClass = {\n    INSERTS: 'd2h-ins',\n    DELETES: 'd2h-del',\n    CONTEXT: 'd2h-cntx',\n    INFO: 'd2h-info',\n    INSERT_CHANGES: 'd2h-ins d2h-change',\n    DELETE_CHANGES: 'd2h-del d2h-change',\n};\nexport const defaultRenderConfig = {\n    matching: LineMatchingType.NONE,\n    matchWordsThreshold: 0.25,\n    maxLineLengthHighlight: 10000,\n    diffStyle: DiffStyleType.WORD,\n};\nconst separator = '/';\nconst distance = rematch.newDistanceFn((change) => change.value);\nconst matcher = rematch.newMatcherFn(distance);\nfunction isDevNullName(name) {\n    return name.indexOf('dev/null') !== -1;\n}\nfunction removeInsElements(line) {\n    return line.replace(/(<ins[^>]*>((.|\\n)*?)<\\/ins>)/g, '');\n}\nfunction removeDelElements(line) {\n    return line.replace(/(<del[^>]*>((.|\\n)*?)<\\/del>)/g, '');\n}\nexport function toCSSClass(lineType) {\n    switch (lineType) {\n        case LineType.CONTEXT:\n            return CSSLineClass.CONTEXT;\n        case LineType.INSERT:\n            return CSSLineClass.INSERTS;\n        case LineType.DELETE:\n            return CSSLineClass.DELETES;\n    }\n}\nfunction prefixLength(isCombined) {\n    return isCombined ? 2 : 1;\n}\nexport function escapeForHtml(str) {\n    return str\n        .slice(0)\n        .replace(/&/g, '&amp;')\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;')\n        .replace(/\"/g, '&quot;')\n        .replace(/'/g, '&#x27;')\n        .replace(/\\//g, '&#x2F;');\n}\nexport function deconstructLine(line, isCombined, escape = true) {\n    const indexToSplit = prefixLength(isCombined);\n    return {\n        prefix: line.substring(0, indexToSplit),\n        content: escape ? escapeForHtml(line.substring(indexToSplit)) : line.substring(indexToSplit),\n    };\n}\nexport function filenameDiff(file) {\n    const oldFilename = unifyPath(file.oldName);\n    const newFilename = unifyPath(file.newName);\n    if (oldFilename !== newFilename && !isDevNullName(oldFilename) && !isDevNullName(newFilename)) {\n        const prefixPaths = [];\n        const suffixPaths = [];\n        const oldFilenameParts = oldFilename.split(separator);\n        const newFilenameParts = newFilename.split(separator);\n        const oldFilenamePartsSize = oldFilenameParts.length;\n        const newFilenamePartsSize = newFilenameParts.length;\n        let i = 0;\n        let j = oldFilenamePartsSize - 1;\n        let k = newFilenamePartsSize - 1;\n        while (i < j && i < k) {\n            if (oldFilenameParts[i] === newFilenameParts[i]) {\n                prefixPaths.push(newFilenameParts[i]);\n                i += 1;\n            }\n            else {\n                break;\n            }\n        }\n        while (j > i && k > i) {\n            if (oldFilenameParts[j] === newFilenameParts[k]) {\n                suffixPaths.unshift(newFilenameParts[k]);\n                j -= 1;\n                k -= 1;\n            }\n            else {\n                break;\n            }\n        }\n        const finalPrefix = prefixPaths.join(separator);\n        const finalSuffix = suffixPaths.join(separator);\n        const oldRemainingPath = oldFilenameParts.slice(i, j + 1).join(separator);\n        const newRemainingPath = newFilenameParts.slice(i, k + 1).join(separator);\n        if (finalPrefix.length && finalSuffix.length) {\n            return (finalPrefix + separator + '{' + oldRemainingPath + ' → ' + newRemainingPath + '}' + separator + finalSuffix);\n        }\n        else if (finalPrefix.length) {\n            return finalPrefix + separator + '{' + oldRemainingPath + ' → ' + newRemainingPath + '}';\n        }\n        else if (finalSuffix.length) {\n            return '{' + oldRemainingPath + ' → ' + newRemainingPath + '}' + separator + finalSuffix;\n        }\n        return oldFilename + ' → ' + newFilename;\n    }\n    else if (!isDevNullName(newFilename)) {\n        return newFilename;\n    }\n    else {\n        return oldFilename;\n    }\n}\nexport function getHtmlId(file) {\n    return `d2h-${hashCode(filenameDiff(file)).toString().slice(-6)}`;\n}\nexport function getFileIcon(file) {\n    let templateName = 'file-changed';\n    if (file.isRename) {\n        templateName = 'file-renamed';\n    }\n    else if (file.isCopy) {\n        templateName = 'file-renamed';\n    }\n    else if (file.isNew) {\n        templateName = 'file-added';\n    }\n    else if (file.isDeleted) {\n        templateName = 'file-deleted';\n    }\n    else if (file.newName !== file.oldName) {\n        templateName = 'file-renamed';\n    }\n    return templateName;\n}\nexport function diffHighlight(diffLine1, diffLine2, isCombined, config = {}) {\n    const { matching, maxLineLengthHighlight, matchWordsThreshold, diffStyle } = Object.assign(Object.assign({}, defaultRenderConfig), config);\n    const line1 = deconstructLine(diffLine1, isCombined, false);\n    const line2 = deconstructLine(diffLine2, isCombined, false);\n    if (line1.content.length > maxLineLengthHighlight || line2.content.length > maxLineLengthHighlight) {\n        return {\n            oldLine: {\n                prefix: line1.prefix,\n                content: escapeForHtml(line1.content),\n            },\n            newLine: {\n                prefix: line2.prefix,\n                content: escapeForHtml(line2.content),\n            },\n        };\n    }\n    const diff = diffStyle === 'char'\n        ? jsDiff.diffChars(line1.content, line2.content)\n        : jsDiff.diffWordsWithSpace(line1.content, line2.content);\n    const changedWords = [];\n    if (diffStyle === 'word' && matching === 'words') {\n        const removed = diff.filter(element => element.removed);\n        const added = diff.filter(element => element.added);\n        const chunks = matcher(added, removed);\n        chunks.forEach(chunk => {\n            if (chunk[0].length === 1 && chunk[1].length === 1) {\n                const dist = distance(chunk[0][0], chunk[1][0]);\n                if (dist < matchWordsThreshold) {\n                    changedWords.push(chunk[0][0]);\n                    changedWords.push(chunk[1][0]);\n                }\n            }\n        });\n    }\n    const highlightedLine = diff.reduce((highlightedLine, part) => {\n        const elemType = part.added ? 'ins' : part.removed ? 'del' : null;\n        const addClass = changedWords.indexOf(part) > -1 ? ' class=\"d2h-change\"' : '';\n        const escapedValue = escapeForHtml(part.value);\n        return elemType !== null\n            ? `${highlightedLine}<${elemType}${addClass}>${escapedValue}</${elemType}>`\n            : `${highlightedLine}${escapedValue}`;\n    }, '');\n    return {\n        oldLine: {\n            prefix: line1.prefix,\n            content: removeInsElements(highlightedLine),\n        },\n        newLine: {\n            prefix: line2.prefix,\n            content: removeDelElements(highlightedLine),\n        },\n    };\n}\n//# sourceMappingURL=render-utils.js.map","import * as renderUtils from './render-utils';\nconst baseTemplatesPath = 'file-summary';\nconst iconsBaseTemplatesPath = 'icon';\nexport function render(diffFiles, hoganUtils) {\n    const files = diffFiles\n        .map(file => hoganUtils.render(baseTemplatesPath, 'line', {\n        fileHtmlId: renderUtils.getHtmlId(file),\n        oldName: file.oldName,\n        newName: file.newName,\n        fileName: renderUtils.filenameDiff(file),\n        deletedLines: '-' + file.deletedLines,\n        addedLines: '+' + file.addedLines,\n    }, {\n        fileIcon: hoganUtils.template(iconsBaseTemplatesPath, renderUtils.getFileIcon(file)),\n    }))\n        .join('\\n');\n    return hoganUtils.render(baseTemplatesPath, 'wrapper', {\n        filesNumber: diffFiles.length,\n        files: files,\n    });\n}\n//# sourceMappingURL=file-list-renderer.js.map","import * as Rematch from './rematch';\nimport * as renderUtils from './render-utils';\nimport { LineType, } from './types';\nexport const defaultLineByLineRendererConfig = Object.assign(Object.assign({}, renderUtils.defaultRenderConfig), { renderNothingWhenEmpty: false, matchingMaxComparisons: 2500, maxLineSizeInBlockForComparison: 200 });\nconst genericTemplatesPath = 'generic';\nconst baseTemplatesPath = 'line-by-line';\nconst iconsBaseTemplatesPath = 'icon';\nconst tagsBaseTemplatesPath = 'tag';\nexport default class LineByLineRenderer {\n    constructor(hoganUtils, config = {}) {\n        this.hoganUtils = hoganUtils;\n        this.config = Object.assign(Object.assign({}, defaultLineByLineRendererConfig), config);\n    }\n    render(diffFiles) {\n        const diffsHtml = diffFiles\n            .map(file => {\n            let diffs;\n            if (file.blocks.length) {\n                diffs = this.generateFileHtml(file);\n            }\n            else {\n                diffs = this.generateEmptyDiff();\n            }\n            return this.makeFileDiffHtml(file, diffs);\n        })\n            .join('\\n');\n        return this.hoganUtils.render(genericTemplatesPath, 'wrapper', { content: diffsHtml });\n    }\n    makeFileDiffHtml(file, diffs) {\n        if (this.config.renderNothingWhenEmpty && Array.isArray(file.blocks) && file.blocks.length === 0)\n            return '';\n        const fileDiffTemplate = this.hoganUtils.template(baseTemplatesPath, 'file-diff');\n        const filePathTemplate = this.hoganUtils.template(genericTemplatesPath, 'file-path');\n        const fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath, 'file');\n        const fileTagTemplate = this.hoganUtils.template(tagsBaseTemplatesPath, renderUtils.getFileIcon(file));\n        return fileDiffTemplate.render({\n            file: file,\n            fileHtmlId: renderUtils.getHtmlId(file),\n            diffs: diffs,\n            filePath: filePathTemplate.render({\n                fileDiffName: renderUtils.filenameDiff(file),\n            }, {\n                fileIcon: fileIconTemplate,\n                fileTag: fileTagTemplate,\n            }),\n        });\n    }\n    generateEmptyDiff() {\n        return this.hoganUtils.render(genericTemplatesPath, 'empty-diff', {\n            contentClass: 'd2h-code-line',\n            CSSLineClass: renderUtils.CSSLineClass,\n        });\n    }\n    generateFileHtml(file) {\n        const matcher = Rematch.newMatcherFn(Rematch.newDistanceFn((e) => renderUtils.deconstructLine(e.content, file.isCombined).content));\n        return file.blocks\n            .map(block => {\n            let lines = this.hoganUtils.render(genericTemplatesPath, 'block-header', {\n                CSSLineClass: renderUtils.CSSLineClass,\n                blockHeader: file.isTooBig ? block.header : renderUtils.escapeForHtml(block.header),\n                lineClass: 'd2h-code-linenumber',\n                contentClass: 'd2h-code-line',\n            });\n            this.applyLineGroupping(block).forEach(([contextLines, oldLines, newLines]) => {\n                if (oldLines.length && newLines.length && !contextLines.length) {\n                    this.applyRematchMatching(oldLines, newLines, matcher).map(([oldLines, newLines]) => {\n                        const { left, right } = this.processChangedLines(file, file.isCombined, oldLines, newLines);\n                        lines += left;\n                        lines += right;\n                    });\n                }\n                else if (contextLines.length) {\n                    contextLines.forEach(line => {\n                        const { prefix, content } = renderUtils.deconstructLine(line.content, file.isCombined);\n                        lines += this.generateSingleLineHtml(file, {\n                            type: renderUtils.CSSLineClass.CONTEXT,\n                            prefix: prefix,\n                            content: content,\n                            oldNumber: line.oldNumber,\n                            newNumber: line.newNumber,\n                        });\n                    });\n                }\n                else if (oldLines.length || newLines.length) {\n                    const { left, right } = this.processChangedLines(file, file.isCombined, oldLines, newLines);\n                    lines += left;\n                    lines += right;\n                }\n                else {\n                    console.error('Unknown state reached while processing groups of lines', contextLines, oldLines, newLines);\n                }\n            });\n            return lines;\n        })\n            .join('\\n');\n    }\n    applyLineGroupping(block) {\n        const blockLinesGroups = [];\n        let oldLines = [];\n        let newLines = [];\n        for (let i = 0; i < block.lines.length; i++) {\n            const diffLine = block.lines[i];\n            if ((diffLine.type !== LineType.INSERT && newLines.length) ||\n                (diffLine.type === LineType.CONTEXT && oldLines.length > 0)) {\n                blockLinesGroups.push([[], oldLines, newLines]);\n                oldLines = [];\n                newLines = [];\n            }\n            if (diffLine.type === LineType.CONTEXT) {\n                blockLinesGroups.push([[diffLine], [], []]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length === 0) {\n                blockLinesGroups.push([[], [], [diffLine]]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length > 0) {\n                newLines.push(diffLine);\n            }\n            else if (diffLine.type === LineType.DELETE) {\n                oldLines.push(diffLine);\n            }\n        }\n        if (oldLines.length || newLines.length) {\n            blockLinesGroups.push([[], oldLines, newLines]);\n            oldLines = [];\n            newLines = [];\n        }\n        return blockLinesGroups;\n    }\n    applyRematchMatching(oldLines, newLines, matcher) {\n        const comparisons = oldLines.length * newLines.length;\n        const maxLineSizeInBlock = Math.max.apply(null, [0].concat(oldLines.concat(newLines).map(elem => elem.content.length)));\n        const doMatching = comparisons < this.config.matchingMaxComparisons &&\n            maxLineSizeInBlock < this.config.maxLineSizeInBlockForComparison &&\n            (this.config.matching === 'lines' || this.config.matching === 'words');\n        return doMatching ? matcher(oldLines, newLines) : [[oldLines, newLines]];\n    }\n    processChangedLines(file, isCombined, oldLines, newLines) {\n        const fileHtml = {\n            right: '',\n            left: '',\n        };\n        const maxLinesNumber = Math.max(oldLines.length, newLines.length);\n        for (let i = 0; i < maxLinesNumber; i++) {\n            const oldLine = oldLines[i];\n            const newLine = newLines[i];\n            const diff = oldLine !== undefined && newLine !== undefined\n                ? renderUtils.diffHighlight(oldLine.content, newLine.content, isCombined, this.config)\n                : undefined;\n            const preparedOldLine = oldLine !== undefined && oldLine.oldNumber !== undefined\n                ? Object.assign(Object.assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.oldLine.prefix,\n                        content: diff.oldLine.content,\n                        type: renderUtils.CSSLineClass.DELETE_CHANGES,\n                    }\n                    : Object.assign(Object.assign({}, renderUtils.deconstructLine(oldLine.content, isCombined)), { type: renderUtils.toCSSClass(oldLine.type) }))), { oldNumber: oldLine.oldNumber, newNumber: oldLine.newNumber }) : undefined;\n            const preparedNewLine = newLine !== undefined && newLine.newNumber !== undefined\n                ? Object.assign(Object.assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.newLine.prefix,\n                        content: diff.newLine.content,\n                        type: renderUtils.CSSLineClass.INSERT_CHANGES,\n                    }\n                    : Object.assign(Object.assign({}, renderUtils.deconstructLine(newLine.content, isCombined)), { type: renderUtils.toCSSClass(newLine.type) }))), { oldNumber: newLine.oldNumber, newNumber: newLine.newNumber }) : undefined;\n            const { left, right } = this.generateLineHtml(file, preparedOldLine, preparedNewLine);\n            fileHtml.left += left;\n            fileHtml.right += right;\n        }\n        return fileHtml;\n    }\n    generateLineHtml(file, oldLine, newLine) {\n        return {\n            left: this.generateSingleLineHtml(file, oldLine),\n            right: this.generateSingleLineHtml(file, newLine),\n        };\n    }\n    generateSingleLineHtml(file, line) {\n        if (line === undefined)\n            return '';\n        const lineNumberHtml = this.hoganUtils.render(baseTemplatesPath, 'numbers', {\n            oldNumber: line.oldNumber || '',\n            newNumber: line.newNumber || '',\n        });\n        return this.hoganUtils.render(genericTemplatesPath, 'line', {\n            type: line.type,\n            lineClass: 'd2h-code-linenumber',\n            contentClass: 'd2h-code-line',\n            prefix: line.prefix === ' ' ? '&nbsp;' : line.prefix,\n            content: line.content,\n            lineNumber: lineNumberHtml,\n            line,\n            file,\n        });\n    }\n}\n//# sourceMappingURL=line-by-line-renderer.js.map","import * as Rematch from './rematch';\nimport * as renderUtils from './render-utils';\nimport { LineType, } from './types';\nexport const defaultSideBySideRendererConfig = Object.assign(Object.assign({}, renderUtils.defaultRenderConfig), { renderNothingWhenEmpty: false, matchingMaxComparisons: 2500, maxLineSizeInBlockForComparison: 200 });\nconst genericTemplatesPath = 'generic';\nconst baseTemplatesPath = 'side-by-side';\nconst iconsBaseTemplatesPath = 'icon';\nconst tagsBaseTemplatesPath = 'tag';\nexport default class SideBySideRenderer {\n    constructor(hoganUtils, config = {}) {\n        this.hoganUtils = hoganUtils;\n        this.config = Object.assign(Object.assign({}, defaultSideBySideRendererConfig), config);\n    }\n    render(diffFiles) {\n        const diffsHtml = diffFiles\n            .map(file => {\n            let diffs;\n            if (file.blocks.length) {\n                diffs = this.generateFileHtml(file);\n            }\n            else {\n                diffs = this.generateEmptyDiff();\n            }\n            return this.makeFileDiffHtml(file, diffs);\n        })\n            .join('\\n');\n        return this.hoganUtils.render(genericTemplatesPath, 'wrapper', { content: diffsHtml });\n    }\n    makeFileDiffHtml(file, diffs) {\n        if (this.config.renderNothingWhenEmpty && Array.isArray(file.blocks) && file.blocks.length === 0)\n            return '';\n        const fileDiffTemplate = this.hoganUtils.template(baseTemplatesPath, 'file-diff');\n        const filePathTemplate = this.hoganUtils.template(genericTemplatesPath, 'file-path');\n        const fileIconTemplate = this.hoganUtils.template(iconsBaseTemplatesPath, 'file');\n        const fileTagTemplate = this.hoganUtils.template(tagsBaseTemplatesPath, renderUtils.getFileIcon(file));\n        return fileDiffTemplate.render({\n            file: file,\n            fileHtmlId: renderUtils.getHtmlId(file),\n            diffs: diffs,\n            filePath: filePathTemplate.render({\n                fileDiffName: renderUtils.filenameDiff(file),\n            }, {\n                fileIcon: fileIconTemplate,\n                fileTag: fileTagTemplate,\n            }),\n        });\n    }\n    generateEmptyDiff() {\n        return {\n            right: '',\n            left: this.hoganUtils.render(genericTemplatesPath, 'empty-diff', {\n                contentClass: 'd2h-code-side-line',\n                CSSLineClass: renderUtils.CSSLineClass,\n            }),\n        };\n    }\n    generateFileHtml(file) {\n        const matcher = Rematch.newMatcherFn(Rematch.newDistanceFn((e) => renderUtils.deconstructLine(e.content, file.isCombined).content));\n        return file.blocks\n            .map(block => {\n            const fileHtml = {\n                left: this.makeHeaderHtml(block.header, file),\n                right: this.makeHeaderHtml(''),\n            };\n            this.applyLineGroupping(block).forEach(([contextLines, oldLines, newLines]) => {\n                if (oldLines.length && newLines.length && !contextLines.length) {\n                    this.applyRematchMatching(oldLines, newLines, matcher).map(([oldLines, newLines]) => {\n                        const { left, right } = this.processChangedLines(file.isCombined, oldLines, newLines);\n                        fileHtml.left += left;\n                        fileHtml.right += right;\n                    });\n                }\n                else if (contextLines.length) {\n                    contextLines.forEach(line => {\n                        const { prefix, content } = renderUtils.deconstructLine(line.content, file.isCombined);\n                        const { left, right } = this.generateLineHtml({\n                            type: renderUtils.CSSLineClass.CONTEXT,\n                            prefix: prefix,\n                            content: content,\n                            number: line.oldNumber,\n                        }, {\n                            type: renderUtils.CSSLineClass.CONTEXT,\n                            prefix: prefix,\n                            content: content,\n                            number: line.newNumber,\n                        });\n                        fileHtml.left += left;\n                        fileHtml.right += right;\n                    });\n                }\n                else if (oldLines.length || newLines.length) {\n                    const { left, right } = this.processChangedLines(file.isCombined, oldLines, newLines);\n                    fileHtml.left += left;\n                    fileHtml.right += right;\n                }\n                else {\n                    console.error('Unknown state reached while processing groups of lines', contextLines, oldLines, newLines);\n                }\n            });\n            return fileHtml;\n        })\n            .reduce((accomulated, html) => {\n            return { left: accomulated.left + html.left, right: accomulated.right + html.right };\n        }, { left: '', right: '' });\n    }\n    applyLineGroupping(block) {\n        const blockLinesGroups = [];\n        let oldLines = [];\n        let newLines = [];\n        for (let i = 0; i < block.lines.length; i++) {\n            const diffLine = block.lines[i];\n            if ((diffLine.type !== LineType.INSERT && newLines.length) ||\n                (diffLine.type === LineType.CONTEXT && oldLines.length > 0)) {\n                blockLinesGroups.push([[], oldLines, newLines]);\n                oldLines = [];\n                newLines = [];\n            }\n            if (diffLine.type === LineType.CONTEXT) {\n                blockLinesGroups.push([[diffLine], [], []]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length === 0) {\n                blockLinesGroups.push([[], [], [diffLine]]);\n            }\n            else if (diffLine.type === LineType.INSERT && oldLines.length > 0) {\n                newLines.push(diffLine);\n            }\n            else if (diffLine.type === LineType.DELETE) {\n                oldLines.push(diffLine);\n            }\n        }\n        if (oldLines.length || newLines.length) {\n            blockLinesGroups.push([[], oldLines, newLines]);\n            oldLines = [];\n            newLines = [];\n        }\n        return blockLinesGroups;\n    }\n    applyRematchMatching(oldLines, newLines, matcher) {\n        const comparisons = oldLines.length * newLines.length;\n        const maxLineSizeInBlock = Math.max.apply(null, [0].concat(oldLines.concat(newLines).map(elem => elem.content.length)));\n        const doMatching = comparisons < this.config.matchingMaxComparisons &&\n            maxLineSizeInBlock < this.config.maxLineSizeInBlockForComparison &&\n            (this.config.matching === 'lines' || this.config.matching === 'words');\n        return doMatching ? matcher(oldLines, newLines) : [[oldLines, newLines]];\n    }\n    makeHeaderHtml(blockHeader, file) {\n        return this.hoganUtils.render(genericTemplatesPath, 'block-header', {\n            CSSLineClass: renderUtils.CSSLineClass,\n            blockHeader: (file === null || file === void 0 ? void 0 : file.isTooBig) ? blockHeader : renderUtils.escapeForHtml(blockHeader),\n            lineClass: 'd2h-code-side-linenumber',\n            contentClass: 'd2h-code-side-line',\n        });\n    }\n    processChangedLines(isCombined, oldLines, newLines) {\n        const fileHtml = {\n            right: '',\n            left: '',\n        };\n        const maxLinesNumber = Math.max(oldLines.length, newLines.length);\n        for (let i = 0; i < maxLinesNumber; i++) {\n            const oldLine = oldLines[i];\n            const newLine = newLines[i];\n            const diff = oldLine !== undefined && newLine !== undefined\n                ? renderUtils.diffHighlight(oldLine.content, newLine.content, isCombined, this.config)\n                : undefined;\n            const preparedOldLine = oldLine !== undefined && oldLine.oldNumber !== undefined\n                ? Object.assign(Object.assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.oldLine.prefix,\n                        content: diff.oldLine.content,\n                        type: renderUtils.CSSLineClass.DELETE_CHANGES,\n                    }\n                    : Object.assign(Object.assign({}, renderUtils.deconstructLine(oldLine.content, isCombined)), { type: renderUtils.toCSSClass(oldLine.type) }))), { number: oldLine.oldNumber }) : undefined;\n            const preparedNewLine = newLine !== undefined && newLine.newNumber !== undefined\n                ? Object.assign(Object.assign({}, (diff !== undefined\n                    ? {\n                        prefix: diff.newLine.prefix,\n                        content: diff.newLine.content,\n                        type: renderUtils.CSSLineClass.INSERT_CHANGES,\n                    }\n                    : Object.assign(Object.assign({}, renderUtils.deconstructLine(newLine.content, isCombined)), { type: renderUtils.toCSSClass(newLine.type) }))), { number: newLine.newNumber }) : undefined;\n            const { left, right } = this.generateLineHtml(preparedOldLine, preparedNewLine);\n            fileHtml.left += left;\n            fileHtml.right += right;\n        }\n        return fileHtml;\n    }\n    generateLineHtml(oldLine, newLine) {\n        return {\n            left: this.generateSingleHtml(oldLine),\n            right: this.generateSingleHtml(newLine),\n        };\n    }\n    generateSingleHtml(line) {\n        const lineClass = 'd2h-code-side-linenumber';\n        const contentClass = 'd2h-code-side-line';\n        return this.hoganUtils.render(genericTemplatesPath, 'line', {\n            type: (line === null || line === void 0 ? void 0 : line.type) || `${renderUtils.CSSLineClass.CONTEXT} d2h-emptyplaceholder`,\n            lineClass: line !== undefined ? lineClass : `${lineClass} d2h-code-side-emptyplaceholder`,\n            contentClass: line !== undefined ? contentClass : `${contentClass} d2h-code-side-emptyplaceholder`,\n            prefix: (line === null || line === void 0 ? void 0 : line.prefix) === ' ' ? '&nbsp;' : line === null || line === void 0 ? void 0 : line.prefix,\n            content: line === null || line === void 0 ? void 0 : line.content,\n            lineNumber: line === null || line === void 0 ? void 0 : line.number,\n        });\n    }\n}\n//# sourceMappingURL=side-by-side-renderer.js.map","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n(function (Hogan) {\n  // Setup regex  assignments\n  // remove whitespace according to Mustache spec\n  var rIsWhitespace = /\\S/,\n      rQuot = /\\\"/g,\n      rNewline =  /\\n/g,\n      rCr = /\\r/g,\n      rSlash = /\\\\/g,\n      rLineSep = /\\u2028/,\n      rParagraphSep = /\\u2029/;\n\n  Hogan.tags = {\n    '#': 1, '^': 2, '<': 3, '$': 4,\n    '/': 5, '!': 6, '>': 7, '=': 8, '_v': 9,\n    '{': 10, '&': 11, '_t': 12\n  };\n\n  Hogan.scan = function scan(text, delimiters) {\n    var len = text.length,\n        IN_TEXT = 0,\n        IN_TAG_TYPE = 1,\n        IN_TAG = 2,\n        state = IN_TEXT,\n        tagType = null,\n        tag = null,\n        buf = '',\n        tokens = [],\n        seenTag = false,\n        i = 0,\n        lineStart = 0,\n        otag = '{{',\n        ctag = '}}';\n\n    function addBuf() {\n      if (buf.length > 0) {\n        tokens.push({tag: '_t', text: new String(buf)});\n        buf = '';\n      }\n    }\n\n    function lineIsWhitespace() {\n      var isAllWhitespace = true;\n      for (var j = lineStart; j < tokens.length; j++) {\n        isAllWhitespace =\n          (Hogan.tags[tokens[j].tag] < Hogan.tags['_v']) ||\n          (tokens[j].tag == '_t' && tokens[j].text.match(rIsWhitespace) === null);\n        if (!isAllWhitespace) {\n          return false;\n        }\n      }\n\n      return isAllWhitespace;\n    }\n\n    function filterLine(haveSeenTag, noNewLine) {\n      addBuf();\n\n      if (haveSeenTag && lineIsWhitespace()) {\n        for (var j = lineStart, next; j < tokens.length; j++) {\n          if (tokens[j].text) {\n            if ((next = tokens[j+1]) && next.tag == '>') {\n              // set indent to token value\n              next.indent = tokens[j].text.toString()\n            }\n            tokens.splice(j, 1);\n          }\n        }\n      } else if (!noNewLine) {\n        tokens.push({tag:'\\n'});\n      }\n\n      seenTag = false;\n      lineStart = tokens.length;\n    }\n\n    function changeDelimiters(text, index) {\n      var close = '=' + ctag,\n          closeIndex = text.indexOf(close, index),\n          delimiters = trim(\n            text.substring(text.indexOf('=', index) + 1, closeIndex)\n          ).split(' ');\n\n      otag = delimiters[0];\n      ctag = delimiters[delimiters.length - 1];\n\n      return closeIndex + close.length - 1;\n    }\n\n    if (delimiters) {\n      delimiters = delimiters.split(' ');\n      otag = delimiters[0];\n      ctag = delimiters[1];\n    }\n\n    for (i = 0; i < len; i++) {\n      if (state == IN_TEXT) {\n        if (tagChange(otag, text, i)) {\n          --i;\n          addBuf();\n          state = IN_TAG_TYPE;\n        } else {\n          if (text.charAt(i) == '\\n') {\n            filterLine(seenTag);\n          } else {\n            buf += text.charAt(i);\n          }\n        }\n      } else if (state == IN_TAG_TYPE) {\n        i += otag.length - 1;\n        tag = Hogan.tags[text.charAt(i + 1)];\n        tagType = tag ? text.charAt(i + 1) : '_v';\n        if (tagType == '=') {\n          i = changeDelimiters(text, i);\n          state = IN_TEXT;\n        } else {\n          if (tag) {\n            i++;\n          }\n          state = IN_TAG;\n        }\n        seenTag = i;\n      } else {\n        if (tagChange(ctag, text, i)) {\n          tokens.push({tag: tagType, n: trim(buf), otag: otag, ctag: ctag,\n                       i: (tagType == '/') ? seenTag - otag.length : i + ctag.length});\n          buf = '';\n          i += ctag.length - 1;\n          state = IN_TEXT;\n          if (tagType == '{') {\n            if (ctag == '}}') {\n              i++;\n            } else {\n              cleanTripleStache(tokens[tokens.length - 1]);\n            }\n          }\n        } else {\n          buf += text.charAt(i);\n        }\n      }\n    }\n\n    filterLine(seenTag, true);\n\n    return tokens;\n  }\n\n  function cleanTripleStache(token) {\n    if (token.n.substr(token.n.length - 1) === '}') {\n      token.n = token.n.substring(0, token.n.length - 1);\n    }\n  }\n\n  function trim(s) {\n    if (s.trim) {\n      return s.trim();\n    }\n\n    return s.replace(/^\\s*|\\s*$/g, '');\n  }\n\n  function tagChange(tag, text, index) {\n    if (text.charAt(index) != tag.charAt(0)) {\n      return false;\n    }\n\n    for (var i = 1, l = tag.length; i < l; i++) {\n      if (text.charAt(index + i) != tag.charAt(i)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // the tags allowed inside super templates\n  var allowedInSuper = {'_t': true, '\\n': true, '$': true, '/': true};\n\n  function buildTree(tokens, kind, stack, customTags) {\n    var instructions = [],\n        opener = null,\n        tail = null,\n        token = null;\n\n    tail = stack[stack.length - 1];\n\n    while (tokens.length > 0) {\n      token = tokens.shift();\n\n      if (tail && tail.tag == '<' && !(token.tag in allowedInSuper)) {\n        throw new Error('Illegal content in < super tag.');\n      }\n\n      if (Hogan.tags[token.tag] <= Hogan.tags['$'] || isOpener(token, customTags)) {\n        stack.push(token);\n        token.nodes = buildTree(tokens, token.tag, stack, customTags);\n      } else if (token.tag == '/') {\n        if (stack.length === 0) {\n          throw new Error('Closing tag without opener: /' + token.n);\n        }\n        opener = stack.pop();\n        if (token.n != opener.n && !isCloser(token.n, opener.n, customTags)) {\n          throw new Error('Nesting error: ' + opener.n + ' vs. ' + token.n);\n        }\n        opener.end = token.i;\n        return instructions;\n      } else if (token.tag == '\\n') {\n        token.last = (tokens.length == 0) || (tokens[0].tag == '\\n');\n      }\n\n      instructions.push(token);\n    }\n\n    if (stack.length > 0) {\n      throw new Error('missing closing tag: ' + stack.pop().n);\n    }\n\n    return instructions;\n  }\n\n  function isOpener(token, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].o == token.n) {\n        token.tag = '#';\n        return true;\n      }\n    }\n  }\n\n  function isCloser(close, open, tags) {\n    for (var i = 0, l = tags.length; i < l; i++) {\n      if (tags[i].c == close && tags[i].o == open) {\n        return true;\n      }\n    }\n  }\n\n  function stringifySubstitutions(obj) {\n    var items = [];\n    for (var key in obj) {\n      items.push('\"' + esc(key) + '\": function(c,p,t,i) {' + obj[key] + '}');\n    }\n    return \"{ \" + items.join(\",\") + \" }\";\n  }\n\n  function stringifyPartials(codeObj) {\n    var partials = [];\n    for (var key in codeObj.partials) {\n      partials.push('\"' + esc(key) + '\":{name:\"' + esc(codeObj.partials[key].name) + '\", ' + stringifyPartials(codeObj.partials[key]) + \"}\");\n    }\n    return \"partials: {\" + partials.join(\",\") + \"}, subs: \" + stringifySubstitutions(codeObj.subs);\n  }\n\n  Hogan.stringify = function(codeObj, text, options) {\n    return \"{code: function (c,p,i) { \" + Hogan.wrapMain(codeObj.code) + \" },\" + stringifyPartials(codeObj) +  \"}\";\n  }\n\n  var serialNo = 0;\n  Hogan.generate = function(tree, text, options) {\n    serialNo = 0;\n    var context = { code: '', subs: {}, partials: {} };\n    Hogan.walk(tree, context);\n\n    if (options.asString) {\n      return this.stringify(context, text, options);\n    }\n\n    return this.makeTemplate(context, text, options);\n  }\n\n  Hogan.wrapMain = function(code) {\n    return 'var t=this;t.b(i=i||\"\");' + code + 'return t.fl();';\n  }\n\n  Hogan.template = Hogan.Template;\n\n  Hogan.makeTemplate = function(codeObj, text, options) {\n    var template = this.makePartials(codeObj);\n    template.code = new Function('c', 'p', 'i', this.wrapMain(codeObj.code));\n    return new this.template(template, text, this, options);\n  }\n\n  Hogan.makePartials = function(codeObj) {\n    var key, template = {subs: {}, partials: codeObj.partials, name: codeObj.name};\n    for (key in template.partials) {\n      template.partials[key] = this.makePartials(template.partials[key]);\n    }\n    for (key in codeObj.subs) {\n      template.subs[key] = new Function('c', 'p', 't', 'i', codeObj.subs[key]);\n    }\n    return template;\n  }\n\n  function esc(s) {\n    return s.replace(rSlash, '\\\\\\\\')\n            .replace(rQuot, '\\\\\\\"')\n            .replace(rNewline, '\\\\n')\n            .replace(rCr, '\\\\r')\n            .replace(rLineSep, '\\\\u2028')\n            .replace(rParagraphSep, '\\\\u2029');\n  }\n\n  function chooseMethod(s) {\n    return (~s.indexOf('.')) ? 'd' : 'f';\n  }\n\n  function createPartial(node, context) {\n    var prefix = \"<\" + (context.prefix || \"\");\n    var sym = prefix + node.n + serialNo++;\n    context.partials[sym] = {name: node.n, partials: {}};\n    context.code += 't.b(t.rp(\"' +  esc(sym) + '\",c,p,\"' + (node.indent || '') + '\"));';\n    return sym;\n  }\n\n  Hogan.codegen = {\n    '#': function(node, context) {\n      context.code += 'if(t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),' +\n                      'c,p,0,' + node.i + ',' + node.end + ',\"' + node.otag + \" \" + node.ctag + '\")){' +\n                      't.rs(c,p,' + 'function(c,p,t){';\n      Hogan.walk(node.nodes, context);\n      context.code += '});c.pop();}';\n    },\n\n    '^': function(node, context) {\n      context.code += 'if(!t.s(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,1),c,p,1,0,0,\"\")){';\n      Hogan.walk(node.nodes, context);\n      context.code += '};';\n    },\n\n    '>': createPartial,\n    '<': function(node, context) {\n      var ctx = {partials: {}, code: '', subs: {}, inPartial: true};\n      Hogan.walk(node.nodes, ctx);\n      var template = context.partials[createPartial(node, context)];\n      template.subs = ctx.subs;\n      template.partials = ctx.partials;\n    },\n\n    '$': function(node, context) {\n      var ctx = {subs: {}, code: '', partials: context.partials, prefix: node.n};\n      Hogan.walk(node.nodes, ctx);\n      context.subs[node.n] = ctx.code;\n      if (!context.inPartial) {\n        context.code += 't.sub(\"' + esc(node.n) + '\",c,p,i);';\n      }\n    },\n\n    '\\n': function(node, context) {\n      context.code += write('\"\\\\n\"' + (node.last ? '' : ' + i'));\n    },\n\n    '_v': function(node, context) {\n      context.code += 't.b(t.v(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n    },\n\n    '_t': function(node, context) {\n      context.code += write('\"' + esc(node.text) + '\"');\n    },\n\n    '{': tripleStache,\n\n    '&': tripleStache\n  }\n\n  function tripleStache(node, context) {\n    context.code += 't.b(t.t(t.' + chooseMethod(node.n) + '(\"' + esc(node.n) + '\",c,p,0)));';\n  }\n\n  function write(s) {\n    return 't.b(' + s + ');';\n  }\n\n  Hogan.walk = function(nodelist, context) {\n    var func;\n    for (var i = 0, l = nodelist.length; i < l; i++) {\n      func = Hogan.codegen[nodelist[i].tag];\n      func && func(nodelist[i], context);\n    }\n    return context;\n  }\n\n  Hogan.parse = function(tokens, text, options) {\n    options = options || {};\n    return buildTree(tokens, '', [], options.sectionTags || []);\n  }\n\n  Hogan.cache = {};\n\n  Hogan.cacheKey = function(text, options) {\n    return [text, !!options.asString, !!options.disableLambda, options.delimiters, !!options.modelGet].join('||');\n  }\n\n  Hogan.compile = function(text, options) {\n    options = options || {};\n    var key = Hogan.cacheKey(text, options);\n    var template = this.cache[key];\n\n    if (template) {\n      var partials = template.partials;\n      for (var name in partials) {\n        delete partials[name].instance;\n      }\n      return template;\n    }\n\n    template = this.generate(this.parse(this.scan(text, options.delimiters), text, options), text, options);\n    return this.cache[key] = template;\n  }\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\nvar Hogan = {};\n\n(function (Hogan) {\n  Hogan.Template = function (codeObj, text, compiler, options) {\n    codeObj = codeObj || {};\n    this.r = codeObj.code || this.r;\n    this.c = compiler;\n    this.options = options || {};\n    this.text = text || '';\n    this.partials = codeObj.partials || {};\n    this.subs = codeObj.subs || {};\n    this.buf = '';\n  }\n\n  Hogan.Template.prototype = {\n    // render: replaced by generated code.\n    r: function (context, partials, indent) { return ''; },\n\n    // variable escaping\n    v: hoganEscape,\n\n    // triple stache\n    t: coerceToString,\n\n    render: function render(context, partials, indent) {\n      return this.ri([context], partials || {}, indent);\n    },\n\n    // render internal -- a hook for overrides that catches partials too\n    ri: function (context, partials, indent) {\n      return this.r(context, partials, indent);\n    },\n\n    // ensurePartial\n    ep: function(symbol, partials) {\n      var partial = this.partials[symbol];\n\n      // check to see that if we've instantiated this partial before\n      var template = partials[partial.name];\n      if (partial.instance && partial.base == template) {\n        return partial.instance;\n      }\n\n      if (typeof template == 'string') {\n        if (!this.c) {\n          throw new Error(\"No compiler available.\");\n        }\n        template = this.c.compile(template, this.options);\n      }\n\n      if (!template) {\n        return null;\n      }\n\n      // We use this to check whether the partials dictionary has changed\n      this.partials[symbol].base = template;\n\n      if (partial.subs) {\n        // Make sure we consider parent template now\n        if (!partials.stackText) partials.stackText = {};\n        for (key in partial.subs) {\n          if (!partials.stackText[key]) {\n            partials.stackText[key] = (this.activeSub !== undefined && partials.stackText[this.activeSub]) ? partials.stackText[this.activeSub] : this.text;\n          }\n        }\n        template = createSpecializedPartial(template, partial.subs, partial.partials,\n          this.stackSubs, this.stackPartials, partials.stackText);\n      }\n      this.partials[symbol].instance = template;\n\n      return template;\n    },\n\n    // tries to find a partial in the current scope and render it\n    rp: function(symbol, context, partials, indent) {\n      var partial = this.ep(symbol, partials);\n      if (!partial) {\n        return '';\n      }\n\n      return partial.ri(context, partials, indent);\n    },\n\n    // render a section\n    rs: function(context, partials, section) {\n      var tail = context[context.length - 1];\n\n      if (!isArray(tail)) {\n        section(context, partials, this);\n        return;\n      }\n\n      for (var i = 0; i < tail.length; i++) {\n        context.push(tail[i]);\n        section(context, partials, this);\n        context.pop();\n      }\n    },\n\n    // maybe start a section\n    s: function(val, ctx, partials, inverted, start, end, tags) {\n      var pass;\n\n      if (isArray(val) && val.length === 0) {\n        return false;\n      }\n\n      if (typeof val == 'function') {\n        val = this.ms(val, ctx, partials, inverted, start, end, tags);\n      }\n\n      pass = !!val;\n\n      if (!inverted && pass && ctx) {\n        ctx.push((typeof val == 'object') ? val : ctx[ctx.length - 1]);\n      }\n\n      return pass;\n    },\n\n    // find values with dotted names\n    d: function(key, ctx, partials, returnFound) {\n      var found,\n          names = key.split('.'),\n          val = this.f(names[0], ctx, partials, returnFound),\n          doModelGet = this.options.modelGet,\n          cx = null;\n\n      if (key === '.' && isArray(ctx[ctx.length - 2])) {\n        val = ctx[ctx.length - 1];\n      } else {\n        for (var i = 1; i < names.length; i++) {\n          found = findInScope(names[i], val, doModelGet);\n          if (found !== undefined) {\n            cx = val;\n            val = found;\n          } else {\n            val = '';\n          }\n        }\n      }\n\n      if (returnFound && !val) {\n        return false;\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        ctx.push(cx);\n        val = this.mv(val, ctx, partials);\n        ctx.pop();\n      }\n\n      return val;\n    },\n\n    // find values with normal names\n    f: function(key, ctx, partials, returnFound) {\n      var val = false,\n          v = null,\n          found = false,\n          doModelGet = this.options.modelGet;\n\n      for (var i = ctx.length - 1; i >= 0; i--) {\n        v = ctx[i];\n        val = findInScope(key, v, doModelGet);\n        if (val !== undefined) {\n          found = true;\n          break;\n        }\n      }\n\n      if (!found) {\n        return (returnFound) ? false : \"\";\n      }\n\n      if (!returnFound && typeof val == 'function') {\n        val = this.mv(val, ctx, partials);\n      }\n\n      return val;\n    },\n\n    // higher order templates\n    ls: function(func, cx, partials, text, tags) {\n      var oldTags = this.options.delimiters;\n\n      this.options.delimiters = tags;\n      this.b(this.ct(coerceToString(func.call(cx, text)), cx, partials));\n      this.options.delimiters = oldTags;\n\n      return false;\n    },\n\n    // compile text\n    ct: function(text, cx, partials) {\n      if (this.options.disableLambda) {\n        throw new Error('Lambda features disabled.');\n      }\n      return this.c.compile(text, this.options).render(cx, partials);\n    },\n\n    // template result buffering\n    b: function(s) { this.buf += s; },\n\n    fl: function() { var r = this.buf; this.buf = ''; return r; },\n\n    // method replace section\n    ms: function(func, ctx, partials, inverted, start, end, tags) {\n      var textSource,\n          cx = ctx[ctx.length - 1],\n          result = func.call(cx);\n\n      if (typeof result == 'function') {\n        if (inverted) {\n          return true;\n        } else {\n          textSource = (this.activeSub && this.subsText && this.subsText[this.activeSub]) ? this.subsText[this.activeSub] : this.text;\n          return this.ls(result, cx, partials, textSource.substring(start, end), tags);\n        }\n      }\n\n      return result;\n    },\n\n    // method replace variable\n    mv: function(func, ctx, partials) {\n      var cx = ctx[ctx.length - 1];\n      var result = func.call(cx);\n\n      if (typeof result == 'function') {\n        return this.ct(coerceToString(result.call(cx)), cx, partials);\n      }\n\n      return result;\n    },\n\n    sub: function(name, context, partials, indent) {\n      var f = this.subs[name];\n      if (f) {\n        this.activeSub = name;\n        f(context, partials, this, indent);\n        this.activeSub = false;\n      }\n    }\n\n  };\n\n  //Find a key in an object\n  function findInScope(key, scope, doModelGet) {\n    var val;\n\n    if (scope && typeof scope == 'object') {\n\n      if (scope[key] !== undefined) {\n        val = scope[key];\n\n      // try lookup with get for backbone or similar model data\n      } else if (doModelGet && scope.get && typeof scope.get == 'function') {\n        val = scope.get(key);\n      }\n    }\n\n    return val;\n  }\n\n  function createSpecializedPartial(instance, subs, partials, stackSubs, stackPartials, stackText) {\n    function PartialTemplate() {};\n    PartialTemplate.prototype = instance;\n    function Substitutions() {};\n    Substitutions.prototype = instance.subs;\n    var key;\n    var partial = new PartialTemplate();\n    partial.subs = new Substitutions();\n    partial.subsText = {};  //hehe. substext.\n    partial.buf = '';\n\n    stackSubs = stackSubs || {};\n    partial.stackSubs = stackSubs;\n    partial.subsText = stackText;\n    for (key in subs) {\n      if (!stackSubs[key]) stackSubs[key] = subs[key];\n    }\n    for (key in stackSubs) {\n      partial.subs[key] = stackSubs[key];\n    }\n\n    stackPartials = stackPartials || {};\n    partial.stackPartials = stackPartials;\n    for (key in partials) {\n      if (!stackPartials[key]) stackPartials[key] = partials[key];\n    }\n    for (key in stackPartials) {\n      partial.partials[key] = stackPartials[key];\n    }\n\n    return partial;\n  }\n\n  var rAmp = /&/g,\n      rLt = /</g,\n      rGt = />/g,\n      rApos = /\\'/g,\n      rQuot = /\\\"/g,\n      hChars = /[&<>\\\"\\']/;\n\n  function coerceToString(val) {\n    return String((val === null || val === undefined) ? '' : val);\n  }\n\n  function hoganEscape(str) {\n    str = coerceToString(str);\n    return hChars.test(str) ?\n      str\n        .replace(rAmp, '&amp;')\n        .replace(rLt, '&lt;')\n        .replace(rGt, '&gt;')\n        .replace(rApos, '&#39;')\n        .replace(rQuot, '&quot;') :\n      str;\n  }\n\n  var isArray = Array.isArray || function(a) {\n    return Object.prototype.toString.call(a) === '[object Array]';\n  };\n\n})(typeof exports !== 'undefined' ? exports : Hogan);\n","/*\n *  Copyright 2011 Twitter, Inc.\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *  http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n */\n\n// This file is for use with Node.js. See dist/ for browser files.\n\nvar Hogan = require('./compiler');\nHogan.Template = require('./template').Template;\nHogan.template = Hogan.Template;\nmodule.exports = Hogan;\n","import * as Hogan from \"hogan.js\";\nexport const defaultTemplates = {};\ndefaultTemplates[\"file-summary-line\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<li class=\\\"d2h-file-list-line\\\">\"); t.b(\"\\n\" + i); t.b(\"    <span class=\\\"d2h-file-name-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(t.rp(\"<fileIcon0\", c, p, \"      \")); t.b(\"      <a href=\\\"#\"); t.b(t.v(t.f(\"fileHtmlId\", c, p, 0))); t.b(\"\\\" class=\\\"d2h-file-name\\\">\"); t.b(t.v(t.f(\"fileName\", c, p, 0))); t.b(\"</a>\"); t.b(\"\\n\" + i); t.b(\"      <span class=\\\"d2h-file-stats\\\">\"); t.b(\"\\n\" + i); t.b(\"          <span class=\\\"d2h-lines-added\\\">\"); t.b(t.v(t.f(\"addedLines\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); t.b(\"          <span class=\\\"d2h-lines-deleted\\\">\"); t.b(t.v(t.f(\"deletedLines\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); t.b(\"      </span>\"); t.b(\"\\n\" + i); t.b(\"    </span>\"); t.b(\"\\n\" + i); t.b(\"</li>\"); return t.fl(); }, partials: { \"<fileIcon0\": { name: \"fileIcon\", partials: {}, subs: {} } }, subs: {} });\ndefaultTemplates[\"file-summary-wrapper\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div class=\\\"d2h-file-list-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-list-header\\\">\"); t.b(\"\\n\" + i); t.b(\"        <span class=\\\"d2h-file-list-title\\\">Files changed (\"); t.b(t.v(t.f(\"filesNumber\", c, p, 0))); t.b(\")</span>\"); t.b(\"\\n\" + i); t.b(\"        <a class=\\\"d2h-file-switch d2h-hide\\\">hide</a>\"); t.b(\"\\n\" + i); t.b(\"        <a class=\\\"d2h-file-switch d2h-show\\\">show</a>\"); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"    <ol class=\\\"d2h-file-list\\\">\"); t.b(\"\\n\" + i); t.b(\"    \"); t.b(t.t(t.f(\"files\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </ol>\"); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-block-header\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<tr>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.f(\"lineClass\", c, p, 0))); t.b(\" \"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\"></td>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"\"); t.b(t.v(t.f(\"contentClass\", c, p, 0))); t.b(\"\\\">\"); if (t.s(t.f(\"blockHeader\", c, p, 1), c, p, 0, 156, 173, \"{{ }}\")) {\n        t.rs(c, p, function (c, p, t) { t.b(t.t(t.f(\"blockHeader\", c, p, 0))); });\n        c.pop();\n    } if (!t.s(t.f(\"blockHeader\", c, p, 1), c, p, 1, 0, 0, \"\")) {\n        t.b(\"&nbsp;\");\n    } ; t.b(\"</div>\"); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"</tr>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-empty-diff\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<tr>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.d(\"CSSLineClass.INFO\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"\"); t.b(t.v(t.f(\"contentClass\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"            File without changes\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"</tr>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-file-path\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-file-name-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(t.rp(\"<fileIcon0\", c, p, \"    \")); t.b(\"    <span class=\\\"d2h-file-name\\\">\"); t.b(t.v(t.f(\"fileDiffName\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); t.b(t.rp(\"<fileTag1\", c, p, \"    \")); t.b(\"</span>\"); t.b(\"\\n\" + i); t.b(\"<label class=\\\"d2h-file-collapse\\\">\"); t.b(\"\\n\" + i); t.b(\"    <input class=\\\"d2h-file-collapse-input\\\" type=\\\"checkbox\\\" name=\\\"viewed\\\" value=\\\"viewed\\\">\"); t.b(\"\\n\" + i); t.b(\"    Viewed\"); t.b(\"\\n\" + i); t.b(\"</label>\"); return t.fl(); }, partials: { \"<fileIcon0\": { name: \"fileIcon\", partials: {}, subs: {} }, \"<fileTag1\": { name: \"fileTag\", partials: {}, subs: {} } }, subs: {} });\ndefaultTemplates[\"generic-line\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<tr>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.f(\"lineClass\", c, p, 0))); t.b(\" \"); t.b(t.v(t.f(\"type\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"      \"); t.b(t.t(t.f(\"lineNumber\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"    <td class=\\\"\"); t.b(t.v(t.f(\"type\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"\"); t.b(t.v(t.f(\"contentClass\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); if (t.s(t.f(\"prefix\", c, p, 1), c, p, 0, 162, 238, \"{{ }}\")) {\n        t.rs(c, p, function (c, p, t) { t.b(\"            <span class=\\\"d2h-code-line-prefix\\\">\"); t.b(t.t(t.f(\"prefix\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); });\n        c.pop();\n    } if (!t.s(t.f(\"prefix\", c, p, 1), c, p, 1, 0, 0, \"\")) {\n        t.b(\"            <span class=\\\"d2h-code-line-prefix\\\">&nbsp;</span>\");\n        t.b(\"\\n\" + i);\n    } ; if (t.s(t.f(\"content\", c, p, 1), c, p, 0, 371, 445, \"{{ }}\")) {\n        t.rs(c, p, function (c, p, t) { t.b(\"            <span class=\\\"d2h-code-line-ctn\\\">\"); t.b(t.t(t.f(\"content\", c, p, 0))); t.b(\"</span>\"); t.b(\"\\n\" + i); });\n        c.pop();\n    } if (!t.s(t.f(\"content\", c, p, 1), c, p, 1, 0, 0, \"\")) {\n        t.b(\"            <span class=\\\"d2h-code-line-ctn\\\"><br></span>\");\n        t.b(\"\\n\" + i);\n    } ; t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </td>\"); t.b(\"\\n\" + i); t.b(\"</tr>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"generic-wrapper\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div class=\\\"d2h-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"    \"); t.b(t.t(t.f(\"content\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-added\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-added\\\" height=\\\"16\\\" title=\\\"added\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 14 16\\\"\"); t.b(\"\\n\" + i); t.b(\"     width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM6 9H3V7h3V4h2v3h3v2H8v3H6V9z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-changed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-changed\\\" height=\\\"16\\\" title=\\\"modified\\\" version=\\\"1.1\\\"\"); t.b(\"\\n\" + i); t.b(\"     viewBox=\\\"0 0 14 16\\\" width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM4 8c0-1.66 1.34-3 3-3s3 1.34 3 3-1.34 3-3 3-3-1.34-3-3z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-deleted\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-deleted\\\" height=\\\"16\\\" title=\\\"removed\\\" version=\\\"1.1\\\"\"); t.b(\"\\n\" + i); t.b(\"     viewBox=\\\"0 0 14 16\\\" width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M13 1H1C0.45 1 0 1.45 0 2v12c0 0.55 0.45 1 1 1h12c0.55 0 1-0.45 1-1V2c0-0.55-0.45-1-1-1z m0 13H1V2h12v12zM11 9H3V7h8v2z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file-renamed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon d2h-moved\\\" height=\\\"16\\\" title=\\\"renamed\\\" version=\\\"1.1\\\"\"); t.b(\"\\n\" + i); t.b(\"     viewBox=\\\"0 0 14 16\\\" width=\\\"14\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M6 9H3V7h3V4l5 4-5 4V9z m8-7v12c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h12c0.55 0 1 0.45 1 1z m-1 0H1v12h12V2z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"icon-file\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<svg aria-hidden=\\\"true\\\" class=\\\"d2h-icon\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 12 16\\\" width=\\\"12\\\">\"); t.b(\"\\n\" + i); t.b(\"    <path d=\\\"M6 5H2v-1h4v1zM2 8h7v-1H2v1z m0 2h7v-1H2v1z m0 2h7v-1H2v1z m10-7.5v9.5c0 0.55-0.45 1-1 1H1c-0.55 0-1-0.45-1-1V2c0-0.55 0.45-1 1-1h7.5l3.5 3.5z m-1 0.5L8 2H1v12h10V5z\\\"></path>\"); t.b(\"\\n\" + i); t.b(\"</svg>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"line-by-line-file-diff\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div id=\\\"\"); t.b(t.v(t.f(\"fileHtmlId\", c, p, 0))); t.b(\"\\\" class=\\\"d2h-file-wrapper\\\" data-lang=\\\"\"); t.b(t.v(t.d(\"file.language\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-header\\\">\"); t.b(\"\\n\" + i); t.b(\"    \"); t.b(t.t(t.f(\"filePath\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"d2h-code-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"            <table class=\\\"d2h-diff-table\\\">\"); t.b(\"\\n\" + i); t.b(\"                <tbody class=\\\"d2h-diff-tbody\\\">\"); t.b(\"\\n\" + i); t.b(\"                \"); t.b(t.t(t.f(\"diffs\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"                </tbody>\"); t.b(\"\\n\" + i); t.b(\"            </table>\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"line-by-line-numbers\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div class=\\\"line-num1\\\">\"); t.b(t.v(t.f(\"oldNumber\", c, p, 0))); t.b(\"</div>\"); t.b(\"\\n\" + i); t.b(\"<div class=\\\"line-num2\\\">\"); t.b(t.v(t.f(\"newNumber\", c, p, 0))); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"side-by-side-file-diff\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<div id=\\\"\"); t.b(t.v(t.f(\"fileHtmlId\", c, p, 0))); t.b(\"\\\" class=\\\"d2h-file-wrapper\\\" data-lang=\\\"\"); t.b(t.v(t.d(\"file.language\", c, p, 0))); t.b(\"\\\">\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-file-header\\\">\"); t.b(\"\\n\" + i); t.b(\"      \"); t.b(t.t(t.f(\"filePath\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"    <div class=\\\"d2h-files-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"d2h-file-side-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"            <div class=\\\"d2h-code-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"                <table class=\\\"d2h-diff-table\\\">\"); t.b(\"\\n\" + i); t.b(\"                    <tbody class=\\\"d2h-diff-tbody\\\">\"); t.b(\"\\n\" + i); t.b(\"                    \"); t.b(t.t(t.d(\"diffs.left\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"                    </tbody>\"); t.b(\"\\n\" + i); t.b(\"                </table>\"); t.b(\"\\n\" + i); t.b(\"            </div>\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"        <div class=\\\"d2h-file-side-diff\\\">\"); t.b(\"\\n\" + i); t.b(\"            <div class=\\\"d2h-code-wrapper\\\">\"); t.b(\"\\n\" + i); t.b(\"                <table class=\\\"d2h-diff-table\\\">\"); t.b(\"\\n\" + i); t.b(\"                    <tbody class=\\\"d2h-diff-tbody\\\">\"); t.b(\"\\n\" + i); t.b(\"                    \"); t.b(t.t(t.d(\"diffs.right\", c, p, 0))); t.b(\"\\n\" + i); t.b(\"                    </tbody>\"); t.b(\"\\n\" + i); t.b(\"                </table>\"); t.b(\"\\n\" + i); t.b(\"            </div>\"); t.b(\"\\n\" + i); t.b(\"        </div>\"); t.b(\"\\n\" + i); t.b(\"    </div>\"); t.b(\"\\n\" + i); t.b(\"</div>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-added\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-added d2h-added-tag\\\">ADDED</span>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-changed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-changed d2h-changed-tag\\\">CHANGED</span>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-deleted\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-deleted d2h-deleted-tag\\\">DELETED</span>\"); return t.fl(); }, partials: {}, subs: {} });\ndefaultTemplates[\"tag-file-renamed\"] = new Hogan.Template({ code: function (c, p, i) { var t = this; t.b(i = i || \"\"); t.b(\"<span class=\\\"d2h-tag d2h-moved d2h-moved-tag\\\">RENAMED</span>\"); return t.fl(); }, partials: {}, subs: {} });\n//# sourceMappingURL=diff2html-templates.js.map","import * as Hogan from 'hogan.js';\nimport { defaultTemplates } from './diff2html-templates';\nexport default class HoganJsUtils {\n    constructor({ compiledTemplates = {}, rawTemplates = {} }) {\n        const compiledRawTemplates = Object.entries(rawTemplates).reduce((previousTemplates, [name, templateString]) => {\n            const compiledTemplate = Hogan.compile(templateString, { asString: false });\n            return Object.assign(Object.assign({}, previousTemplates), { [name]: compiledTemplate });\n        }, {});\n        this.preCompiledTemplates = Object.assign(Object.assign(Object.assign({}, defaultTemplates), compiledTemplates), compiledRawTemplates);\n    }\n    static compile(templateString) {\n        return Hogan.compile(templateString, { asString: false });\n    }\n    render(namespace, view, params, partials, indent) {\n        const templateKey = this.templateKey(namespace, view);\n        try {\n            const template = this.preCompiledTemplates[templateKey];\n            return template.render(params, partials, indent);\n        }\n        catch (e) {\n            throw new Error(`Could not find template to render '${templateKey}'`);\n        }\n    }\n    template(namespace, view) {\n        return this.preCompiledTemplates[this.templateKey(namespace, view)];\n    }\n    templateKey(namespace, view) {\n        return `${namespace}-${view}`;\n    }\n}\n//# sourceMappingURL=hoganjs-utils.js.map","import * as DiffParser from './diff-parser';\nimport * as fileListPrinter from './file-list-renderer';\nimport LineByLineRenderer, { defaultLineByLineRendererConfig } from './line-by-line-renderer';\nimport SideBySideRenderer, { defaultSideBySideRendererConfig } from './side-by-side-renderer';\nimport { OutputFormatType } from './types';\nimport HoganJsUtils from './hoganjs-utils';\nexport const defaultDiff2HtmlConfig = Object.assign(Object.assign(Object.assign({}, defaultLineByLineRendererConfig), defaultSideBySideRendererConfig), { outputFormat: OutputFormatType.LINE_BY_LINE, drawFileList: true });\nexport function parse(diffInput, configuration = {}) {\n    return DiffParser.parse(diffInput, Object.assign(Object.assign({}, defaultDiff2HtmlConfig), configuration));\n}\nexport function html(diffInput, configuration = {}) {\n    const config = Object.assign(Object.assign({}, defaultDiff2HtmlConfig), configuration);\n    const diffJson = typeof diffInput === 'string' ? DiffParser.parse(diffInput, config) : diffInput;\n    const hoganUtils = new HoganJsUtils(config);\n    const fileList = config.drawFileList ? fileListPrinter.render(diffJson, hoganUtils) : '';\n    const diffOutput = config.outputFormat === 'side-by-side'\n        ? new SideBySideRenderer(hoganUtils, config).render(diffJson)\n        : new LineByLineRenderer(hoganUtils, config).render(diffJson);\n    return fileList + diffOutput;\n}\n//# sourceMappingURL=diff2html.js.map","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Diff;\n\n/*istanbul ignore end*/\nfunction Diff() {}\n\nDiff.prototype = {\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  diff: function diff(oldString, newString) {\n    /*istanbul ignore start*/\n    var\n    /*istanbul ignore end*/\n    options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var callback = options.callback;\n\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n\n    this.options = options;\n    var self = this;\n\n    function done(value) {\n      if (callback) {\n        setTimeout(function () {\n          callback(undefined, value);\n        }, 0);\n        return true;\n      } else {\n        return value;\n      }\n    } // Allow subclasses to massage the input prior to running\n\n\n    oldString = this.castInput(oldString);\n    newString = this.castInput(newString);\n    oldString = this.removeEmpty(this.tokenize(oldString));\n    newString = this.removeEmpty(this.tokenize(newString));\n    var newLen = newString.length,\n        oldLen = oldString.length;\n    var editLength = 1;\n    var maxEditLength = newLen + oldLen;\n\n    if (options.maxEditLength) {\n      maxEditLength = Math.min(maxEditLength, options.maxEditLength);\n    }\n\n    var bestPath = [{\n      newPos: -1,\n      components: []\n    }]; // Seed editLength = 0, i.e. the content starts with the same values\n\n    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\n\n    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\n      // Identity per the equality and tokenizer\n      return done([{\n        value: this.join(newString),\n        count: newString.length\n      }]);\n    } // Main worker method. checks all permutations of a given edit length for acceptance.\n\n\n    function execEditLength() {\n      for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\n        var basePath =\n        /*istanbul ignore start*/\n        void 0\n        /*istanbul ignore end*/\n        ;\n\n        var addPath = bestPath[diagonalPath - 1],\n            removePath = bestPath[diagonalPath + 1],\n            _oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\n\n        if (addPath) {\n          // No one else is going to attempt to use this value, clear it\n          bestPath[diagonalPath - 1] = undefined;\n        }\n\n        var canAdd = addPath && addPath.newPos + 1 < newLen,\n            canRemove = removePath && 0 <= _oldPos && _oldPos < oldLen;\n\n        if (!canAdd && !canRemove) {\n          // If this path is a terminal then prune\n          bestPath[diagonalPath] = undefined;\n          continue;\n        } // Select the diagonal that we want to branch from. We select the prior\n        // path whose position in the new string is the farthest from the origin\n        // and does not pass the bounds of the diff graph\n\n\n        if (!canAdd || canRemove && addPath.newPos < removePath.newPos) {\n          basePath = clonePath(removePath);\n          self.pushComponent(basePath.components, undefined, true);\n        } else {\n          basePath = addPath; // No need to clone, we've pulled it from the list\n\n          basePath.newPos++;\n          self.pushComponent(basePath.components, true, undefined);\n        }\n\n        _oldPos = self.extractCommon(basePath, newString, oldString, diagonalPath); // If we have hit the end of both strings, then we are done\n\n        if (basePath.newPos + 1 >= newLen && _oldPos + 1 >= oldLen) {\n          return done(buildValues(self, basePath.components, newString, oldString, self.useLongestToken));\n        } else {\n          // Otherwise track this path as a potential candidate and continue.\n          bestPath[diagonalPath] = basePath;\n        }\n      }\n\n      editLength++;\n    } // Performs the length of edit iteration. Is a bit fugly as this has to support the\n    // sync and async mode which is never fun. Loops over execEditLength until a value\n    // is produced, or until the edit length exceeds options.maxEditLength (if given),\n    // in which case it will return undefined.\n\n\n    if (callback) {\n      (function exec() {\n        setTimeout(function () {\n          if (editLength > maxEditLength) {\n            return callback();\n          }\n\n          if (!execEditLength()) {\n            exec();\n          }\n        }, 0);\n      })();\n    } else {\n      while (editLength <= maxEditLength) {\n        var ret = execEditLength();\n\n        if (ret) {\n          return ret;\n        }\n      }\n    }\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  pushComponent: function pushComponent(components, added, removed) {\n    var last = components[components.length - 1];\n\n    if (last && last.added === added && last.removed === removed) {\n      // We need to clone here as the component clone operation is just\n      // as shallow array clone\n      components[components.length - 1] = {\n        count: last.count + 1,\n        added: added,\n        removed: removed\n      };\n    } else {\n      components.push({\n        count: 1,\n        added: added,\n        removed: removed\n      });\n    }\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  extractCommon: function extractCommon(basePath, newString, oldString, diagonalPath) {\n    var newLen = newString.length,\n        oldLen = oldString.length,\n        newPos = basePath.newPos,\n        oldPos = newPos - diagonalPath,\n        commonCount = 0;\n\n    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\n      newPos++;\n      oldPos++;\n      commonCount++;\n    }\n\n    if (commonCount) {\n      basePath.components.push({\n        count: commonCount\n      });\n    }\n\n    basePath.newPos = newPos;\n    return oldPos;\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  equals: function equals(left, right) {\n    if (this.options.comparator) {\n      return this.options.comparator(left, right);\n    } else {\n      return left === right || this.options.ignoreCase && left.toLowerCase() === right.toLowerCase();\n    }\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  removeEmpty: function removeEmpty(array) {\n    var ret = [];\n\n    for (var i = 0; i < array.length; i++) {\n      if (array[i]) {\n        ret.push(array[i]);\n      }\n    }\n\n    return ret;\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  castInput: function castInput(value) {\n    return value;\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  tokenize: function tokenize(value) {\n    return value.split('');\n  },\n\n  /*istanbul ignore start*/\n\n  /*istanbul ignore end*/\n  join: function join(chars) {\n    return chars.join('');\n  }\n};\n\nfunction buildValues(diff, components, newString, oldString, useLongestToken) {\n  var componentPos = 0,\n      componentLen = components.length,\n      newPos = 0,\n      oldPos = 0;\n\n  for (; componentPos < componentLen; componentPos++) {\n    var component = components[componentPos];\n\n    if (!component.removed) {\n      if (!component.added && useLongestToken) {\n        var value = newString.slice(newPos, newPos + component.count);\n        value = value.map(function (value, i) {\n          var oldValue = oldString[oldPos + i];\n          return oldValue.length > value.length ? oldValue : value;\n        });\n        component.value = diff.join(value);\n      } else {\n        component.value = diff.join(newString.slice(newPos, newPos + component.count));\n      }\n\n      newPos += component.count; // Common case\n\n      if (!component.added) {\n        oldPos += component.count;\n      }\n    } else {\n      component.value = diff.join(oldString.slice(oldPos, oldPos + component.count));\n      oldPos += component.count; // Reverse add and remove so removes are output first to match common convention\n      // The diffing algorithm is tied to add then remove output and this is the simplest\n      // route to get the desired output with minimal overhead.\n\n      if (componentPos && components[componentPos - 1].added) {\n        var tmp = components[componentPos - 1];\n        components[componentPos - 1] = components[componentPos];\n        components[componentPos] = tmp;\n      }\n    }\n  } // Special case handle for when one terminal is ignored (i.e. whitespace).\n  // For this case we merge the terminal into the prior string and drop the change.\n  // This is only available for string mode.\n\n\n  var lastComponent = components[componentLen - 1];\n\n  if (componentLen > 1 && typeof lastComponent.value === 'string' && (lastComponent.added || lastComponent.removed) && diff.equals('', lastComponent.value)) {\n    components[componentLen - 2].value += lastComponent.value;\n    components.pop();\n  }\n\n  return components;\n}\n\nfunction clonePath(path) {\n  return {\n    newPos: path.newPos,\n    components: path.components.slice(0)\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffChars = diffChars;\nexports.characterDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar characterDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.characterDiff = characterDiff;\n\n/*istanbul ignore end*/\nfunction diffChars(oldStr, newStr, options) {\n  return characterDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2NoYXJhY3Rlci5qcyJdLCJuYW1lcyI6WyJjaGFyYWN0ZXJEaWZmIiwiRGlmZiIsImRpZmZDaGFycyIsIm9sZFN0ciIsIm5ld1N0ciIsIm9wdGlvbnMiLCJkaWZmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFFTyxJQUFNQSxhQUFhLEdBQUc7QUFBSUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUEsQ0FBSixFQUF0Qjs7Ozs7O0FBQ0EsU0FBU0MsU0FBVCxDQUFtQkMsTUFBbkIsRUFBMkJDLE1BQTNCLEVBQW1DQyxPQUFuQyxFQUE0QztBQUFFLFNBQU9MLGFBQWEsQ0FBQ00sSUFBZCxDQUFtQkgsTUFBbkIsRUFBMkJDLE1BQTNCLEVBQW1DQyxPQUFuQyxDQUFQO0FBQXFEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IGNoYXJhY3RlckRpZmYgPSBuZXcgRGlmZigpO1xuZXhwb3J0IGZ1bmN0aW9uIGRpZmZDaGFycyhvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykgeyByZXR1cm4gY2hhcmFjdGVyRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTsgfVxuIl19\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateOptions = generateOptions;\n\n/*istanbul ignore end*/\nfunction generateOptions(options, defaults) {\n  if (typeof options === 'function') {\n    defaults.callback = options;\n  } else if (options) {\n    for (var name in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(name)) {\n        defaults[name] = options[name];\n      }\n    }\n  }\n\n  return defaults;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3BhcmFtcy5qcyJdLCJuYW1lcyI6WyJnZW5lcmF0ZU9wdGlvbnMiLCJvcHRpb25zIiwiZGVmYXVsdHMiLCJjYWxsYmFjayIsIm5hbWUiLCJoYXNPd25Qcm9wZXJ0eSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU8sU0FBU0EsZUFBVCxDQUF5QkMsT0FBekIsRUFBa0NDLFFBQWxDLEVBQTRDO0FBQ2pELE1BQUksT0FBT0QsT0FBUCxLQUFtQixVQUF2QixFQUFtQztBQUNqQ0MsSUFBQUEsUUFBUSxDQUFDQyxRQUFULEdBQW9CRixPQUFwQjtBQUNELEdBRkQsTUFFTyxJQUFJQSxPQUFKLEVBQWE7QUFDbEIsU0FBSyxJQUFJRyxJQUFULElBQWlCSCxPQUFqQixFQUEwQjtBQUN4QjtBQUNBLFVBQUlBLE9BQU8sQ0FBQ0ksY0FBUixDQUF1QkQsSUFBdkIsQ0FBSixFQUFrQztBQUNoQ0YsUUFBQUEsUUFBUSxDQUFDRSxJQUFELENBQVIsR0FBaUJILE9BQU8sQ0FBQ0csSUFBRCxDQUF4QjtBQUNEO0FBQ0Y7QUFDRjs7QUFDRCxTQUFPRixRQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVPcHRpb25zKG9wdGlvbnMsIGRlZmF1bHRzKSB7XG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGRlZmF1bHRzLmNhbGxiYWNrID0gb3B0aW9ucztcbiAgfSBlbHNlIGlmIChvcHRpb25zKSB7XG4gICAgZm9yIChsZXQgbmFtZSBpbiBvcHRpb25zKSB7XG4gICAgICAvKiBpc3RhbmJ1bCBpZ25vcmUgZWxzZSAqL1xuICAgICAgaWYgKG9wdGlvbnMuaGFzT3duUHJvcGVydHkobmFtZSkpIHtcbiAgICAgICAgZGVmYXVsdHNbbmFtZV0gPSBvcHRpb25zW25hbWVdO1xuICAgICAgfVxuICAgIH1cbiAgfVxuICByZXR1cm4gZGVmYXVsdHM7XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffWords = diffWords;\nexports.diffWordsWithSpace = diffWordsWithSpace;\nexports.wordDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_params = require(\"../util/params\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\n// Based on https://en.wikipedia.org/wiki/Latin_script_in_Unicode\n//\n// Ranges and exceptions:\n// Latin-1 Supplement, 0080–00FF\n//  - U+00D7  × Multiplication sign\n//  - U+00F7  ÷ Division sign\n// Latin Extended-A, 0100–017F\n// Latin Extended-B, 0180–024F\n// IPA Extensions, 0250–02AF\n// Spacing Modifier Letters, 02B0–02FF\n//  - U+02C7  ˇ &#711;  Caron\n//  - U+02D8  ˘ &#728;  Breve\n//  - U+02D9  ˙ &#729;  Dot Above\n//  - U+02DA  ˚ &#730;  Ring Above\n//  - U+02DB  ˛ &#731;  Ogonek\n//  - U+02DC  ˜ &#732;  Small Tilde\n//  - U+02DD  ˝ &#733;  Double Acute Accent\n// Latin Extended Additional, 1E00–1EFF\nvar extendedWordChars = /^[A-Za-z\\xC0-\\u02C6\\u02C8-\\u02D7\\u02DE-\\u02FF\\u1E00-\\u1EFF]+$/;\nvar reWhitespace = /\\S/;\nvar wordDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.wordDiff = wordDiff;\n\n/*istanbul ignore end*/\nwordDiff.equals = function (left, right) {\n  if (this.options.ignoreCase) {\n    left = left.toLowerCase();\n    right = right.toLowerCase();\n  }\n\n  return left === right || this.options.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right);\n};\n\nwordDiff.tokenize = function (value) {\n  // All whitespace symbols except newline group into one token, each newline - in separate token\n  var tokens = value.split(/([^\\S\\r\\n]+|[()[\\]{}'\"\\r\\n]|\\b)/); // Join the boundary splits that we do not consider to be boundaries. This is primarily the extended Latin character set.\n\n  for (var i = 0; i < tokens.length - 1; i++) {\n    // If we have an empty string in the next field and we have only word chars before and after, merge\n    if (!tokens[i + 1] && tokens[i + 2] && extendedWordChars.test(tokens[i]) && extendedWordChars.test(tokens[i + 2])) {\n      tokens[i] += tokens[i + 2];\n      tokens.splice(i + 1, 2);\n      i--;\n    }\n  }\n\n  return tokens;\n};\n\nfunction diffWords(oldStr, newStr, options) {\n  options =\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _params\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  generateOptions)\n  /*istanbul ignore end*/\n  (options, {\n    ignoreWhitespace: true\n  });\n  return wordDiff.diff(oldStr, newStr, options);\n}\n\nfunction diffWordsWithSpace(oldStr, newStr, options) {\n  return wordDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL3dvcmQuanMiXSwibmFtZXMiOlsiZXh0ZW5kZWRXb3JkQ2hhcnMiLCJyZVdoaXRlc3BhY2UiLCJ3b3JkRGlmZiIsIkRpZmYiLCJlcXVhbHMiLCJsZWZ0IiwicmlnaHQiLCJvcHRpb25zIiwiaWdub3JlQ2FzZSIsInRvTG93ZXJDYXNlIiwiaWdub3JlV2hpdGVzcGFjZSIsInRlc3QiLCJ0b2tlbml6ZSIsInZhbHVlIiwidG9rZW5zIiwic3BsaXQiLCJpIiwibGVuZ3RoIiwic3BsaWNlIiwiZGlmZldvcmRzIiwib2xkU3RyIiwibmV3U3RyIiwiZ2VuZXJhdGVPcHRpb25zIiwiZGlmZiIsImRpZmZXb3Jkc1dpdGhTcGFjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBTUEsaUJBQWlCLEdBQUcsK0RBQTFCO0FBRUEsSUFBTUMsWUFBWSxHQUFHLElBQXJCO0FBRU8sSUFBTUMsUUFBUSxHQUFHO0FBQUlDO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBLENBQUosRUFBakI7Ozs7OztBQUNQRCxRQUFRLENBQUNFLE1BQVQsR0FBa0IsVUFBU0MsSUFBVCxFQUFlQyxLQUFmLEVBQXNCO0FBQ3RDLE1BQUksS0FBS0MsT0FBTCxDQUFhQyxVQUFqQixFQUE2QjtBQUMzQkgsSUFBQUEsSUFBSSxHQUFHQSxJQUFJLENBQUNJLFdBQUwsRUFBUDtBQUNBSCxJQUFBQSxLQUFLLEdBQUdBLEtBQUssQ0FBQ0csV0FBTixFQUFSO0FBQ0Q7O0FBQ0QsU0FBT0osSUFBSSxLQUFLQyxLQUFULElBQW1CLEtBQUtDLE9BQUwsQ0FBYUcsZ0JBQWIsSUFBaUMsQ0FBQ1QsWUFBWSxDQUFDVSxJQUFiLENBQWtCTixJQUFsQixDQUFsQyxJQUE2RCxDQUFDSixZQUFZLENBQUNVLElBQWIsQ0FBa0JMLEtBQWxCLENBQXhGO0FBQ0QsQ0FORDs7QUFPQUosUUFBUSxDQUFDVSxRQUFULEdBQW9CLFVBQVNDLEtBQVQsRUFBZ0I7QUFDbEM7QUFDQSxNQUFJQyxNQUFNLEdBQUdELEtBQUssQ0FBQ0UsS0FBTixDQUFZLGlDQUFaLENBQWIsQ0FGa0MsQ0FJbEM7O0FBQ0EsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRixNQUFNLENBQUNHLE1BQVAsR0FBZ0IsQ0FBcEMsRUFBdUNELENBQUMsRUFBeEMsRUFBNEM7QUFDMUM7QUFDQSxRQUFJLENBQUNGLE1BQU0sQ0FBQ0UsQ0FBQyxHQUFHLENBQUwsQ0FBUCxJQUFrQkYsTUFBTSxDQUFDRSxDQUFDLEdBQUcsQ0FBTCxDQUF4QixJQUNLaEIsaUJBQWlCLENBQUNXLElBQWxCLENBQXVCRyxNQUFNLENBQUNFLENBQUQsQ0FBN0IsQ0FETCxJQUVLaEIsaUJBQWlCLENBQUNXLElBQWxCLENBQXVCRyxNQUFNLENBQUNFLENBQUMsR0FBRyxDQUFMLENBQTdCLENBRlQsRUFFZ0Q7QUFDOUNGLE1BQUFBLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFOLElBQWFGLE1BQU0sQ0FBQ0UsQ0FBQyxHQUFHLENBQUwsQ0FBbkI7QUFDQUYsTUFBQUEsTUFBTSxDQUFDSSxNQUFQLENBQWNGLENBQUMsR0FBRyxDQUFsQixFQUFxQixDQUFyQjtBQUNBQSxNQUFBQSxDQUFDO0FBQ0Y7QUFDRjs7QUFFRCxTQUFPRixNQUFQO0FBQ0QsQ0FqQkQ7O0FBbUJPLFNBQVNLLFNBQVQsQ0FBbUJDLE1BQW5CLEVBQTJCQyxNQUEzQixFQUFtQ2QsT0FBbkMsRUFBNEM7QUFDakRBLEVBQUFBLE9BQU87QUFBRztBQUFBO0FBQUE7O0FBQUFlO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUFBO0FBQUE7QUFBQSxHQUFnQmYsT0FBaEIsRUFBeUI7QUFBQ0csSUFBQUEsZ0JBQWdCLEVBQUU7QUFBbkIsR0FBekIsQ0FBVjtBQUNBLFNBQU9SLFFBQVEsQ0FBQ3FCLElBQVQsQ0FBY0gsTUFBZCxFQUFzQkMsTUFBdEIsRUFBOEJkLE9BQTlCLENBQVA7QUFDRDs7QUFFTSxTQUFTaUIsa0JBQVQsQ0FBNEJKLE1BQTVCLEVBQW9DQyxNQUFwQyxFQUE0Q2QsT0FBNUMsRUFBcUQ7QUFDMUQsU0FBT0wsUUFBUSxDQUFDcUIsSUFBVCxDQUFjSCxNQUFkLEVBQXNCQyxNQUF0QixFQUE4QmQsT0FBOUIsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcbmltcG9ydCB7Z2VuZXJhdGVPcHRpb25zfSBmcm9tICcuLi91dGlsL3BhcmFtcyc7XG5cbi8vIEJhc2VkIG9uIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0xhdGluX3NjcmlwdF9pbl9Vbmljb2RlXG4vL1xuLy8gUmFuZ2VzIGFuZCBleGNlcHRpb25zOlxuLy8gTGF0aW4tMSBTdXBwbGVtZW50LCAwMDgw4oCTMDBGRlxuLy8gIC0gVSswMEQ3ICDDlyBNdWx0aXBsaWNhdGlvbiBzaWduXG4vLyAgLSBVKzAwRjcgIMO3IERpdmlzaW9uIHNpZ25cbi8vIExhdGluIEV4dGVuZGVkLUEsIDAxMDDigJMwMTdGXG4vLyBMYXRpbiBFeHRlbmRlZC1CLCAwMTgw4oCTMDI0RlxuLy8gSVBBIEV4dGVuc2lvbnMsIDAyNTDigJMwMkFGXG4vLyBTcGFjaW5nIE1vZGlmaWVyIExldHRlcnMsIDAyQjDigJMwMkZGXG4vLyAgLSBVKzAyQzcgIMuHICYjNzExOyAgQ2Fyb25cbi8vICAtIFUrMDJEOCAgy5ggJiM3Mjg7ICBCcmV2ZVxuLy8gIC0gVSswMkQ5ICDLmSAmIzcyOTsgIERvdCBBYm92ZVxuLy8gIC0gVSswMkRBICDLmiAmIzczMDsgIFJpbmcgQWJvdmVcbi8vICAtIFUrMDJEQiAgy5sgJiM3MzE7ICBPZ29uZWtcbi8vICAtIFUrMDJEQyAgy5wgJiM3MzI7ICBTbWFsbCBUaWxkZVxuLy8gIC0gVSswMkREICDLnSAmIzczMzsgIERvdWJsZSBBY3V0ZSBBY2NlbnRcbi8vIExhdGluIEV4dGVuZGVkIEFkZGl0aW9uYWwsIDFFMDDigJMxRUZGXG5jb25zdCBleHRlbmRlZFdvcmRDaGFycyA9IC9eW2EtekEtWlxcdXtDMH0tXFx1e0ZGfVxcdXtEOH0tXFx1e0Y2fVxcdXtGOH0tXFx1ezJDNn1cXHV7MkM4fS1cXHV7MkQ3fVxcdXsyREV9LVxcdXsyRkZ9XFx1ezFFMDB9LVxcdXsxRUZGfV0rJC91O1xuXG5jb25zdCByZVdoaXRlc3BhY2UgPSAvXFxTLztcblxuZXhwb3J0IGNvbnN0IHdvcmREaWZmID0gbmV3IERpZmYoKTtcbndvcmREaWZmLmVxdWFscyA9IGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7XG4gIGlmICh0aGlzLm9wdGlvbnMuaWdub3JlQ2FzZSkge1xuICAgIGxlZnQgPSBsZWZ0LnRvTG93ZXJDYXNlKCk7XG4gICAgcmlnaHQgPSByaWdodC50b0xvd2VyQ2FzZSgpO1xuICB9XG4gIHJldHVybiBsZWZ0ID09PSByaWdodCB8fCAodGhpcy5vcHRpb25zLmlnbm9yZVdoaXRlc3BhY2UgJiYgIXJlV2hpdGVzcGFjZS50ZXN0KGxlZnQpICYmICFyZVdoaXRlc3BhY2UudGVzdChyaWdodCkpO1xufTtcbndvcmREaWZmLnRva2VuaXplID0gZnVuY3Rpb24odmFsdWUpIHtcbiAgLy8gQWxsIHdoaXRlc3BhY2Ugc3ltYm9scyBleGNlcHQgbmV3bGluZSBncm91cCBpbnRvIG9uZSB0b2tlbiwgZWFjaCBuZXdsaW5lIC0gaW4gc2VwYXJhdGUgdG9rZW5cbiAgbGV0IHRva2VucyA9IHZhbHVlLnNwbGl0KC8oW15cXFNcXHJcXG5dK3xbKClbXFxde30nXCJcXHJcXG5dfFxcYikvKTtcblxuICAvLyBKb2luIHRoZSBib3VuZGFyeSBzcGxpdHMgdGhhdCB3ZSBkbyBub3QgY29uc2lkZXIgdG8gYmUgYm91bmRhcmllcy4gVGhpcyBpcyBwcmltYXJpbHkgdGhlIGV4dGVuZGVkIExhdGluIGNoYXJhY3RlciBzZXQuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW5zLmxlbmd0aCAtIDE7IGkrKykge1xuICAgIC8vIElmIHdlIGhhdmUgYW4gZW1wdHkgc3RyaW5nIGluIHRoZSBuZXh0IGZpZWxkIGFuZCB3ZSBoYXZlIG9ubHkgd29yZCBjaGFycyBiZWZvcmUgYW5kIGFmdGVyLCBtZXJnZVxuICAgIGlmICghdG9rZW5zW2kgKyAxXSAmJiB0b2tlbnNbaSArIDJdXG4gICAgICAgICAgJiYgZXh0ZW5kZWRXb3JkQ2hhcnMudGVzdCh0b2tlbnNbaV0pXG4gICAgICAgICAgJiYgZXh0ZW5kZWRXb3JkQ2hhcnMudGVzdCh0b2tlbnNbaSArIDJdKSkge1xuICAgICAgdG9rZW5zW2ldICs9IHRva2Vuc1tpICsgMl07XG4gICAgICB0b2tlbnMuc3BsaWNlKGkgKyAxLCAyKTtcbiAgICAgIGktLTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdG9rZW5zO1xufTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZXb3JkcyhvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykge1xuICBvcHRpb25zID0gZ2VuZXJhdGVPcHRpb25zKG9wdGlvbnMsIHtpZ25vcmVXaGl0ZXNwYWNlOiB0cnVlfSk7XG4gIHJldHVybiB3b3JkRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBvcHRpb25zKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRpZmZXb3Jkc1dpdGhTcGFjZShvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucykge1xuICByZXR1cm4gd29yZERpZmYuZGlmZihvbGRTdHIsIG5ld1N0ciwgb3B0aW9ucyk7XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffLines = diffLines;\nexports.diffTrimmedLines = diffTrimmedLines;\nexports.lineDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_params = require(\"../util/params\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar lineDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.lineDiff = lineDiff;\n\n/*istanbul ignore end*/\nlineDiff.tokenize = function (value) {\n  var retLines = [],\n      linesAndNewlines = value.split(/(\\n|\\r\\n)/); // Ignore the final empty token that occurs if the string ends with a new line\n\n  if (!linesAndNewlines[linesAndNewlines.length - 1]) {\n    linesAndNewlines.pop();\n  } // Merge the content and line separators into single tokens\n\n\n  for (var i = 0; i < linesAndNewlines.length; i++) {\n    var line = linesAndNewlines[i];\n\n    if (i % 2 && !this.options.newlineIsToken) {\n      retLines[retLines.length - 1] += line;\n    } else {\n      if (this.options.ignoreWhitespace) {\n        line = line.trim();\n      }\n\n      retLines.push(line);\n    }\n  }\n\n  return retLines;\n};\n\nfunction diffLines(oldStr, newStr, callback) {\n  return lineDiff.diff(oldStr, newStr, callback);\n}\n\nfunction diffTrimmedLines(oldStr, newStr, callback) {\n  var options =\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _params\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  generateOptions)\n  /*istanbul ignore end*/\n  (callback, {\n    ignoreWhitespace: true\n  });\n  return lineDiff.diff(oldStr, newStr, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2xpbmUuanMiXSwibmFtZXMiOlsibGluZURpZmYiLCJEaWZmIiwidG9rZW5pemUiLCJ2YWx1ZSIsInJldExpbmVzIiwibGluZXNBbmROZXdsaW5lcyIsInNwbGl0IiwibGVuZ3RoIiwicG9wIiwiaSIsImxpbmUiLCJvcHRpb25zIiwibmV3bGluZUlzVG9rZW4iLCJpZ25vcmVXaGl0ZXNwYWNlIiwidHJpbSIsInB1c2giLCJkaWZmTGluZXMiLCJvbGRTdHIiLCJuZXdTdHIiLCJjYWxsYmFjayIsImRpZmYiLCJkaWZmVHJpbW1lZExpbmVzIiwiZ2VuZXJhdGVPcHRpb25zIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFFTyxJQUFNQSxRQUFRLEdBQUc7QUFBSUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUEsQ0FBSixFQUFqQjs7Ozs7O0FBQ1BELFFBQVEsQ0FBQ0UsUUFBVCxHQUFvQixVQUFTQyxLQUFULEVBQWdCO0FBQ2xDLE1BQUlDLFFBQVEsR0FBRyxFQUFmO0FBQUEsTUFDSUMsZ0JBQWdCLEdBQUdGLEtBQUssQ0FBQ0csS0FBTixDQUFZLFdBQVosQ0FEdkIsQ0FEa0MsQ0FJbEM7O0FBQ0EsTUFBSSxDQUFDRCxnQkFBZ0IsQ0FBQ0EsZ0JBQWdCLENBQUNFLE1BQWpCLEdBQTBCLENBQTNCLENBQXJCLEVBQW9EO0FBQ2xERixJQUFBQSxnQkFBZ0IsQ0FBQ0csR0FBakI7QUFDRCxHQVBpQyxDQVNsQzs7O0FBQ0EsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSixnQkFBZ0IsQ0FBQ0UsTUFBckMsRUFBNkNFLENBQUMsRUFBOUMsRUFBa0Q7QUFDaEQsUUFBSUMsSUFBSSxHQUFHTCxnQkFBZ0IsQ0FBQ0ksQ0FBRCxDQUEzQjs7QUFFQSxRQUFJQSxDQUFDLEdBQUcsQ0FBSixJQUFTLENBQUMsS0FBS0UsT0FBTCxDQUFhQyxjQUEzQixFQUEyQztBQUN6Q1IsTUFBQUEsUUFBUSxDQUFDQSxRQUFRLENBQUNHLE1BQVQsR0FBa0IsQ0FBbkIsQ0FBUixJQUFpQ0csSUFBakM7QUFDRCxLQUZELE1BRU87QUFDTCxVQUFJLEtBQUtDLE9BQUwsQ0FBYUUsZ0JBQWpCLEVBQW1DO0FBQ2pDSCxRQUFBQSxJQUFJLEdBQUdBLElBQUksQ0FBQ0ksSUFBTCxFQUFQO0FBQ0Q7O0FBQ0RWLE1BQUFBLFFBQVEsQ0FBQ1csSUFBVCxDQUFjTCxJQUFkO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPTixRQUFQO0FBQ0QsQ0F4QkQ7O0FBMEJPLFNBQVNZLFNBQVQsQ0FBbUJDLE1BQW5CLEVBQTJCQyxNQUEzQixFQUFtQ0MsUUFBbkMsRUFBNkM7QUFBRSxTQUFPbkIsUUFBUSxDQUFDb0IsSUFBVCxDQUFjSCxNQUFkLEVBQXNCQyxNQUF0QixFQUE4QkMsUUFBOUIsQ0FBUDtBQUFpRDs7QUFDaEcsU0FBU0UsZ0JBQVQsQ0FBMEJKLE1BQTFCLEVBQWtDQyxNQUFsQyxFQUEwQ0MsUUFBMUMsRUFBb0Q7QUFDekQsTUFBSVIsT0FBTztBQUFHO0FBQUE7QUFBQTs7QUFBQVc7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQTtBQUFBLEdBQWdCSCxRQUFoQixFQUEwQjtBQUFDTixJQUFBQSxnQkFBZ0IsRUFBRTtBQUFuQixHQUExQixDQUFkO0FBQ0EsU0FBT2IsUUFBUSxDQUFDb0IsSUFBVCxDQUFjSCxNQUFkLEVBQXNCQyxNQUF0QixFQUE4QlAsT0FBOUIsQ0FBUDtBQUNEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcbmltcG9ydCB7Z2VuZXJhdGVPcHRpb25zfSBmcm9tICcuLi91dGlsL3BhcmFtcyc7XG5cbmV4cG9ydCBjb25zdCBsaW5lRGlmZiA9IG5ldyBEaWZmKCk7XG5saW5lRGlmZi50b2tlbml6ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIGxldCByZXRMaW5lcyA9IFtdLFxuICAgICAgbGluZXNBbmROZXdsaW5lcyA9IHZhbHVlLnNwbGl0KC8oXFxufFxcclxcbikvKTtcblxuICAvLyBJZ25vcmUgdGhlIGZpbmFsIGVtcHR5IHRva2VuIHRoYXQgb2NjdXJzIGlmIHRoZSBzdHJpbmcgZW5kcyB3aXRoIGEgbmV3IGxpbmVcbiAgaWYgKCFsaW5lc0FuZE5ld2xpbmVzW2xpbmVzQW5kTmV3bGluZXMubGVuZ3RoIC0gMV0pIHtcbiAgICBsaW5lc0FuZE5ld2xpbmVzLnBvcCgpO1xuICB9XG5cbiAgLy8gTWVyZ2UgdGhlIGNvbnRlbnQgYW5kIGxpbmUgc2VwYXJhdG9ycyBpbnRvIHNpbmdsZSB0b2tlbnNcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBsaW5lc0FuZE5ld2xpbmVzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGxpbmUgPSBsaW5lc0FuZE5ld2xpbmVzW2ldO1xuXG4gICAgaWYgKGkgJSAyICYmICF0aGlzLm9wdGlvbnMubmV3bGluZUlzVG9rZW4pIHtcbiAgICAgIHJldExpbmVzW3JldExpbmVzLmxlbmd0aCAtIDFdICs9IGxpbmU7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0aGlzLm9wdGlvbnMuaWdub3JlV2hpdGVzcGFjZSkge1xuICAgICAgICBsaW5lID0gbGluZS50cmltKCk7XG4gICAgICB9XG4gICAgICByZXRMaW5lcy5wdXNoKGxpbmUpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXRMaW5lcztcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmTGluZXMob2xkU3RyLCBuZXdTdHIsIGNhbGxiYWNrKSB7IHJldHVybiBsaW5lRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjayk7IH1cbmV4cG9ydCBmdW5jdGlvbiBkaWZmVHJpbW1lZExpbmVzKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjaykge1xuICBsZXQgb3B0aW9ucyA9IGdlbmVyYXRlT3B0aW9ucyhjYWxsYmFjaywge2lnbm9yZVdoaXRlc3BhY2U6IHRydWV9KTtcbiAgcmV0dXJuIGxpbmVEaWZmLmRpZmYob2xkU3RyLCBuZXdTdHIsIG9wdGlvbnMpO1xufVxuIl19\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffSentences = diffSentences;\nexports.sentenceDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar sentenceDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.sentenceDiff = sentenceDiff;\n\n/*istanbul ignore end*/\nsentenceDiff.tokenize = function (value) {\n  return value.split(/(\\S.+?[.!?])(?=\\s+|$)/);\n};\n\nfunction diffSentences(oldStr, newStr, callback) {\n  return sentenceDiff.diff(oldStr, newStr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL3NlbnRlbmNlLmpzIl0sIm5hbWVzIjpbInNlbnRlbmNlRGlmZiIsIkRpZmYiLCJ0b2tlbml6ZSIsInZhbHVlIiwic3BsaXQiLCJkaWZmU2VudGVuY2VzIiwib2xkU3RyIiwibmV3U3RyIiwiY2FsbGJhY2siLCJkaWZmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFHTyxJQUFNQSxZQUFZLEdBQUc7QUFBSUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUEsQ0FBSixFQUFyQjs7Ozs7O0FBQ1BELFlBQVksQ0FBQ0UsUUFBYixHQUF3QixVQUFTQyxLQUFULEVBQWdCO0FBQ3RDLFNBQU9BLEtBQUssQ0FBQ0MsS0FBTixDQUFZLHVCQUFaLENBQVA7QUFDRCxDQUZEOztBQUlPLFNBQVNDLGFBQVQsQ0FBdUJDLE1BQXZCLEVBQStCQyxNQUEvQixFQUF1Q0MsUUFBdkMsRUFBaUQ7QUFBRSxTQUFPUixZQUFZLENBQUNTLElBQWIsQ0FBa0JILE1BQWxCLEVBQTBCQyxNQUExQixFQUFrQ0MsUUFBbEMsQ0FBUDtBQUFxRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBEaWZmIGZyb20gJy4vYmFzZSc7XG5cblxuZXhwb3J0IGNvbnN0IHNlbnRlbmNlRGlmZiA9IG5ldyBEaWZmKCk7XG5zZW50ZW5jZURpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUuc3BsaXQoLyhcXFMuKz9bLiE/XSkoPz1cXHMrfCQpLyk7XG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZGlmZlNlbnRlbmNlcyhvbGRTdHIsIG5ld1N0ciwgY2FsbGJhY2spIHsgcmV0dXJuIHNlbnRlbmNlRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjayk7IH1cbiJdfQ==\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffCss = diffCss;\nexports.cssDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar cssDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.cssDiff = cssDiff;\n\n/*istanbul ignore end*/\ncssDiff.tokenize = function (value) {\n  return value.split(/([{}:;,]|\\s+)/);\n};\n\nfunction diffCss(oldStr, newStr, callback) {\n  return cssDiff.diff(oldStr, newStr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2Nzcy5qcyJdLCJuYW1lcyI6WyJjc3NEaWZmIiwiRGlmZiIsInRva2VuaXplIiwidmFsdWUiLCJzcGxpdCIsImRpZmZDc3MiLCJvbGRTdHIiLCJuZXdTdHIiLCJjYWxsYmFjayIsImRpZmYiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7OztBQUVPLElBQU1BLE9BQU8sR0FBRztBQUFJQztBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQTtBQUFBQSxDQUFKLEVBQWhCOzs7Ozs7QUFDUEQsT0FBTyxDQUFDRSxRQUFSLEdBQW1CLFVBQVNDLEtBQVQsRUFBZ0I7QUFDakMsU0FBT0EsS0FBSyxDQUFDQyxLQUFOLENBQVksZUFBWixDQUFQO0FBQ0QsQ0FGRDs7QUFJTyxTQUFTQyxPQUFULENBQWlCQyxNQUFqQixFQUF5QkMsTUFBekIsRUFBaUNDLFFBQWpDLEVBQTJDO0FBQUUsU0FBT1IsT0FBTyxDQUFDUyxJQUFSLENBQWFILE1BQWIsRUFBcUJDLE1BQXJCLEVBQTZCQyxRQUE3QixDQUFQO0FBQWdEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IGNzc0RpZmYgPSBuZXcgRGlmZigpO1xuY3NzRGlmZi50b2tlbml6ZSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZS5zcGxpdCgvKFt7fTo7LF18XFxzKykvKTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQ3NzKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjaykgeyByZXR1cm4gY3NzRGlmZi5kaWZmKG9sZFN0ciwgbmV3U3RyLCBjYWxsYmFjayk7IH1cbiJdfQ==\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffJson = diffJson;\nexports.canonicalize = canonicalize;\nexports.jsonDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_line = require(\"./line\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*istanbul ignore end*/\nvar objectPrototypeToString = Object.prototype.toString;\nvar jsonDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n](); // Discriminate between two lines of pretty-printed, serialized JSON where one of them has a\n// dangling comma and the other doesn't. Turns out including the dangling comma yields the nicest output:\n\n/*istanbul ignore start*/\nexports.jsonDiff = jsonDiff;\n\n/*istanbul ignore end*/\njsonDiff.useLongestToken = true;\njsonDiff.tokenize =\n/*istanbul ignore start*/\n_line\n/*istanbul ignore end*/\n.\n/*istanbul ignore start*/\nlineDiff\n/*istanbul ignore end*/\n.tokenize;\n\njsonDiff.castInput = function (value) {\n  /*istanbul ignore start*/\n  var _this$options =\n  /*istanbul ignore end*/\n  this.options,\n      undefinedReplacement = _this$options.undefinedReplacement,\n      _this$options$stringi = _this$options.stringifyReplacer,\n      stringifyReplacer = _this$options$stringi === void 0 ? function (k, v)\n  /*istanbul ignore start*/\n  {\n    return (\n      /*istanbul ignore end*/\n      typeof v === 'undefined' ? undefinedReplacement : v\n    );\n  } : _this$options$stringi;\n  return typeof value === 'string' ? value : JSON.stringify(canonicalize(value, null, null, stringifyReplacer), stringifyReplacer, '  ');\n};\n\njsonDiff.equals = function (left, right) {\n  return (\n    /*istanbul ignore start*/\n    _base\n    /*istanbul ignore end*/\n    [\n    /*istanbul ignore start*/\n    \"default\"\n    /*istanbul ignore end*/\n    ].prototype.equals.call(jsonDiff, left.replace(/,([\\r\\n])/g, '$1'), right.replace(/,([\\r\\n])/g, '$1'))\n  );\n};\n\nfunction diffJson(oldObj, newObj, options) {\n  return jsonDiff.diff(oldObj, newObj, options);\n} // This function handles the presence of circular references by bailing out when encountering an\n// object that is already on the \"stack\" of items being processed. Accepts an optional replacer\n\n\nfunction canonicalize(obj, stack, replacementStack, replacer, key) {\n  stack = stack || [];\n  replacementStack = replacementStack || [];\n\n  if (replacer) {\n    obj = replacer(key, obj);\n  }\n\n  var i;\n\n  for (i = 0; i < stack.length; i += 1) {\n    if (stack[i] === obj) {\n      return replacementStack[i];\n    }\n  }\n\n  var canonicalizedObj;\n\n  if ('[object Array]' === objectPrototypeToString.call(obj)) {\n    stack.push(obj);\n    canonicalizedObj = new Array(obj.length);\n    replacementStack.push(canonicalizedObj);\n\n    for (i = 0; i < obj.length; i += 1) {\n      canonicalizedObj[i] = canonicalize(obj[i], stack, replacementStack, replacer, key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n    return canonicalizedObj;\n  }\n\n  if (obj && obj.toJSON) {\n    obj = obj.toJSON();\n  }\n\n  if (\n  /*istanbul ignore start*/\n  _typeof(\n  /*istanbul ignore end*/\n  obj) === 'object' && obj !== null) {\n    stack.push(obj);\n    canonicalizedObj = {};\n    replacementStack.push(canonicalizedObj);\n\n    var sortedKeys = [],\n        _key;\n\n    for (_key in obj) {\n      /* istanbul ignore else */\n      if (obj.hasOwnProperty(_key)) {\n        sortedKeys.push(_key);\n      }\n    }\n\n    sortedKeys.sort();\n\n    for (i = 0; i < sortedKeys.length; i += 1) {\n      _key = sortedKeys[i];\n      canonicalizedObj[_key] = canonicalize(obj[_key], stack, replacementStack, replacer, _key);\n    }\n\n    stack.pop();\n    replacementStack.pop();\n  } else {\n    canonicalizedObj = obj;\n  }\n\n  return canonicalizedObj;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.diffArrays = diffArrays;\nexports.arrayDiff = void 0;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./base\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nvar arrayDiff = new\n/*istanbul ignore start*/\n_base\n/*istanbul ignore end*/\n[\n/*istanbul ignore start*/\n\"default\"\n/*istanbul ignore end*/\n]();\n\n/*istanbul ignore start*/\nexports.arrayDiff = arrayDiff;\n\n/*istanbul ignore end*/\narrayDiff.tokenize = function (value) {\n  return value.slice();\n};\n\narrayDiff.join = arrayDiff.removeEmpty = function (value) {\n  return value;\n};\n\nfunction diffArrays(oldArr, newArr, callback) {\n  return arrayDiff.diff(oldArr, newArr, callback);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kaWZmL2FycmF5LmpzIl0sIm5hbWVzIjpbImFycmF5RGlmZiIsIkRpZmYiLCJ0b2tlbml6ZSIsInZhbHVlIiwic2xpY2UiLCJqb2luIiwicmVtb3ZlRW1wdHkiLCJkaWZmQXJyYXlzIiwib2xkQXJyIiwibmV3QXJyIiwiY2FsbGJhY2siLCJkaWZmIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFFTyxJQUFNQSxTQUFTLEdBQUc7QUFBSUM7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUE7QUFBQUEsQ0FBSixFQUFsQjs7Ozs7O0FBQ1BELFNBQVMsQ0FBQ0UsUUFBVixHQUFxQixVQUFTQyxLQUFULEVBQWdCO0FBQ25DLFNBQU9BLEtBQUssQ0FBQ0MsS0FBTixFQUFQO0FBQ0QsQ0FGRDs7QUFHQUosU0FBUyxDQUFDSyxJQUFWLEdBQWlCTCxTQUFTLENBQUNNLFdBQVYsR0FBd0IsVUFBU0gsS0FBVCxFQUFnQjtBQUN2RCxTQUFPQSxLQUFQO0FBQ0QsQ0FGRDs7QUFJTyxTQUFTSSxVQUFULENBQW9CQyxNQUFwQixFQUE0QkMsTUFBNUIsRUFBb0NDLFFBQXBDLEVBQThDO0FBQUUsU0FBT1YsU0FBUyxDQUFDVyxJQUFWLENBQWVILE1BQWYsRUFBdUJDLE1BQXZCLEVBQStCQyxRQUEvQixDQUFQO0FBQWtEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IERpZmYgZnJvbSAnLi9iYXNlJztcblxuZXhwb3J0IGNvbnN0IGFycmF5RGlmZiA9IG5ldyBEaWZmKCk7XG5hcnJheURpZmYudG9rZW5pemUgPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUuc2xpY2UoKTtcbn07XG5hcnJheURpZmYuam9pbiA9IGFycmF5RGlmZi5yZW1vdmVFbXB0eSA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZTtcbn07XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWZmQXJyYXlzKG9sZEFyciwgbmV3QXJyLCBjYWxsYmFjaykgeyByZXR1cm4gYXJyYXlEaWZmLmRpZmYob2xkQXJyLCBuZXdBcnIsIGNhbGxiYWNrKTsgfVxuIl19\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsePatch = parsePatch;\n\n/*istanbul ignore end*/\nfunction parsePatch(uniDiff) {\n  /*istanbul ignore start*/\n  var\n  /*istanbul ignore end*/\n  options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var diffstr = uniDiff.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = uniDiff.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      list = [],\n      i = 0;\n\n  function parseIndex() {\n    var index = {};\n    list.push(index); // Parse diff metadata\n\n    while (i < diffstr.length) {\n      var line = diffstr[i]; // File header found, end parsing diff metadata\n\n      if (/^(\\-\\-\\-|\\+\\+\\+|@@)\\s/.test(line)) {\n        break;\n      } // Diff index\n\n\n      var header = /^(?:Index:|diff(?: -r \\w+)+)\\s+(.+?)\\s*$/.exec(line);\n\n      if (header) {\n        index.index = header[1];\n      }\n\n      i++;\n    } // Parse file headers if they are defined. Unified diff requires them, but\n    // there's no technical issues to have an isolated hunk without file header\n\n\n    parseFileHeader(index);\n    parseFileHeader(index); // Parse hunks\n\n    index.hunks = [];\n\n    while (i < diffstr.length) {\n      var _line = diffstr[i];\n\n      if (/^(Index:|diff|\\-\\-\\-|\\+\\+\\+)\\s/.test(_line)) {\n        break;\n      } else if (/^@@/.test(_line)) {\n        index.hunks.push(parseHunk());\n      } else if (_line && options.strict) {\n        // Ignore unexpected content unless in strict mode\n        throw new Error('Unknown line ' + (i + 1) + ' ' + JSON.stringify(_line));\n      } else {\n        i++;\n      }\n    }\n  } // Parses the --- and +++ headers, if none are found, no lines\n  // are consumed.\n\n\n  function parseFileHeader(index) {\n    var fileHeader = /^(---|\\+\\+\\+)\\s+(.*)$/.exec(diffstr[i]);\n\n    if (fileHeader) {\n      var keyPrefix = fileHeader[1] === '---' ? 'old' : 'new';\n      var data = fileHeader[2].split('\\t', 2);\n      var fileName = data[0].replace(/\\\\\\\\/g, '\\\\');\n\n      if (/^\".*\"$/.test(fileName)) {\n        fileName = fileName.substr(1, fileName.length - 2);\n      }\n\n      index[keyPrefix + 'FileName'] = fileName;\n      index[keyPrefix + 'Header'] = (data[1] || '').trim();\n      i++;\n    }\n  } // Parses a hunk\n  // This assumes that we are at the start of a hunk.\n\n\n  function parseHunk() {\n    var chunkHeaderIndex = i,\n        chunkHeaderLine = diffstr[i++],\n        chunkHeader = chunkHeaderLine.split(/@@ -(\\d+)(?:,(\\d+))? \\+(\\d+)(?:,(\\d+))? @@/);\n    var hunk = {\n      oldStart: +chunkHeader[1],\n      oldLines: typeof chunkHeader[2] === 'undefined' ? 1 : +chunkHeader[2],\n      newStart: +chunkHeader[3],\n      newLines: typeof chunkHeader[4] === 'undefined' ? 1 : +chunkHeader[4],\n      lines: [],\n      linedelimiters: []\n    }; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart += 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart += 1;\n    }\n\n    var addCount = 0,\n        removeCount = 0;\n\n    for (; i < diffstr.length; i++) {\n      // Lines starting with '---' could be mistaken for the \"remove line\" operation\n      // But they could be the header for the next file. Therefore prune such cases out.\n      if (diffstr[i].indexOf('--- ') === 0 && i + 2 < diffstr.length && diffstr[i + 1].indexOf('+++ ') === 0 && diffstr[i + 2].indexOf('@@') === 0) {\n        break;\n      }\n\n      var operation = diffstr[i].length == 0 && i != diffstr.length - 1 ? ' ' : diffstr[i][0];\n\n      if (operation === '+' || operation === '-' || operation === ' ' || operation === '\\\\') {\n        hunk.lines.push(diffstr[i]);\n        hunk.linedelimiters.push(delimiters[i] || '\\n');\n\n        if (operation === '+') {\n          addCount++;\n        } else if (operation === '-') {\n          removeCount++;\n        } else if (operation === ' ') {\n          addCount++;\n          removeCount++;\n        }\n      } else {\n        break;\n      }\n    } // Handle the empty block count case\n\n\n    if (!addCount && hunk.newLines === 1) {\n      hunk.newLines = 0;\n    }\n\n    if (!removeCount && hunk.oldLines === 1) {\n      hunk.oldLines = 0;\n    } // Perform optional sanity checking\n\n\n    if (options.strict) {\n      if (addCount !== hunk.newLines) {\n        throw new Error('Added line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n\n      if (removeCount !== hunk.oldLines) {\n        throw new Error('Removed line count did not match for hunk at line ' + (chunkHeaderIndex + 1));\n      }\n    }\n\n    return hunk;\n  }\n\n  while (i < diffstr.length) {\n    parseIndex();\n  }\n\n  return list;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9wYXRjaC9wYXJzZS5qcyJdLCJuYW1lcyI6WyJwYXJzZVBhdGNoIiwidW5pRGlmZiIsIm9wdGlvbnMiLCJkaWZmc3RyIiwic3BsaXQiLCJkZWxpbWl0ZXJzIiwibWF0Y2giLCJsaXN0IiwiaSIsInBhcnNlSW5kZXgiLCJpbmRleCIsInB1c2giLCJsZW5ndGgiLCJsaW5lIiwidGVzdCIsImhlYWRlciIsImV4ZWMiLCJwYXJzZUZpbGVIZWFkZXIiLCJodW5rcyIsInBhcnNlSHVuayIsInN0cmljdCIsIkVycm9yIiwiSlNPTiIsInN0cmluZ2lmeSIsImZpbGVIZWFkZXIiLCJrZXlQcmVmaXgiLCJkYXRhIiwiZmlsZU5hbWUiLCJyZXBsYWNlIiwic3Vic3RyIiwidHJpbSIsImNodW5rSGVhZGVySW5kZXgiLCJjaHVua0hlYWRlckxpbmUiLCJjaHVua0hlYWRlciIsImh1bmsiLCJvbGRTdGFydCIsIm9sZExpbmVzIiwibmV3U3RhcnQiLCJuZXdMaW5lcyIsImxpbmVzIiwibGluZWRlbGltaXRlcnMiLCJhZGRDb3VudCIsInJlbW92ZUNvdW50IiwiaW5kZXhPZiIsIm9wZXJhdGlvbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU8sU0FBU0EsVUFBVCxDQUFvQkMsT0FBcEIsRUFBMkM7QUFBQTtBQUFBO0FBQUE7QUFBZEMsRUFBQUEsT0FBYyx1RUFBSixFQUFJO0FBQ2hELE1BQUlDLE9BQU8sR0FBR0YsT0FBTyxDQUFDRyxLQUFSLENBQWMscUJBQWQsQ0FBZDtBQUFBLE1BQ0lDLFVBQVUsR0FBR0osT0FBTyxDQUFDSyxLQUFSLENBQWMsc0JBQWQsS0FBeUMsRUFEMUQ7QUFBQSxNQUVJQyxJQUFJLEdBQUcsRUFGWDtBQUFBLE1BR0lDLENBQUMsR0FBRyxDQUhSOztBQUtBLFdBQVNDLFVBQVQsR0FBc0I7QUFDcEIsUUFBSUMsS0FBSyxHQUFHLEVBQVo7QUFDQUgsSUFBQUEsSUFBSSxDQUFDSSxJQUFMLENBQVVELEtBQVYsRUFGb0IsQ0FJcEI7O0FB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QUwsS0FBa0IsQ0FBbkMsRUFBc0M7QUFDcENKLE1BQUFBLElBQUksQ0FBQ0ksUUFBTCxHQUFnQixDQUFoQjtBQUNEOztBQUNELFFBQUksQ0FBQ0ksV0FBRCxJQUFnQlIsSUFBSSxDQUFDRSxRQUFMLEtBQWtCLENBQXRDLEVBQXlDO0FBQ3ZDRixNQUFBQSxJQUFJLENBQUNFLFFBQUwsR0FBZ0IsQ0FBaEI7QUFDRCxLQTVEa0IsQ0E4RG5COzs7QUFDQSxRQUFJbEMsT0FBTyxDQUFDa0IsTUFBWixFQUFvQjtBQUNsQixVQUFJcUIsUUFBUSxLQUFLUCxJQUFJLENBQUNJLFFBQXRCLEVBQWdDO0FBQzlCLGNBQU0sSUFBSWpCLEtBQUosQ0FBVSxzREFBc0RVLGdCQUFnQixHQUFHLENBQXpFLENBQVYsQ0FBTjtBQUNEOztBQUNELFVBQUlXLFdBQVcsS0FBS1IsSUFBSSxDQUFDRSxRQUF6QixFQUFtQztBQUNqQyxjQUFNLElBQUlmLEtBQUosQ0FBVSx3REFBd0RVLGdCQUFnQixHQUFHLENBQTNFLENBQVYsQ0FBTjtBQUNEO0FBQ0Y7O0FBRUQsV0FBT0csSUFBUDtBQUNEOztBQUVELFNBQU8xQixDQUFDLEdBQUdMLE9BQU8sQ0FBQ1MsTUFBbkIsRUFBMkI7QUFDekJILElBQUFBLFVBQVU7QUFDWDs7QUFFRCxTQUFPRixJQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFyc2VQYXRjaCh1bmlEaWZmLCBvcHRpb25zID0ge30pIHtcbiAgbGV0IGRpZmZzdHIgPSB1bmlEaWZmLnNwbGl0KC9cXHJcXG58W1xcblxcdlxcZlxcclxceDg1XS8pLFxuICAgICAgZGVsaW1pdGVycyA9IHVuaURpZmYubWF0Y2goL1xcclxcbnxbXFxuXFx2XFxmXFxyXFx4ODVdL2cpIHx8IFtdLFxuICAgICAgbGlzdCA9IFtdLFxuICAgICAgaSA9IDA7XG5cbiAgZnVuY3Rpb24gcGFyc2VJbmRleCgpIHtcbiAgICBsZXQgaW5kZXggPSB7fTtcbiAgICBsaXN0LnB1c2goaW5kZXgpO1xuXG4gICAgLy8gUGFyc2UgZGlmZiBtZXRhZGF0YVxuICAgIHdoaWxlIChpIDwgZGlmZnN0ci5sZW5ndGgpIHtcbiAgICAgIGxldCBsaW5lID0gZGlmZnN0cltpXTtcblxuICAgICAgLy8gRmlsZSBoZWFkZXIgZm91bmQsIGVuZCBwYXJzaW5nIGRpZmYgbWV0YWRhdGFcbiAgICAgIGlmICgoL14oXFwtXFwtXFwtfFxcK1xcK1xcK3xAQClcXHMvKS50ZXN0KGxpbmUpKSB7XG4gICAgICAgIGJyZWFrO1xuICAgICAgfVxuXG4gICAgICAvLyBEaWZmIGluZGV4XG4gICAgICBsZXQgaGVhZGVyID0gKC9eKD86SW5kZXg6fGRpZmYoPzogLXIgXFx3KykrKVxccysoLis/KVxccyokLykuZXhlYyhsaW5lKTtcbiAgICAgIGlmIChoZWFkZXIpIHtcbiAgICAgICAgaW5kZXguaW5kZXggPSBoZWFkZXJbMV07XG4gICAgICB9XG5cbiAgICAgIGkrKztcbiAgICB9XG5cbiAgICAvLyBQYXJzZSBmaWxlIGhlYWRlcnMgaWYgdGhleSBhcmUgZGVmaW5lZC4gVW5pZmllZCBkaWZmIHJlcXVpcmVzIHRoZW0sIGJ1dFxuICAgIC8vIHRoZXJlJ3Mgbm8gdGVjaG5pY2FsIGlzc3VlcyB0byBoYXZlIGFuIGlzb2xhdGVkIGh1bmsgd2l0aG91dCBmaWxlIGhlYWRlclxuICAgIHBhcnNlRmlsZUhlYWRlcihpbmRleCk7XG4gICAgcGFyc2VGaWxlSGVhZGVyKGluZGV4KTtcblxuICAgIC8vIFBhcnNlIGh1bmtzXG4gICAgaW5kZXguaHVua3MgPSBbXTtcblxuICAgIHdoaWxlIChpIDwgZGlmZnN0ci5sZW5ndGgpIHtcbiAgICAgIGxldCBsaW5lID0gZGlmZnN0cltpXTtcblxuICAgICAgaWYgKCgvXihJbmRleDp8ZGlmZnxcXC1cXC1cXC18XFwrXFwrXFwrKVxccy8pLnRlc3QobGluZSkpIHtcbiAgICAgICAgYnJlYWs7XG4gICAgICB9IGVsc2UgaWYgKCgvXkBALykudGVzdChsaW5lKSkge1xuICAgICAgICBpbmRleC5odW5rcy5wdXNoKHBhcnNlSHVuaygpKTtcbiAgICAgIH0gZWxzZSBpZiAobGluZSAmJiBvcHRpb25zLnN0cmljdCkge1xuICAgICAgICAvLyBJZ25vcmUgdW5leHBlY3RlZCBjb250ZW50IHVubGVzcyBpbiBzdHJpY3QgbW9kZVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gbGluZSAnICsgKGkgKyAxKSArICcgJyArIEpTT04uc3RyaW5naWZ5KGxpbmUpKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGkrKztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvLyBQYXJzZXMgdGhlIC0tLSBhbmQgKysrIGhlYWRlcnMsIGlmIG5vbmUgYXJlIGZvdW5kLCBubyBsaW5lc1xuICAvLyBhcmUgY29uc3VtZWQuXG4gIGZ1bmN0aW9uIHBhcnNlRmlsZUhlYWRlcihpbmRleCkge1xuICAgIGNvbnN0IGZpbGVIZWFkZXIgPSAoL14oLS0tfFxcK1xcK1xcKylcXHMrKC4qKSQvKS5leGVjKGRpZmZzdHJbaV0pO1xuICAgIGlmIChmaWxlSGVhZGVyKSB7XG4gICAgICBsZXQga2V5UHJlZml4ID0gZmlsZUhlYWRlclsxXSA9PT0gJy0tLScgPyAnb2xkJyA6ICduZXcnO1xuICAgICAgY29uc3QgZGF0YSA9IGZpbGVIZWFkZXJbMl0uc3BsaXQoJ1xcdCcsIDIpO1xuICAgICAgbGV0IGZpbGVOYW1lID0gZGF0YVswXS5yZXBsYWNlKC9cXFxcXFxcXC9nLCAnXFxcXCcpO1xuICAgICAgaWYgKCgvXlwiLipcIiQvKS50ZXN0KGZpbGVOYW1lKSkge1xuICAgICAgICBmaWxlTmFtZSA9IGZpbGVOYW1lLnN1YnN0cigxLCBmaWxlTmFtZS5sZW5ndGggLSAyKTtcbiAgICAgIH1cbiAgICAgIGluZGV4W2tleVByZWZpeCArICdGaWxlTmFtZSddID0gZmlsZU5hbWU7XG4gICAgICBpbmRleFtrZXlQcmVmaXggKyAnSGVhZGVyJ10gPSAoZGF0YVsxXSB8fCAnJykudHJpbSgpO1xuXG4gICAgICBpKys7XG4gICAgfVxuICB9XG5cbiAgLy8gUGFyc2VzIGEgaHVua1xuICAvLyBUaGlzIGFzc3VtZXMgdGhhdCB3ZSBhcmUgYXQgdGhlIHN0YXJ0IG9mIGEgaHVuay5cbiAgZnVuY3Rpb24gcGFyc2VIdW5rKCkge1xuICAgIGxldCBjaHVua0hlYWRlckluZGV4ID0gaSxcbiAgICAgICAgY2h1bmtIZWFkZXJMaW5lID0gZGlmZnN0cltpKytdLFxuICAgICAgICBjaHVua0hlYWRlciA9IGNodW5rSGVhZGVyTGluZS5zcGxpdCgvQEAgLShcXGQrKSg/OiwoXFxkKykpPyBcXCsoXFxkKykoPzosKFxcZCspKT8gQEAvKTtcblxuICAgIGxldCBodW5rID0ge1xuICAgICAgb2xkU3RhcnQ6ICtjaHVua0hlYWRlclsxXSxcbiAgICAgIG9sZExpbmVzOiB0eXBlb2YgY2h1bmtIZWFkZXJbMl0gPT09ICd1bmRlZmluZWQnID8gMSA6ICtjaHVua0hlYWRlclsyXSxcbiAgICAgIG5ld1N0YXJ0OiArY2h1bmtIZWFkZXJbM10sXG4gICAgICBuZXdMaW5lczogdHlwZW9mIGNodW5rSGVhZGVyWzRdID09PSAndW5kZWZpbmVkJyA/IDEgOiArY2h1bmtIZWFkZXJbNF0sXG4gICAgICBsaW5lczogW10sXG4gICAgICBsaW5lZGVsaW1pdGVyczogW11cbiAgICB9O1xuXG4gICAgLy8gVW5pZmllZCBEaWZmIEZvcm1hdCBxdWlyazogSWYgdGhlIGNodW5rIHNpemUgaXMgMCxcbiAgICAvLyB0aGUgZmlyc3QgbnVtYmVyIGlzIG9uZSBsb3dlciB0aGFuIG9uZSB3b3VsZCBleHBlY3QuXG4gICAgLy8gaHR0cHM6Ly93d3cuYXJ0aW1hLmNvbS93ZWJsb2dzL3ZpZXdwb3N0LmpzcD90aHJlYWQ9MTY0MjkzXG4gICAgaWYgKGh1bmsub2xkTGluZXMgPT09IDApIHtcbiAgICAgIGh1bmsub2xkU3RhcnQgKz0gMTtcbiAgICB9XG4gICAgaWYgKGh1bmsubmV3TGluZXMgPT09IDApIHtcbiAgICAgIGh1bmsubmV3U3RhcnQgKz0gMTtcbiAgICB9XG5cbiAgICBsZXQgYWRkQ291bnQgPSAwLFxuICAgICAgICByZW1vdmVDb3VudCA9IDA7XG4gICAgZm9yICg7IGkgPCBkaWZmc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICAvLyBMaW5lcyBzdGFydGluZyB3aXRoICctLS0nIGNvdWxkIGJlIG1pc3Rha2VuIGZvciB0aGUgXCJyZW1vdmUgbGluZVwiIG9wZXJhdGlvblxuICAgICAgLy8gQnV0IHRoZXkgY291bGQgYmUgdGhlIGhlYWRlciBmb3IgdGhlIG5leHQgZmlsZS4gVGhlcmVmb3JlIHBydW5lIHN1Y2ggY2FzZXMgb3V0LlxuICAgICAgaWYgKGRpZmZzdHJbaV0uaW5kZXhPZignLS0tICcpID09PSAwXG4gICAgICAgICAgICAmJiAoaSArIDIgPCBkaWZmc3RyLmxlbmd0aClcbiAgICAgICAgICAgICYmIGRpZmZzdHJbaSArIDFdLmluZGV4T2YoJysrKyAnKSA9PT0gMFxuICAgICAgICAgICAgJiYgZGlmZnN0cltpICsgMl0uaW5kZXhPZignQEAnKSA9PT0gMCkge1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgICAgbGV0IG9wZXJhdGlvbiA9IChkaWZmc3RyW2ldLmxlbmd0aCA9PSAwICYmIGkgIT0gKGRpZmZzdHIubGVuZ3RoIC0gMSkpID8gJyAnIDogZGlmZnN0cltpXVswXTtcblxuICAgICAgaWYgKG9wZXJhdGlvbiA9PT0gJysnIHx8IG9wZXJhdGlvbiA9PT0gJy0nIHx8IG9wZXJhdGlvbiA9PT0gJyAnIHx8IG9wZXJhdGlvbiA9PT0gJ1xcXFwnKSB7XG4gICAgICAgIGh1bmsubGluZXMucHVzaChkaWZmc3RyW2ldKTtcbiAgICAgICAgaHVuay5saW5lZGVsaW1pdGVycy5wdXNoKGRlbGltaXRlcnNbaV0gfHwgJ1xcbicpO1xuXG4gICAgICAgIGlmIChvcGVyYXRpb24gPT09ICcrJykge1xuICAgICAgICAgIGFkZENvdW50Kys7XG4gICAgICAgIH0gZWxzZSBpZiAob3BlcmF0aW9uID09PSAnLScpIHtcbiAgICAgICAgICByZW1vdmVDb3VudCsrO1xuICAgICAgICB9IGVsc2UgaWYgKG9wZXJhdGlvbiA9PT0gJyAnKSB7XG4gICAgICAgICAgYWRkQ291bnQrKztcbiAgICAgICAgICByZW1vdmVDb3VudCsrO1xuICAgICAgICB9XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBIYW5kbGUgdGhlIGVtcHR5IGJsb2NrIGNvdW50IGNhc2VcbiAgICBpZiAoIWFkZENvdW50ICYmIGh1bmsubmV3TGluZXMgPT09IDEpIHtcbiAgICAgIGh1bmsubmV3TGluZXMgPSAwO1xuICAgIH1cbiAgICBpZiAoIXJlbW92ZUNvdW50ICYmIGh1bmsub2xkTGluZXMgPT09IDEpIHtcbiAgICAgIGh1bmsub2xkTGluZXMgPSAwO1xuICAgIH1cblxuICAgIC8vIFBlcmZvcm0gb3B0aW9uYWwgc2FuaXR5IGNoZWNraW5nXG4gICAgaWYgKG9wdGlvbnMuc3RyaWN0KSB7XG4gICAgICBpZiAoYWRkQ291bnQgIT09IGh1bmsubmV3TGluZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdBZGRlZCBsaW5lIGNvdW50IGRpZCBub3QgbWF0Y2ggZm9yIGh1bmsgYXQgbGluZSAnICsgKGNodW5rSGVhZGVySW5kZXggKyAxKSk7XG4gICAgICB9XG4gICAgICBpZiAocmVtb3ZlQ291bnQgIT09IGh1bmsub2xkTGluZXMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZW1vdmVkIGxpbmUgY291bnQgZGlkIG5vdCBtYXRjaCBmb3IgaHVuayBhdCBsaW5lICcgKyAoY2h1bmtIZWFkZXJJbmRleCArIDEpKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gaHVuaztcbiAgfVxuXG4gIHdoaWxlIChpIDwgZGlmZnN0ci5sZW5ndGgpIHtcbiAgICBwYXJzZUluZGV4KCk7XG4gIH1cblxuICByZXR1cm4gbGlzdDtcbn1cbiJdfQ==\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\n/*istanbul ignore end*/\n// Iterator that traverses in the range of [min, max], stepping\n// by distance from a given start position. I.e. for [0, 4], with\n// start of 2, this will iterate 2, 3, 1, 4, 0.\nfunction\n/*istanbul ignore start*/\n_default\n/*istanbul ignore end*/\n(start, minLine, maxLine) {\n  var wantForward = true,\n      backwardExhausted = false,\n      forwardExhausted = false,\n      localOffset = 1;\n  return function iterator() {\n    if (wantForward && !forwardExhausted) {\n      if (backwardExhausted) {\n        localOffset++;\n      } else {\n        wantForward = false;\n      } // Check if trying to fit beyond text length, and if not, check it fits\n      // after offset location (or desired location on first iteration)\n\n\n      if (start + localOffset <= maxLine) {\n        return localOffset;\n      }\n\n      forwardExhausted = true;\n    }\n\n    if (!backwardExhausted) {\n      if (!forwardExhausted) {\n        wantForward = true;\n      } // Check if trying to fit before text beginning, and if not, check it fits\n      // before offset location\n\n\n      if (minLine <= start - localOffset) {\n        return -localOffset++;\n      }\n\n      backwardExhausted = true;\n      return iterator();\n    } // We tried to fit hunk before text beginning and beyond text length, then\n    // hunk can't fit on the text. Return undefined\n\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2Rpc3RhbmNlLWl0ZXJhdG9yLmpzIl0sIm5hbWVzIjpbInN0YXJ0IiwibWluTGluZSIsIm1heExpbmUiLCJ3YW50Rm9yd2FyZCIsImJhY2t3YXJkRXhoYXVzdGVkIiwiZm9yd2FyZEV4aGF1c3RlZCIsImxvY2FsT2Zmc2V0IiwiaXRlcmF0b3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNlO0FBQUE7QUFBQTtBQUFBO0FBQUEsQ0FBU0EsS0FBVCxFQUFnQkMsT0FBaEIsRUFBeUJDLE9BQXpCLEVBQWtDO0FBQy9DLE1BQUlDLFdBQVcsR0FBRyxJQUFsQjtBQUFBLE1BQ0lDLGlCQUFpQixHQUFHLEtBRHhCO0FBQUEsTUFFSUMsZ0JBQWdCLEdBQUcsS0FGdkI7QUFBQSxNQUdJQyxXQUFXLEdBQUcsQ0FIbEI7QUFLQSxTQUFPLFNBQVNDLFFBQVQsR0FBb0I7QUFDekIsUUFBSUosV0FBVyxJQUFJLENBQUNFLGdCQUFwQixFQUFzQztBQUNwQyxVQUFJRCxpQkFBSixFQUF1QjtBQUNyQkUsUUFBQUEsV0FBVztBQUNaLE9BRkQsTUFFTztBQUNMSCxRQUFBQSxXQUFXLEdBQUcsS0FBZDtBQUNELE9BTG1DLENBT3BDO0FBQ0E7OztBQUNBLFVBQUlILEtBQUssR0FBR00sV0FBUixJQUF1QkosT0FBM0IsRUFBb0M7QUFDbEMsZUFBT0ksV0FBUDtBQUNEOztBQUVERCxNQUFBQSxnQkFBZ0IsR0FBRyxJQUFuQjtBQUNEOztBQUVELFFBQUksQ0FBQ0QsaUJBQUwsRUFBd0I7QUFDdEIsVUFBSSxDQUFDQyxnQkFBTCxFQUF1QjtBQUNyQkYsUUFBQUEsV0FBVyxHQUFHLElBQWQ7QUFDRCxPQUhxQixDQUt0QjtBQUNBOzs7QUFDQSxVQUFJRixPQUFPLElBQUlELEtBQUssR0FBR00sV0FBdkIsRUFBb0M7QUFDbEMsZUFBTyxDQUFDQSxXQUFXLEVBQW5CO0FBQ0Q7O0FBRURGLE1BQUFBLGlCQUFpQixHQUFHLElBQXBCO0FBQ0EsYUFBT0csUUFBUSxFQUFmO0FBQ0QsS0E5QndCLENBZ0N6QjtBQUNBOztBQUNELEdBbENEO0FBbUNEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSXRlcmF0b3IgdGhhdCB0cmF2ZXJzZXMgaW4gdGhlIHJhbmdlIG9mIFttaW4sIG1heF0sIHN0ZXBwaW5nXG4vLyBieSBkaXN0YW5jZSBmcm9tIGEgZ2l2ZW4gc3RhcnQgcG9zaXRpb24uIEkuZS4gZm9yIFswLCA0XSwgd2l0aFxuLy8gc3RhcnQgb2YgMiwgdGhpcyB3aWxsIGl0ZXJhdGUgMiwgMywgMSwgNCwgMC5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHN0YXJ0LCBtaW5MaW5lLCBtYXhMaW5lKSB7XG4gIGxldCB3YW50Rm9yd2FyZCA9IHRydWUsXG4gICAgICBiYWNrd2FyZEV4aGF1c3RlZCA9IGZhbHNlLFxuICAgICAgZm9yd2FyZEV4aGF1c3RlZCA9IGZhbHNlLFxuICAgICAgbG9jYWxPZmZzZXQgPSAxO1xuXG4gIHJldHVybiBmdW5jdGlvbiBpdGVyYXRvcigpIHtcbiAgICBpZiAod2FudEZvcndhcmQgJiYgIWZvcndhcmRFeGhhdXN0ZWQpIHtcbiAgICAgIGlmIChiYWNrd2FyZEV4aGF1c3RlZCkge1xuICAgICAgICBsb2NhbE9mZnNldCsrO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgd2FudEZvcndhcmQgPSBmYWxzZTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdHJ5aW5nIHRvIGZpdCBiZXlvbmQgdGV4dCBsZW5ndGgsIGFuZCBpZiBub3QsIGNoZWNrIGl0IGZpdHNcbiAgICAgIC8vIGFmdGVyIG9mZnNldCBsb2NhdGlvbiAob3IgZGVzaXJlZCBsb2NhdGlvbiBvbiBmaXJzdCBpdGVyYXRpb24pXG4gICAgICBpZiAoc3RhcnQgKyBsb2NhbE9mZnNldCA8PSBtYXhMaW5lKSB7XG4gICAgICAgIHJldHVybiBsb2NhbE9mZnNldDtcbiAgICAgIH1cblxuICAgICAgZm9yd2FyZEV4aGF1c3RlZCA9IHRydWU7XG4gICAgfVxuXG4gICAgaWYgKCFiYWNrd2FyZEV4aGF1c3RlZCkge1xuICAgICAgaWYgKCFmb3J3YXJkRXhoYXVzdGVkKSB7XG4gICAgICAgIHdhbnRGb3J3YXJkID0gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgLy8gQ2hlY2sgaWYgdHJ5aW5nIHRvIGZpdCBiZWZvcmUgdGV4dCBiZWdpbm5pbmcsIGFuZCBpZiBub3QsIGNoZWNrIGl0IGZpdHNcbiAgICAgIC8vIGJlZm9yZSBvZmZzZXQgbG9jYXRpb25cbiAgICAgIGlmIChtaW5MaW5lIDw9IHN0YXJ0IC0gbG9jYWxPZmZzZXQpIHtcbiAgICAgICAgcmV0dXJuIC1sb2NhbE9mZnNldCsrO1xuICAgICAgfVxuXG4gICAgICBiYWNrd2FyZEV4aGF1c3RlZCA9IHRydWU7XG4gICAgICByZXR1cm4gaXRlcmF0b3IoKTtcbiAgICB9XG5cbiAgICAvLyBXZSB0cmllZCB0byBmaXQgaHVuayBiZWZvcmUgdGV4dCBiZWdpbm5pbmcgYW5kIGJleW9uZCB0ZXh0IGxlbmd0aCwgdGhlblxuICAgIC8vIGh1bmsgY2FuJ3QgZml0IG9uIHRoZSB0ZXh0LiBSZXR1cm4gdW5kZWZpbmVkXG4gIH07XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.applyPatch = applyPatch;\nexports.applyPatches = applyPatches;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_parse = require(\"./parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_distanceIterator = _interopRequireDefault(require(\"../util/distance-iterator\"))\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\nfunction applyPatch(source, uniDiff) {\n  /*istanbul ignore start*/\n  var\n  /*istanbul ignore end*/\n  options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (typeof uniDiff === 'string') {\n    uniDiff =\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _parse\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    parsePatch)\n    /*istanbul ignore end*/\n    (uniDiff);\n  }\n\n  if (Array.isArray(uniDiff)) {\n    if (uniDiff.length > 1) {\n      throw new Error('applyPatch only works with a single input.');\n    }\n\n    uniDiff = uniDiff[0];\n  } // Apply the diff to the input\n\n\n  var lines = source.split(/\\r\\n|[\\n\\v\\f\\r\\x85]/),\n      delimiters = source.match(/\\r\\n|[\\n\\v\\f\\r\\x85]/g) || [],\n      hunks = uniDiff.hunks,\n      compareLine = options.compareLine || function (lineNumber, line, operation, patchContent)\n  /*istanbul ignore start*/\n  {\n    return (\n      /*istanbul ignore end*/\n      line === patchContent\n    );\n  },\n      errorCount = 0,\n      fuzzFactor = options.fuzzFactor || 0,\n      minLine = 0,\n      offset = 0,\n      removeEOFNL,\n      addEOFNL;\n  /**\n   * Checks if the hunk exactly fits on the provided location\n   */\n\n\n  function hunkFits(hunk, toPos) {\n    for (var j = 0; j < hunk.lines.length; j++) {\n      var line = hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line;\n\n      if (operation === ' ' || operation === '-') {\n        // Context sanity check\n        if (!compareLine(toPos + 1, lines[toPos], operation, content)) {\n          errorCount++;\n\n          if (errorCount > fuzzFactor) {\n            return false;\n          }\n        }\n\n        toPos++;\n      }\n    }\n\n    return true;\n  } // Search best fit offsets for each hunk based on the previous ones\n\n\n  for (var i = 0; i < hunks.length; i++) {\n    var hunk = hunks[i],\n        maxLine = lines.length - hunk.oldLines,\n        localOffset = 0,\n        toPos = offset + hunk.oldStart - 1;\n    var iterator =\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _distanceIterator\n    /*istanbul ignore end*/\n    [\n    /*istanbul ignore start*/\n    \"default\"\n    /*istanbul ignore end*/\n    ])(toPos, minLine, maxLine);\n\n    for (; localOffset !== undefined; localOffset = iterator()) {\n      if (hunkFits(hunk, toPos + localOffset)) {\n        hunk.offset = offset += localOffset;\n        break;\n      }\n    }\n\n    if (localOffset === undefined) {\n      return false;\n    } // Set lower text limit to end of the current hunk, so next ones don't try\n    // to fit over already patched text\n\n\n    minLine = hunk.offset + hunk.oldStart + hunk.oldLines;\n  } // Apply patch hunks\n\n\n  var diffOffset = 0;\n\n  for (var _i = 0; _i < hunks.length; _i++) {\n    var _hunk = hunks[_i],\n        _toPos = _hunk.oldStart + _hunk.offset + diffOffset - 1;\n\n    diffOffset += _hunk.newLines - _hunk.oldLines;\n\n    for (var j = 0; j < _hunk.lines.length; j++) {\n      var line = _hunk.lines[j],\n          operation = line.length > 0 ? line[0] : ' ',\n          content = line.length > 0 ? line.substr(1) : line,\n          delimiter = _hunk.linedelimiters[j];\n\n      if (operation === ' ') {\n        _toPos++;\n      } else if (operation === '-') {\n        lines.splice(_toPos, 1);\n        delimiters.splice(_toPos, 1);\n        /* istanbul ignore else */\n      } else if (operation === '+') {\n        lines.splice(_toPos, 0, content);\n        delimiters.splice(_toPos, 0, delimiter);\n        _toPos++;\n      } else if (operation === '\\\\') {\n        var previousOperation = _hunk.lines[j - 1] ? _hunk.lines[j - 1][0] : null;\n\n        if (previousOperation === '+') {\n          removeEOFNL = true;\n        } else if (previousOperation === '-') {\n          addEOFNL = true;\n        }\n      }\n    }\n  } // Handle EOFNL insertion/removal\n\n\n  if (removeEOFNL) {\n    while (!lines[lines.length - 1]) {\n      lines.pop();\n      delimiters.pop();\n    }\n  } else if (addEOFNL) {\n    lines.push('');\n    delimiters.push('\\n');\n  }\n\n  for (var _k = 0; _k < lines.length - 1; _k++) {\n    lines[_k] = lines[_k] + delimiters[_k];\n  }\n\n  return lines.join('');\n} // Wrapper that supports multiple file patches via callbacks.\n\n\nfunction applyPatches(uniDiff, options) {\n  if (typeof uniDiff === 'string') {\n    uniDiff =\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _parse\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    parsePatch)\n    /*istanbul ignore end*/\n    (uniDiff);\n  }\n\n  var currentIndex = 0;\n\n  function processIndex() {\n    var index = uniDiff[currentIndex++];\n\n    if (!index) {\n      return options.complete();\n    }\n\n    options.loadFile(index, function (err, data) {\n      if (err) {\n        return options.complete(err);\n      }\n\n      var updatedContent = applyPatch(data, index, options);\n      options.patched(index, updatedContent, function (err) {\n        if (err) {\n          return options.complete(err);\n        }\n\n        processIndex();\n      });\n    });\n  }\n\n  processIndex();\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.structuredPatch = structuredPatch;\nexports.formatPatch = formatPatch;\nexports.createTwoFilesPatch = createTwoFilesPatch;\nexports.createPatch = createPatch;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_line = require(\"../diff/line\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*istanbul ignore end*/\nfunction structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (typeof options.context === 'undefined') {\n    options.context = 4;\n  }\n\n  var diff =\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _line\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  diffLines)\n  /*istanbul ignore end*/\n  (oldStr, newStr, options);\n\n  if (!diff) {\n    return;\n  }\n\n  diff.push({\n    value: '',\n    lines: []\n  }); // Append an empty value to make cleanup easier\n\n  function contextLines(lines) {\n    return lines.map(function (entry) {\n      return ' ' + entry;\n    });\n  }\n\n  var hunks = [];\n  var oldRangeStart = 0,\n      newRangeStart = 0,\n      curRange = [],\n      oldLine = 1,\n      newLine = 1;\n\n  /*istanbul ignore start*/\n  var _loop = function _loop(\n  /*istanbul ignore end*/\n  i) {\n    var current = diff[i],\n        lines = current.lines || current.value.replace(/\\n$/, '').split('\\n');\n    current.lines = lines;\n\n    if (current.added || current.removed) {\n      /*istanbul ignore start*/\n      var _curRange;\n\n      /*istanbul ignore end*/\n      // If we have previous context, start with that\n      if (!oldRangeStart) {\n        var prev = diff[i - 1];\n        oldRangeStart = oldLine;\n        newRangeStart = newLine;\n\n        if (prev) {\n          curRange = options.context > 0 ? contextLines(prev.lines.slice(-options.context)) : [];\n          oldRangeStart -= curRange.length;\n          newRangeStart -= curRange.length;\n        }\n      } // Output our changes\n\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_curRange =\n      /*istanbul ignore end*/\n      curRange).push.apply(\n      /*istanbul ignore start*/\n      _curRange\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      lines.map(function (entry) {\n        return (current.added ? '+' : '-') + entry;\n      }))); // Track the updated file position\n\n\n      if (current.added) {\n        newLine += lines.length;\n      } else {\n        oldLine += lines.length;\n      }\n    } else {\n      // Identical context lines. Track line changes\n      if (oldRangeStart) {\n        // Close out any changes that have been output (or join overlapping)\n        if (lines.length <= options.context * 2 && i < diff.length - 2) {\n          /*istanbul ignore start*/\n          var _curRange2;\n\n          /*istanbul ignore end*/\n          // Overlapping\n\n          /*istanbul ignore start*/\n\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          (_curRange2 =\n          /*istanbul ignore end*/\n          curRange).push.apply(\n          /*istanbul ignore start*/\n          _curRange2\n          /*istanbul ignore end*/\n          ,\n          /*istanbul ignore start*/\n          _toConsumableArray(\n          /*istanbul ignore end*/\n          contextLines(lines)));\n        } else {\n          /*istanbul ignore start*/\n          var _curRange3;\n\n          /*istanbul ignore end*/\n          // end the range and output\n          var contextSize = Math.min(lines.length, options.context);\n\n          /*istanbul ignore start*/\n\n          /*istanbul ignore end*/\n\n          /*istanbul ignore start*/\n          (_curRange3 =\n          /*istanbul ignore end*/\n          curRange).push.apply(\n          /*istanbul ignore start*/\n          _curRange3\n          /*istanbul ignore end*/\n          ,\n          /*istanbul ignore start*/\n          _toConsumableArray(\n          /*istanbul ignore end*/\n          contextLines(lines.slice(0, contextSize))));\n\n          var hunk = {\n            oldStart: oldRangeStart,\n            oldLines: oldLine - oldRangeStart + contextSize,\n            newStart: newRangeStart,\n            newLines: newLine - newRangeStart + contextSize,\n            lines: curRange\n          };\n\n          if (i >= diff.length - 2 && lines.length <= options.context) {\n            // EOF is inside this hunk\n            var oldEOFNewline = /\\n$/.test(oldStr);\n            var newEOFNewline = /\\n$/.test(newStr);\n            var noNlBeforeAdds = lines.length == 0 && curRange.length > hunk.oldLines;\n\n            if (!oldEOFNewline && noNlBeforeAdds && oldStr.length > 0) {\n              // special case: old has no eol and no trailing context; no-nl can end up before adds\n              // however, if the old file is empty, do not output the no-nl line\n              curRange.splice(hunk.oldLines, 0, '\\\\ No newline at end of file');\n            }\n\n            if (!oldEOFNewline && !noNlBeforeAdds || !newEOFNewline) {\n              curRange.push('\\\\ No newline at end of file');\n            }\n          }\n\n          hunks.push(hunk);\n          oldRangeStart = 0;\n          newRangeStart = 0;\n          curRange = [];\n        }\n      }\n\n      oldLine += lines.length;\n      newLine += lines.length;\n    }\n  };\n\n  for (var i = 0; i < diff.length; i++) {\n    /*istanbul ignore start*/\n    _loop(\n    /*istanbul ignore end*/\n    i);\n  }\n\n  return {\n    oldFileName: oldFileName,\n    newFileName: newFileName,\n    oldHeader: oldHeader,\n    newHeader: newHeader,\n    hunks: hunks\n  };\n}\n\nfunction formatPatch(diff) {\n  var ret = [];\n\n  if (diff.oldFileName == diff.newFileName) {\n    ret.push('Index: ' + diff.oldFileName);\n  }\n\n  ret.push('===================================================================');\n  ret.push('--- ' + diff.oldFileName + (typeof diff.oldHeader === 'undefined' ? '' : '\\t' + diff.oldHeader));\n  ret.push('+++ ' + diff.newFileName + (typeof diff.newHeader === 'undefined' ? '' : '\\t' + diff.newHeader));\n\n  for (var i = 0; i < diff.hunks.length; i++) {\n    var hunk = diff.hunks[i]; // Unified Diff Format quirk: If the chunk size is 0,\n    // the first number is one lower than one would expect.\n    // https://www.artima.com/weblogs/viewpost.jsp?thread=164293\n\n    if (hunk.oldLines === 0) {\n      hunk.oldStart -= 1;\n    }\n\n    if (hunk.newLines === 0) {\n      hunk.newStart -= 1;\n    }\n\n    ret.push('@@ -' + hunk.oldStart + ',' + hunk.oldLines + ' +' + hunk.newStart + ',' + hunk.newLines + ' @@');\n    ret.push.apply(ret, hunk.lines);\n  }\n\n  return ret.join('\\n') + '\\n';\n}\n\nfunction createTwoFilesPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return formatPatch(structuredPatch(oldFileName, newFileName, oldStr, newStr, oldHeader, newHeader, options));\n}\n\nfunction createPatch(fileName, oldStr, newStr, oldHeader, newHeader, options) {\n  return createTwoFilesPatch(fileName, fileName, oldStr, newStr, oldHeader, newHeader, options);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arrayEqual = arrayEqual;\nexports.arrayStartsWith = arrayStartsWith;\n\n/*istanbul ignore end*/\nfunction arrayEqual(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  return arrayStartsWith(a, b);\n}\n\nfunction arrayStartsWith(array, start) {\n  if (start.length > array.length) {\n    return false;\n  }\n\n  for (var i = 0; i < start.length; i++) {\n    if (start[i] !== array[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FycmF5LmpzIl0sIm5hbWVzIjpbImFycmF5RXF1YWwiLCJhIiwiYiIsImxlbmd0aCIsImFycmF5U3RhcnRzV2l0aCIsImFycmF5Iiwic3RhcnQiLCJpIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQU8sU0FBU0EsVUFBVCxDQUFvQkMsQ0FBcEIsRUFBdUJDLENBQXZCLEVBQTBCO0FBQy9CLE1BQUlELENBQUMsQ0FBQ0UsTUFBRixLQUFhRCxDQUFDLENBQUNDLE1BQW5CLEVBQTJCO0FBQ3pCLFdBQU8sS0FBUDtBQUNEOztBQUVELFNBQU9DLGVBQWUsQ0FBQ0gsQ0FBRCxFQUFJQyxDQUFKLENBQXRCO0FBQ0Q7O0FBRU0sU0FBU0UsZUFBVCxDQUF5QkMsS0FBekIsRUFBZ0NDLEtBQWhDLEVBQXVDO0FBQzVDLE1BQUlBLEtBQUssQ0FBQ0gsTUFBTixHQUFlRSxLQUFLLENBQUNGLE1BQXpCLEVBQWlDO0FBQy9CLFdBQU8sS0FBUDtBQUNEOztBQUVELE9BQUssSUFBSUksQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0QsS0FBSyxDQUFDSCxNQUExQixFQUFrQ0ksQ0FBQyxFQUFuQyxFQUF1QztBQUNyQyxRQUFJRCxLQUFLLENBQUNDLENBQUQsQ0FBTCxLQUFhRixLQUFLLENBQUNFLENBQUQsQ0FBdEIsRUFBMkI7QUFDekIsYUFBTyxLQUFQO0FBQ0Q7QUFDRjs7QUFFRCxTQUFPLElBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBhcnJheUVxdWFsKGEsIGIpIHtcbiAgaWYgKGEubGVuZ3RoICE9PSBiLmxlbmd0aCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBhcnJheVN0YXJ0c1dpdGgoYSwgYik7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcnJheVN0YXJ0c1dpdGgoYXJyYXksIHN0YXJ0KSB7XG4gIGlmIChzdGFydC5sZW5ndGggPiBhcnJheS5sZW5ndGgpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBmb3IgKGxldCBpID0gMDsgaSA8IHN0YXJ0Lmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0YXJ0W2ldICE9PSBhcnJheVtpXSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuIl19\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcLineCount = calcLineCount;\nexports.merge = merge;\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_create = require(\"./create\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_parse = require(\"./parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_array = require(\"../util/array\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n/*istanbul ignore end*/\nfunction calcLineCount(hunk) {\n  /*istanbul ignore start*/\n  var _calcOldNewLineCount =\n  /*istanbul ignore end*/\n  calcOldNewLineCount(hunk.lines),\n      oldLines = _calcOldNewLineCount.oldLines,\n      newLines = _calcOldNewLineCount.newLines;\n\n  if (oldLines !== undefined) {\n    hunk.oldLines = oldLines;\n  } else {\n    delete hunk.oldLines;\n  }\n\n  if (newLines !== undefined) {\n    hunk.newLines = newLines;\n  } else {\n    delete hunk.newLines;\n  }\n}\n\nfunction merge(mine, theirs, base) {\n  mine = loadPatch(mine, base);\n  theirs = loadPatch(theirs, base);\n  var ret = {}; // For index we just let it pass through as it doesn't have any necessary meaning.\n  // Leaving sanity checks on this to the API consumer that may know more about the\n  // meaning in their own context.\n\n  if (mine.index || theirs.index) {\n    ret.index = mine.index || theirs.index;\n  }\n\n  if (mine.newFileName || theirs.newFileName) {\n    if (!fileNameChanged(mine)) {\n      // No header or no change in ours, use theirs (and ours if theirs does not exist)\n      ret.oldFileName = theirs.oldFileName || mine.oldFileName;\n      ret.newFileName = theirs.newFileName || mine.newFileName;\n      ret.oldHeader = theirs.oldHeader || mine.oldHeader;\n      ret.newHeader = theirs.newHeader || mine.newHeader;\n    } else if (!fileNameChanged(theirs)) {\n      // No header or no change in theirs, use ours\n      ret.oldFileName = mine.oldFileName;\n      ret.newFileName = mine.newFileName;\n      ret.oldHeader = mine.oldHeader;\n      ret.newHeader = mine.newHeader;\n    } else {\n      // Both changed... figure it out\n      ret.oldFileName = selectField(ret, mine.oldFileName, theirs.oldFileName);\n      ret.newFileName = selectField(ret, mine.newFileName, theirs.newFileName);\n      ret.oldHeader = selectField(ret, mine.oldHeader, theirs.oldHeader);\n      ret.newHeader = selectField(ret, mine.newHeader, theirs.newHeader);\n    }\n  }\n\n  ret.hunks = [];\n  var mineIndex = 0,\n      theirsIndex = 0,\n      mineOffset = 0,\n      theirsOffset = 0;\n\n  while (mineIndex < mine.hunks.length || theirsIndex < theirs.hunks.length) {\n    var mineCurrent = mine.hunks[mineIndex] || {\n      oldStart: Infinity\n    },\n        theirsCurrent = theirs.hunks[theirsIndex] || {\n      oldStart: Infinity\n    };\n\n    if (hunkBefore(mineCurrent, theirsCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(mineCurrent, mineOffset));\n      mineIndex++;\n      theirsOffset += mineCurrent.newLines - mineCurrent.oldLines;\n    } else if (hunkBefore(theirsCurrent, mineCurrent)) {\n      // This patch does not overlap with any of the others, yay.\n      ret.hunks.push(cloneHunk(theirsCurrent, theirsOffset));\n      theirsIndex++;\n      mineOffset += theirsCurrent.newLines - theirsCurrent.oldLines;\n    } else {\n      // Overlap, merge as best we can\n      var mergedHunk = {\n        oldStart: Math.min(mineCurrent.oldStart, theirsCurrent.oldStart),\n        oldLines: 0,\n        newStart: Math.min(mineCurrent.newStart + mineOffset, theirsCurrent.oldStart + theirsOffset),\n        newLines: 0,\n        lines: []\n      };\n      mergeLines(mergedHunk, mineCurrent.oldStart, mineCurrent.lines, theirsCurrent.oldStart, theirsCurrent.lines);\n      theirsIndex++;\n      mineIndex++;\n      ret.hunks.push(mergedHunk);\n    }\n  }\n\n  return ret;\n}\n\nfunction loadPatch(param, base) {\n  if (typeof param === 'string') {\n    if (/^@@/m.test(param) || /^Index:/m.test(param)) {\n      return (\n        /*istanbul ignore start*/\n        (0,\n        /*istanbul ignore end*/\n\n        /*istanbul ignore start*/\n        _parse\n        /*istanbul ignore end*/\n        .\n        /*istanbul ignore start*/\n        parsePatch)\n        /*istanbul ignore end*/\n        (param)[0]\n      );\n    }\n\n    if (!base) {\n      throw new Error('Must provide a base reference or pass in a patch');\n    }\n\n    return (\n      /*istanbul ignore start*/\n      (0,\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      _create\n      /*istanbul ignore end*/\n      .\n      /*istanbul ignore start*/\n      structuredPatch)\n      /*istanbul ignore end*/\n      (undefined, undefined, base, param)\n    );\n  }\n\n  return param;\n}\n\nfunction fileNameChanged(patch) {\n  return patch.newFileName && patch.newFileName !== patch.oldFileName;\n}\n\nfunction selectField(index, mine, theirs) {\n  if (mine === theirs) {\n    return mine;\n  } else {\n    index.conflict = true;\n    return {\n      mine: mine,\n      theirs: theirs\n    };\n  }\n}\n\nfunction hunkBefore(test, check) {\n  return test.oldStart < check.oldStart && test.oldStart + test.oldLines < check.oldStart;\n}\n\nfunction cloneHunk(hunk, offset) {\n  return {\n    oldStart: hunk.oldStart,\n    oldLines: hunk.oldLines,\n    newStart: hunk.newStart + offset,\n    newLines: hunk.newLines,\n    lines: hunk.lines\n  };\n}\n\nfunction mergeLines(hunk, mineOffset, mineLines, theirOffset, theirLines) {\n  // This will generally result in a conflicted hunk, but there are cases where the context\n  // is the only overlap where we can successfully merge the content here.\n  var mine = {\n    offset: mineOffset,\n    lines: mineLines,\n    index: 0\n  },\n      their = {\n    offset: theirOffset,\n    lines: theirLines,\n    index: 0\n  }; // Handle any leading content\n\n  insertLeading(hunk, mine, their);\n  insertLeading(hunk, their, mine); // Now in the overlap content. Scan through and select the best changes from each.\n\n  while (mine.index < mine.lines.length && their.index < their.lines.length) {\n    var mineCurrent = mine.lines[mine.index],\n        theirCurrent = their.lines[their.index];\n\n    if ((mineCurrent[0] === '-' || mineCurrent[0] === '+') && (theirCurrent[0] === '-' || theirCurrent[0] === '+')) {\n      // Both modified ...\n      mutualChange(hunk, mine, their);\n    } else if (mineCurrent[0] === '+' && theirCurrent[0] === ' ') {\n      /*istanbul ignore start*/\n      var _hunk$lines;\n\n      /*istanbul ignore end*/\n      // Mine inserted\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      collectChange(mine)));\n    } else if (theirCurrent[0] === '+' && mineCurrent[0] === ' ') {\n      /*istanbul ignore start*/\n      var _hunk$lines2;\n\n      /*istanbul ignore end*/\n      // Theirs inserted\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines2 =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines2\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      collectChange(their)));\n    } else if (mineCurrent[0] === '-' && theirCurrent[0] === ' ') {\n      // Mine removed or edited\n      removal(hunk, mine, their);\n    } else if (theirCurrent[0] === '-' && mineCurrent[0] === ' ') {\n      // Their removed or edited\n      removal(hunk, their, mine, true);\n    } else if (mineCurrent === theirCurrent) {\n      // Context identity\n      hunk.lines.push(mineCurrent);\n      mine.index++;\n      their.index++;\n    } else {\n      // Context mismatch\n      conflict(hunk, collectChange(mine), collectChange(their));\n    }\n  } // Now push anything that may be remaining\n\n\n  insertTrailing(hunk, mine);\n  insertTrailing(hunk, their);\n  calcLineCount(hunk);\n}\n\nfunction mutualChange(hunk, mine, their) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectChange(their);\n\n  if (allRemoves(myChanges) && allRemoves(theirChanges)) {\n    // Special case for remove changes that are supersets of one another\n    if (\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _array\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    arrayStartsWith)\n    /*istanbul ignore end*/\n    (myChanges, theirChanges) && skipRemoveSuperset(their, myChanges, myChanges.length - theirChanges.length)) {\n      /*istanbul ignore start*/\n      var _hunk$lines3;\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines3 =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines3\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      myChanges));\n\n      return;\n    } else if (\n    /*istanbul ignore start*/\n    (0,\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    _array\n    /*istanbul ignore end*/\n    .\n    /*istanbul ignore start*/\n    arrayStartsWith)\n    /*istanbul ignore end*/\n    (theirChanges, myChanges) && skipRemoveSuperset(mine, theirChanges, theirChanges.length - myChanges.length)) {\n      /*istanbul ignore start*/\n      var _hunk$lines4;\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n\n      /*istanbul ignore end*/\n\n      /*istanbul ignore start*/\n      (_hunk$lines4 =\n      /*istanbul ignore end*/\n      hunk.lines).push.apply(\n      /*istanbul ignore start*/\n      _hunk$lines4\n      /*istanbul ignore end*/\n      ,\n      /*istanbul ignore start*/\n      _toConsumableArray(\n      /*istanbul ignore end*/\n      theirChanges));\n\n      return;\n    }\n  } else if (\n  /*istanbul ignore start*/\n  (0,\n  /*istanbul ignore end*/\n\n  /*istanbul ignore start*/\n  _array\n  /*istanbul ignore end*/\n  .\n  /*istanbul ignore start*/\n  arrayEqual)\n  /*istanbul ignore end*/\n  (myChanges, theirChanges)) {\n    /*istanbul ignore start*/\n    var _hunk$lines5;\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    (_hunk$lines5 =\n    /*istanbul ignore end*/\n    hunk.lines).push.apply(\n    /*istanbul ignore start*/\n    _hunk$lines5\n    /*istanbul ignore end*/\n    ,\n    /*istanbul ignore start*/\n    _toConsumableArray(\n    /*istanbul ignore end*/\n    myChanges));\n\n    return;\n  }\n\n  conflict(hunk, myChanges, theirChanges);\n}\n\nfunction removal(hunk, mine, their, swap) {\n  var myChanges = collectChange(mine),\n      theirChanges = collectContext(their, myChanges);\n\n  if (theirChanges.merged) {\n    /*istanbul ignore start*/\n    var _hunk$lines6;\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n\n    /*istanbul ignore end*/\n\n    /*istanbul ignore start*/\n    (_hunk$lines6 =\n    /*istanbul ignore end*/\n    hunk.lines).push.apply(\n    /*istanbul ignore start*/\n    _hunk$lines6\n    /*istanbul ignore end*/\n    ,\n    /*istanbul ignore start*/\n    _toConsumableArray(\n    /*istanbul ignore end*/\n    theirChanges.merged));\n  } else {\n    conflict(hunk, swap ? theirChanges : myChanges, swap ? myChanges : theirChanges);\n  }\n}\n\nfunction conflict(hunk, mine, their) {\n  hunk.conflict = true;\n  hunk.lines.push({\n    conflict: true,\n    mine: mine,\n    theirs: their\n  });\n}\n\nfunction insertLeading(hunk, insert, their) {\n  while (insert.offset < their.offset && insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n    insert.offset++;\n  }\n}\n\nfunction insertTrailing(hunk, insert) {\n  while (insert.index < insert.lines.length) {\n    var line = insert.lines[insert.index++];\n    hunk.lines.push(line);\n  }\n}\n\nfunction collectChange(state) {\n  var ret = [],\n      operation = state.lines[state.index][0];\n\n  while (state.index < state.lines.length) {\n    var line = state.lines[state.index]; // Group additions that are immediately after subtractions and treat them as one \"atomic\" modify change.\n\n    if (operation === '-' && line[0] === '+') {\n      operation = '+';\n    }\n\n    if (operation === line[0]) {\n      ret.push(line);\n      state.index++;\n    } else {\n      break;\n    }\n  }\n\n  return ret;\n}\n\nfunction collectContext(state, matchChanges) {\n  var changes = [],\n      merged = [],\n      matchIndex = 0,\n      contextChanges = false,\n      conflicted = false;\n\n  while (matchIndex < matchChanges.length && state.index < state.lines.length) {\n    var change = state.lines[state.index],\n        match = matchChanges[matchIndex]; // Once we've hit our add, then we are done\n\n    if (match[0] === '+') {\n      break;\n    }\n\n    contextChanges = contextChanges || change[0] !== ' ';\n    merged.push(match);\n    matchIndex++; // Consume any additions in the other block as a conflict to attempt\n    // to pull in the remaining context after this\n\n    if (change[0] === '+') {\n      conflicted = true;\n\n      while (change[0] === '+') {\n        changes.push(change);\n        change = state.lines[++state.index];\n      }\n    }\n\n    if (match.substr(1) === change.substr(1)) {\n      changes.push(change);\n      state.index++;\n    } else {\n      conflicted = true;\n    }\n  }\n\n  if ((matchChanges[matchIndex] || '')[0] === '+' && contextChanges) {\n    conflicted = true;\n  }\n\n  if (conflicted) {\n    return changes;\n  }\n\n  while (matchIndex < matchChanges.length) {\n    merged.push(matchChanges[matchIndex++]);\n  }\n\n  return {\n    merged: merged,\n    changes: changes\n  };\n}\n\nfunction allRemoves(changes) {\n  return changes.reduce(function (prev, change) {\n    return prev && change[0] === '-';\n  }, true);\n}\n\nfunction skipRemoveSuperset(state, removeChanges, delta) {\n  for (var i = 0; i < delta; i++) {\n    var changeContent = removeChanges[removeChanges.length - delta + i].substr(1);\n\n    if (state.lines[state.index + i] !== ' ' + changeContent) {\n      return false;\n    }\n  }\n\n  state.index += delta;\n  return true;\n}\n\nfunction calcOldNewLineCount(lines) {\n  var oldLines = 0;\n  var newLines = 0;\n  lines.forEach(function (line) {\n    if (typeof line !== 'string') {\n      var myCount = calcOldNewLineCount(line.mine);\n      var theirCount = calcOldNewLineCount(line.theirs);\n\n      if (oldLines !== undefined) {\n        if (myCount.oldLines === theirCount.oldLines) {\n          oldLines += myCount.oldLines;\n        } else {\n          oldLines = undefined;\n        }\n      }\n\n      if (newLines !== undefined) {\n        if (myCount.newLines === theirCount.newLines) {\n          newLines += myCount.newLines;\n        } else {\n          newLines = undefined;\n        }\n      }\n    } else {\n      if (newLines !== undefined && (line[0] === '+' || line[0] === ' ')) {\n        newLines++;\n      }\n\n      if (oldLines !== undefined && (line[0] === '-' || line[0] === ' ')) {\n        oldLines++;\n      }\n    }\n  });\n  return {\n    oldLines: oldLines,\n    newLines: newLines\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertChangesToDMP = convertChangesToDMP;\n\n/*istanbul ignore end*/\n// See: http://code.google.com/p/google-diff-match-patch/wiki/API\nfunction convertChangesToDMP(changes) {\n  var ret = [],\n      change,\n      operation;\n\n  for (var i = 0; i < changes.length; i++) {\n    change = changes[i];\n\n    if (change.added) {\n      operation = 1;\n    } else if (change.removed) {\n      operation = -1;\n    } else {\n      operation = 0;\n    }\n\n    ret.push([operation, change.value]);\n  }\n\n  return ret;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb252ZXJ0L2RtcC5qcyJdLCJuYW1lcyI6WyJjb252ZXJ0Q2hhbmdlc1RvRE1QIiwiY2hhbmdlcyIsInJldCIsImNoYW5nZSIsIm9wZXJhdGlvbiIsImkiLCJsZW5ndGgiLCJhZGRlZCIsInJlbW92ZWQiLCJwdXNoIiwidmFsdWUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBO0FBQ08sU0FBU0EsbUJBQVQsQ0FBNkJDLE9BQTdCLEVBQXNDO0FBQzNDLE1BQUlDLEdBQUcsR0FBRyxFQUFWO0FBQUEsTUFDSUMsTUFESjtBQUFBLE1BRUlDLFNBRko7O0FBR0EsT0FBSyxJQUFJQyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHSixPQUFPLENBQUNLLE1BQTVCLEVBQW9DRCxDQUFDLEVBQXJDLEVBQXlDO0FBQ3ZDRixJQUFBQSxNQUFNLEdBQUdGLE9BQU8sQ0FBQ0ksQ0FBRCxDQUFoQjs7QUFDQSxRQUFJRixNQUFNLENBQUNJLEtBQVgsRUFBa0I7QUFDaEJILE1BQUFBLFNBQVMsR0FBRyxDQUFaO0FBQ0QsS0FGRCxNQUVPLElBQUlELE1BQU0sQ0FBQ0ssT0FBWCxFQUFvQjtBQUN6QkosTUFBQUEsU0FBUyxHQUFHLENBQUMsQ0FBYjtBQUNELEtBRk0sTUFFQTtBQUNMQSxNQUFBQSxTQUFTLEdBQUcsQ0FBWjtBQUNEOztBQUVERixJQUFBQSxHQUFHLENBQUNPLElBQUosQ0FBUyxDQUFDTCxTQUFELEVBQVlELE1BQU0sQ0FBQ08sS0FBbkIsQ0FBVDtBQUNEOztBQUNELFNBQU9SLEdBQVA7QUFDRCIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNlZTogaHR0cDovL2NvZGUuZ29vZ2xlLmNvbS9wL2dvb2dsZS1kaWZmLW1hdGNoLXBhdGNoL3dpa2kvQVBJXG5leHBvcnQgZnVuY3Rpb24gY29udmVydENoYW5nZXNUb0RNUChjaGFuZ2VzKSB7XG4gIGxldCByZXQgPSBbXSxcbiAgICAgIGNoYW5nZSxcbiAgICAgIG9wZXJhdGlvbjtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFuZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgY2hhbmdlID0gY2hhbmdlc1tpXTtcbiAgICBpZiAoY2hhbmdlLmFkZGVkKSB7XG4gICAgICBvcGVyYXRpb24gPSAxO1xuICAgIH0gZWxzZSBpZiAoY2hhbmdlLnJlbW92ZWQpIHtcbiAgICAgIG9wZXJhdGlvbiA9IC0xO1xuICAgIH0gZWxzZSB7XG4gICAgICBvcGVyYXRpb24gPSAwO1xuICAgIH1cblxuICAgIHJldC5wdXNoKFtvcGVyYXRpb24sIGNoYW5nZS52YWx1ZV0pO1xuICB9XG4gIHJldHVybiByZXQ7XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertChangesToXML = convertChangesToXML;\n\n/*istanbul ignore end*/\nfunction convertChangesToXML(changes) {\n  var ret = [];\n\n  for (var i = 0; i < changes.length; i++) {\n    var change = changes[i];\n\n    if (change.added) {\n      ret.push('<ins>');\n    } else if (change.removed) {\n      ret.push('<del>');\n    }\n\n    ret.push(escapeHTML(change.value));\n\n    if (change.added) {\n      ret.push('</ins>');\n    } else if (change.removed) {\n      ret.push('</del>');\n    }\n  }\n\n  return ret.join('');\n}\n\nfunction escapeHTML(s) {\n  var n = s;\n  n = n.replace(/&/g, '&amp;');\n  n = n.replace(/</g, '&lt;');\n  n = n.replace(/>/g, '&gt;');\n  n = n.replace(/\"/g, '&quot;');\n  return n;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb252ZXJ0L3htbC5qcyJdLCJuYW1lcyI6WyJjb252ZXJ0Q2hhbmdlc1RvWE1MIiwiY2hhbmdlcyIsInJldCIsImkiLCJsZW5ndGgiLCJjaGFuZ2UiLCJhZGRlZCIsInB1c2giLCJyZW1vdmVkIiwiZXNjYXBlSFRNTCIsInZhbHVlIiwiam9pbiIsInMiLCJuIiwicmVwbGFjZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQU8sU0FBU0EsbUJBQVQsQ0FBNkJDLE9BQTdCLEVBQXNDO0FBQzNDLE1BQUlDLEdBQUcsR0FBRyxFQUFWOztBQUNBLE9BQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsT0FBTyxDQUFDRyxNQUE1QixFQUFvQ0QsQ0FBQyxFQUFyQyxFQUF5QztBQUN2QyxRQUFJRSxNQUFNLEdBQUdKLE9BQU8sQ0FBQ0UsQ0FBRCxDQUFwQjs7QUFDQSxRQUFJRSxNQUFNLENBQUNDLEtBQVgsRUFBa0I7QUFDaEJKLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLE9BQVQ7QUFDRCxLQUZELE1BRU8sSUFBSUYsTUFBTSxDQUFDRyxPQUFYLEVBQW9CO0FBQ3pCTixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxPQUFUO0FBQ0Q7O0FBRURMLElBQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTRSxVQUFVLENBQUNKLE1BQU0sQ0FBQ0ssS0FBUixDQUFuQjs7QUFFQSxRQUFJTCxNQUFNLENBQUNDLEtBQVgsRUFBa0I7QUFDaEJKLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTLFFBQVQ7QUFDRCxLQUZELE1BRU8sSUFBSUYsTUFBTSxDQUFDRyxPQUFYLEVBQW9CO0FBQ3pCTixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUyxRQUFUO0FBQ0Q7QUFDRjs7QUFDRCxTQUFPTCxHQUFHLENBQUNTLElBQUosQ0FBUyxFQUFULENBQVA7QUFDRDs7QUFFRCxTQUFTRixVQUFULENBQW9CRyxDQUFwQixFQUF1QjtBQUNyQixNQUFJQyxDQUFDLEdBQUdELENBQVI7QUFDQUMsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLE9BQWhCLENBQUo7QUFDQUQsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLE1BQWhCLENBQUo7QUFDQUQsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLE1BQWhCLENBQUo7QUFDQUQsRUFBQUEsQ0FBQyxHQUFHQSxDQUFDLENBQUNDLE9BQUYsQ0FBVSxJQUFWLEVBQWdCLFFBQWhCLENBQUo7QUFFQSxTQUFPRCxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY29udmVydENoYW5nZXNUb1hNTChjaGFuZ2VzKSB7XG4gIGxldCByZXQgPSBbXTtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGFuZ2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgbGV0IGNoYW5nZSA9IGNoYW5nZXNbaV07XG4gICAgaWYgKGNoYW5nZS5hZGRlZCkge1xuICAgICAgcmV0LnB1c2goJzxpbnM+Jyk7XG4gICAgfSBlbHNlIGlmIChjaGFuZ2UucmVtb3ZlZCkge1xuICAgICAgcmV0LnB1c2goJzxkZWw+Jyk7XG4gICAgfVxuXG4gICAgcmV0LnB1c2goZXNjYXBlSFRNTChjaGFuZ2UudmFsdWUpKTtcblxuICAgIGlmIChjaGFuZ2UuYWRkZWQpIHtcbiAgICAgIHJldC5wdXNoKCc8L2lucz4nKTtcbiAgICB9IGVsc2UgaWYgKGNoYW5nZS5yZW1vdmVkKSB7XG4gICAgICByZXQucHVzaCgnPC9kZWw+Jyk7XG4gICAgfVxuICB9XG4gIHJldHVybiByZXQuam9pbignJyk7XG59XG5cbmZ1bmN0aW9uIGVzY2FwZUhUTUwocykge1xuICBsZXQgbiA9IHM7XG4gIG4gPSBuLnJlcGxhY2UoLyYvZywgJyZhbXA7Jyk7XG4gIG4gPSBuLnJlcGxhY2UoLzwvZywgJyZsdDsnKTtcbiAgbiA9IG4ucmVwbGFjZSgvPi9nLCAnJmd0OycpO1xuICBuID0gbi5yZXBsYWNlKC9cIi9nLCAnJnF1b3Q7Jyk7XG5cbiAgcmV0dXJuIG47XG59XG4iXX0=\n","/*istanbul ignore start*/\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Diff\", {\n  enumerable: true,\n  get: function get() {\n    return _base[\"default\"];\n  }\n});\nObject.defineProperty(exports, \"diffChars\", {\n  enumerable: true,\n  get: function get() {\n    return _character.diffChars;\n  }\n});\nObject.defineProperty(exports, \"diffWords\", {\n  enumerable: true,\n  get: function get() {\n    return _word.diffWords;\n  }\n});\nObject.defineProperty(exports, \"diffWordsWithSpace\", {\n  enumerable: true,\n  get: function get() {\n    return _word.diffWordsWithSpace;\n  }\n});\nObject.defineProperty(exports, \"diffLines\", {\n  enumerable: true,\n  get: function get() {\n    return _line.diffLines;\n  }\n});\nObject.defineProperty(exports, \"diffTrimmedLines\", {\n  enumerable: true,\n  get: function get() {\n    return _line.diffTrimmedLines;\n  }\n});\nObject.defineProperty(exports, \"diffSentences\", {\n  enumerable: true,\n  get: function get() {\n    return _sentence.diffSentences;\n  }\n});\nObject.defineProperty(exports, \"diffCss\", {\n  enumerable: true,\n  get: function get() {\n    return _css.diffCss;\n  }\n});\nObject.defineProperty(exports, \"diffJson\", {\n  enumerable: true,\n  get: function get() {\n    return _json.diffJson;\n  }\n});\nObject.defineProperty(exports, \"canonicalize\", {\n  enumerable: true,\n  get: function get() {\n    return _json.canonicalize;\n  }\n});\nObject.defineProperty(exports, \"diffArrays\", {\n  enumerable: true,\n  get: function get() {\n    return _array.diffArrays;\n  }\n});\nObject.defineProperty(exports, \"applyPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _apply.applyPatch;\n  }\n});\nObject.defineProperty(exports, \"applyPatches\", {\n  enumerable: true,\n  get: function get() {\n    return _apply.applyPatches;\n  }\n});\nObject.defineProperty(exports, \"parsePatch\", {\n  enumerable: true,\n  get: function get() {\n    return _parse.parsePatch;\n  }\n});\nObject.defineProperty(exports, \"merge\", {\n  enumerable: true,\n  get: function get() {\n    return _merge.merge;\n  }\n});\nObject.defineProperty(exports, \"structuredPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.structuredPatch;\n  }\n});\nObject.defineProperty(exports, \"createTwoFilesPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.createTwoFilesPatch;\n  }\n});\nObject.defineProperty(exports, \"createPatch\", {\n  enumerable: true,\n  get: function get() {\n    return _create.createPatch;\n  }\n});\nObject.defineProperty(exports, \"convertChangesToDMP\", {\n  enumerable: true,\n  get: function get() {\n    return _dmp.convertChangesToDMP;\n  }\n});\nObject.defineProperty(exports, \"convertChangesToXML\", {\n  enumerable: true,\n  get: function get() {\n    return _xml.convertChangesToXML;\n  }\n});\n\n/*istanbul ignore end*/\nvar\n/*istanbul ignore start*/\n_base = _interopRequireDefault(require(\"./diff/base\"))\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_character = require(\"./diff/character\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_word = require(\"./diff/word\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_line = require(\"./diff/line\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_sentence = require(\"./diff/sentence\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_css = require(\"./diff/css\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_json = require(\"./diff/json\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_array = require(\"./diff/array\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_apply = require(\"./patch/apply\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_parse = require(\"./patch/parse\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_merge = require(\"./patch/merge\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_create = require(\"./patch/create\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_dmp = require(\"./convert/dmp\")\n/*istanbul ignore end*/\n;\n\nvar\n/*istanbul ignore start*/\n_xml = require(\"./convert/xml\")\n/*istanbul ignore end*/\n;\n\n/*istanbul ignore start*/ function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n/*istanbul ignore end*/\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWdCQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUVBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBRUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFDQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUE7O0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTs7QUFFQTtBQUFBO0FBQUE7QUFBQTtBQUFBOztBQUNBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTZWUgTElDRU5TRSBmaWxlIGZvciB0ZXJtcyBvZiB1c2UgKi9cblxuLypcbiAqIFRleHQgZGlmZiBpbXBsZW1lbnRhdGlvbi5cbiAqXG4gKiBUaGlzIGxpYnJhcnkgc3VwcG9ydHMgdGhlIGZvbGxvd2luZyBBUElTOlxuICogSnNEaWZmLmRpZmZDaGFyczogQ2hhcmFjdGVyIGJ5IGNoYXJhY3RlciBkaWZmXG4gKiBKc0RpZmYuZGlmZldvcmRzOiBXb3JkIChhcyBkZWZpbmVkIGJ5IFxcYiByZWdleCkgZGlmZiB3aGljaCBpZ25vcmVzIHdoaXRlc3BhY2VcbiAqIEpzRGlmZi5kaWZmTGluZXM6IExpbmUgYmFzZWQgZGlmZlxuICpcbiAqIEpzRGlmZi5kaWZmQ3NzOiBEaWZmIHRhcmdldGVkIGF0IENTUyBjb250ZW50XG4gKlxuICogVGhlc2UgbWV0aG9kcyBhcmUgYmFzZWQgb24gdGhlIGltcGxlbWVudGF0aW9uIHByb3Bvc2VkIGluXG4gKiBcIkFuIE8oTkQpIERpZmZlcmVuY2UgQWxnb3JpdGhtIGFuZCBpdHMgVmFyaWF0aW9uc1wiIChNeWVycywgMTk4NikuXG4gKiBodHRwOi8vY2l0ZXNlZXJ4LmlzdC5wc3UuZWR1L3ZpZXdkb2Mvc3VtbWFyeT9kb2k9MTAuMS4xLjQuNjkyN1xuICovXG5pbXBvcnQgRGlmZiBmcm9tICcuL2RpZmYvYmFzZSc7XG5pbXBvcnQge2RpZmZDaGFyc30gZnJvbSAnLi9kaWZmL2NoYXJhY3Rlcic7XG5pbXBvcnQge2RpZmZXb3JkcywgZGlmZldvcmRzV2l0aFNwYWNlfSBmcm9tICcuL2RpZmYvd29yZCc7XG5pbXBvcnQge2RpZmZMaW5lcywgZGlmZlRyaW1tZWRMaW5lc30gZnJvbSAnLi9kaWZmL2xpbmUnO1xuaW1wb3J0IHtkaWZmU2VudGVuY2VzfSBmcm9tICcuL2RpZmYvc2VudGVuY2UnO1xuXG5pbXBvcnQge2RpZmZDc3N9IGZyb20gJy4vZGlmZi9jc3MnO1xuaW1wb3J0IHtkaWZmSnNvbiwgY2Fub25pY2FsaXplfSBmcm9tICcuL2RpZmYvanNvbic7XG5cbmltcG9ydCB7ZGlmZkFycmF5c30gZnJvbSAnLi9kaWZmL2FycmF5JztcblxuaW1wb3J0IHthcHBseVBhdGNoLCBhcHBseVBhdGNoZXN9IGZyb20gJy4vcGF0Y2gvYXBwbHknO1xuaW1wb3J0IHtwYXJzZVBhdGNofSBmcm9tICcuL3BhdGNoL3BhcnNlJztcbmltcG9ydCB7bWVyZ2V9IGZyb20gJy4vcGF0Y2gvbWVyZ2UnO1xuaW1wb3J0IHtzdHJ1Y3R1cmVkUGF0Y2gsIGNyZWF0ZVR3b0ZpbGVzUGF0Y2gsIGNyZWF0ZVBhdGNofSBmcm9tICcuL3BhdGNoL2NyZWF0ZSc7XG5cbmltcG9ydCB7Y29udmVydENoYW5nZXNUb0RNUH0gZnJvbSAnLi9jb252ZXJ0L2RtcCc7XG5pbXBvcnQge2NvbnZlcnRDaGFuZ2VzVG9YTUx9IGZyb20gJy4vY29udmVydC94bWwnO1xuXG5leHBvcnQge1xuICBEaWZmLFxuXG4gIGRpZmZDaGFycyxcbiAgZGlmZldvcmRzLFxuICBkaWZmV29yZHNXaXRoU3BhY2UsXG4gIGRpZmZMaW5lcyxcbiAgZGlmZlRyaW1tZWRMaW5lcyxcbiAgZGlmZlNlbnRlbmNlcyxcblxuICBkaWZmQ3NzLFxuICBkaWZmSnNvbixcblxuICBkaWZmQXJyYXlzLFxuXG4gIHN0cnVjdHVyZWRQYXRjaCxcbiAgY3JlYXRlVHdvRmlsZXNQYXRjaCxcbiAgY3JlYXRlUGF0Y2gsXG4gIGFwcGx5UGF0Y2gsXG4gIGFwcGx5UGF0Y2hlcyxcbiAgcGFyc2VQYXRjaCxcbiAgbWVyZ2UsXG4gIGNvbnZlcnRDaGFuZ2VzVG9ETVAsXG4gIGNvbnZlcnRDaGFuZ2VzVG9YTUwsXG4gIGNhbm9uaWNhbGl6ZVxufTtcbiJdfQ==\n","@import '~diff2html/bundles/css/diff2html.min.css';\n\n:host {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    min-height: 100%;\n}\n\n.code-editors {\n    display: flex;\n    flex-flow: row nowrap;\n    display: flex;\n}\n\n.diff__viewer {\n\n    // \"Renamed\" badge\n    .d2h-moved-tag {\n        display: none;\n    }\n\n    max-width: 75%;\n    margin-left: 12rem;\n\n    .d2h-file-header,\n    .d2h-file-name-wrapper {\n        position: sticky;\n        top: 2rem;\n        z-index: 1000 !important;\n    }\n\n    &--single {\n        .d2h-code-line-prefix {\n            display: none;\n        }\n\n        .d2h-ins {\n            background-color: unset;\n            border-color: unset;\n        }\n    }\n}\n","import { LimelMenuCustomEvent, MenuItem } from '@limetech/lime-elements';\nimport { Component, Prop, State, h } from '@stencil/core';\nimport { getFullConfig } from './getDelta';\nimport {\n    html as diff2html,\n    Diff2HtmlConfig,\n} from 'diff2html/lib-esm/diff2html.js';\nimport { createTwoFilesPatch } from 'diff/lib';\n\n@Component({\n    tag: 'limel-code-diff',\n    shadow: true,\n    styleUrl: 'code-diff.scss',\n})\nexport class CodeDiff {\n    @Prop()\n    public path: string;\n\n    @Prop()\n    public reformatJson: boolean = false;\n\n    @Prop()\n    public single: boolean = false;\n\n    @Prop()\n    public renderOptions: Diff2HtmlConfig = {};\n\n    protected defaultRenderOptions: Diff2HtmlConfig = {\n        // outputFormat: 'side-by-side',\n        outputFormat: 'line-by-line',\n        drawFileList: false,\n    };\n\n    private versions;\n\n    @State()\n    private items;\n\n    private selectedVersion: number = 0;\n\n    public componentWillLoad() {\n        this.versions = JSON.parse(\n            localStorage.getItem('configMinorVersions')\n        ).filter((config) => this.matchConfigSelector(config.configSelector));\n\n        this.items = this.versions\n            .map((_, id: number) => {\n                return {\n                    text: 'version ' + (id + 1).toString(),\n                    selected: this.isSelected(id),\n                };\n            })\n            .filter((_, id: number) => {\n                return id !== this.versions.length - 1;\n            });\n    }\n\n    public render() {\n        return [\n            <limel-menu items={this.items} onSelect={this.handleSelect}>\n                <limel-button label=\"versions\" slot=\"trigger\"></limel-button>\n            </limel-menu>,\n            <div class=\"code-editors\">\n                <div\n                    class={`diff__viewer ${\n                        this.single ? 'diff__viewer--single' : ''\n                    }`}\n                    innerHTML={this.renderComparison()}\n                >\n                    {' '}\n                </div>\n            </div>,\n        ];\n    }\n\n    private getLatestVersion() {\n        return this.getVersion(this.versions.length - 1);\n    }\n\n    private getVersion(version: number) {\n        return JSON.stringify(\n            getFullConfig(this.versions, version),\n            null,\n            '    '\n        );\n    }\n\n    private handleSelect = (event: LimelMenuCustomEvent<MenuItem>) => {\n        event.stopPropagation();\n\n        const version = Number(event.detail.text.replace('version ', '')) - 1;\n\n        this.selectedVersion = version;\n\n        this.updateItems();\n    };\n\n    private updateItems() {\n        this.items = this.items.map((item: MenuItem, id: number) => {\n            const itemCopy = { ...item };\n            itemCopy.selected = this.isSelected(id);\n\n            return itemCopy;\n        });\n    }\n\n    private matchConfigSelector(configPath): boolean {\n        return this.path.split('/')[0] === configPath.split('/')[0];\n    }\n\n    private isSelected(id): boolean {\n        return id === this.selectedVersion;\n    }\n\n    protected getComparisonHtml(\n        versionBefore,\n        versionAfter,\n        jsonBefore,\n        jsonAfter\n    ) {\n        const titleBefore = `Version ${versionBefore}`;\n        const titleAfter = `Version ${versionAfter} [Latest]`;\n        const defaultIndent = 4;\n\n        let contentBefore = jsonBefore;\n        let contentAfter = jsonAfter;\n\n        if (this.reformatJson === true) {\n            try {\n                // Re-stringify json to remove indentation changes\n                contentBefore = JSON.stringify(\n                    JSON.parse(jsonBefore),\n                    null,\n                    defaultIndent\n                );\n                contentAfter = JSON.stringify(\n                    JSON.parse(jsonAfter),\n                    null,\n                    defaultIndent\n                );\n            } catch (e) {\n                // Formatting failed, leave content as-is\n            }\n        }\n\n        const renderOptions = {\n            ...this.defaultRenderOptions,\n            ...this.renderOptions,\n        };\n        const diffArray = createTwoFilesPatch(\n            titleBefore,\n            titleAfter,\n            contentBefore,\n            contentAfter\n        );\n\n        return diff2html(diffArray, renderOptions);\n    }\n\n    private renderComparison = () => {\n        return this.getComparisonHtml(\n            this.selectedVersion + 1,\n            this.versions.length,\n            this.getVersion(this.selectedVersion),\n            this.getLatestVersion()\n        );\n    };\n}\n"],"mappings":"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"}