{"version":3,"names":["readonlyBooleanCss","ReadonlyBooleanExample","this","setChecked","event","stopPropagation","value","detail","render","h","checked","readonly","label","trueIcon","name","color","falseIcon","trueText","falseText","onChange"],"sources":["./src/components/readonly-boolean/examples/readonly-boolean.scss?tag=limel-example-readonly-boolean&encapsulation=shadow","./src/components/readonly-boolean/examples/readonly-boolean.tsx"],"sourcesContent":[":host(limel-example-readonly-boolean) {\n    display: grid;\n    gap: 1rem;\n}\n\nhr {\n    all: unset;\n    border-top: 1px solid rgb(var(--contrast-400));\n}\n","import { Component, State, h } from '@stencil/core';\n/**\n * Basic example\n * The `readonly` mode of a boolean fields do not always\n * clearly communicate the meaning of the data to the end users. Similar problems\n * have existed in user interfaces forever, and it not solely limited to\n * readonly-ness of a boolean field. If you are interested in reading more\n * about these common design problems, you can check out\n * [**State-Switch Controls:** The Infamous Case of the \"Mute\" Button](https://www.nngroup.com/articles/state-switch-buttons/)\n *\n * In short, the reason end-users become confused is that we cannot keep the same label\n * for both `true` and `false` states, and only rely on changing the color or the\n * shapes and visual motifs, to communicate what the field means.\n *\n * Instead, we need to use different labels to describe the state,\n * and also get some additional help from icons and colors\n * to clarify further if needed.\n */\n@Component({\n    tag: 'limel-example-readonly-boolean',\n    shadow: true,\n    styleUrl: 'readonly-boolean.scss',\n})\nexport class ReadonlyBooleanExample {\n    @State()\n    private value: boolean = false;\n\n    public render() {\n        return [\n            <limel-checkbox\n                checked={this.value}\n                readonly={true}\n                label=\"Debt\"\n            />,\n            <limel-switch value={this.value} readonly={true} label=\"Debt\" />,\n            <p>Default</p>,\n            <limel-readonly-boolean label=\"Debt\" value={this.value} />,\n            <hr></hr>,\n            <p>Customized</p>,\n            <limel-readonly-boolean\n                label=\"Debt\"\n                value={this.value}\n                trueIcon={{\n                    name: 'error',\n                    color: 'rgb(var(--color-red-default))',\n                }}\n                falseIcon={{\n                    name: 'ok',\n                    color: 'rgb(var(--color-green-default))',\n                }}\n                trueText=\"Has debts\"\n                falseText=\"Does not have debts\"\n            />,\n            <limel-readonly-boolean\n                label=\"Newsletter\"\n                value={this.value}\n                trueIcon={{\n                    name: 'news',\n                }}\n                falseIcon={{\n                    name: 'cancel_subscription',\n                    color: 'rgb(var(--color-orange-default))',\n                }}\n                trueText=\"Subscribed to receive newsletters\"\n                falseText=\"Unsubscribed from newsletters\"\n            />,\n            <limel-readonly-boolean\n                label=\"Quit\"\n                value={this.value}\n                trueIcon={{\n                    name: 'inactive_state',\n                    color: 'rgb(var(--color-gray-default))',\n                }}\n                falseIcon={{\n                    name: 'in_progress',\n                    color: 'rgb(var(--color-sky-default))',\n                }}\n                trueText=\"Has quit their job\"\n                falseText=\"Still works here\"\n            />,\n            <limel-readonly-boolean\n                label=\"Mute\"\n                value={this.value}\n                trueIcon={{\n                    name: 'no_microphone',\n                    color: 'rgb(var(--color-gray-light))',\n                }}\n                falseIcon={{\n                    name: 'microphone',\n                }}\n                trueText=\"Is muted\"\n                falseText=\"Microphone is activeâ€¦\"\n            />,\n            <limel-example-controls>\n                <limel-checkbox\n                    checked={this.value}\n                    label=\"Value\"\n                    onChange={this.setChecked}\n                />\n            </limel-example-controls>,\n            <limel-example-value label=\"Current value\" value={this.value} />,\n        ];\n    }\n\n    private setChecked = (event: CustomEvent<boolean>) => {\n        event.stopPropagation();\n        this.value = event.detail;\n    };\n}\n"],"mappings":"+CAAA,MAAMA,EAAqB,0H,MCuBdC,EAAsB,M,yBAiFvBC,KAAAC,WAAcC,IAClBA,EAAMC,kBACNH,KAAKI,MAAQF,EAAMG,MAAM,E,WAjFJ,K,CAElBC,SACH,MAAO,CACHC,EAAA,kBACIC,QAASR,KAAKI,MACdK,SAAU,KACVC,MAAM,SAEVH,EAAA,gBAAcH,MAAOJ,KAAKI,MAAOK,SAAU,KAAMC,MAAM,SACvDH,EAAA,oBACAA,EAAA,0BAAwBG,MAAM,OAAON,MAAOJ,KAAKI,QACjDG,EAAA,WACAA,EAAA,uBACAA,EAAA,0BACIG,MAAM,OACNN,MAAOJ,KAAKI,MACZO,SAAU,CACNC,KAAM,QACNC,MAAO,iCAEXC,UAAW,CACPF,KAAM,KACNC,MAAO,mCAEXE,SAAS,YACTC,UAAU,wBAEdT,EAAA,0BACIG,MAAM,aACNN,MAAOJ,KAAKI,MACZO,SAAU,CACNC,KAAM,QAEVE,UAAW,CACPF,KAAM,sBACNC,MAAO,oCAEXE,SAAS,oCACTC,UAAU,kCAEdT,EAAA,0BACIG,MAAM,OACNN,MAAOJ,KAAKI,MACZO,SAAU,CACNC,KAAM,iBACNC,MAAO,kCAEXC,UAAW,CACPF,KAAM,cACNC,MAAO,iCAEXE,SAAS,qBACTC,UAAU,qBAEdT,EAAA,0BACIG,MAAM,OACNN,MAAOJ,KAAKI,MACZO,SAAU,CACNC,KAAM,gBACNC,MAAO,gCAEXC,UAAW,CACPF,KAAM,cAEVG,SAAS,WACTC,UAAU,0BAEdT,EAAA,8BACIA,EAAA,kBACIC,QAASR,KAAKI,MACdM,MAAM,QACNO,SAAUjB,KAAKC,cAGvBM,EAAA,uBAAqBG,MAAM,gBAAgBN,MAAOJ,KAAKI,Q"}