{"version":3,"names":["dist","debounce","fn","wait","arguments","length","undefined","options","lastCallAt","deferred","timer","pendingArgs","debounced","currentWait","getWait","currentTime","Date","getTime","isCold","_len","args","Array","_key","leading","accumulate","Promise","resolve","call","this","then","result","apply","concat","clearTimeout","defer","push","setTimeout","flush","bind","argsIndex","promise","results","thisDeferred","reject","createImperativePromise","promiseArg","wrappedPromise","_resolve","_reject","val","error","value","reason","cancel","onlyResolvesLast","asyncFunction","cancelPrevious","wrappedFunction","_i","initialPromise","_a","__assign","Object","assign","t","s","i","n","p","prototype","hasOwnProperty","DefaultOptions","key","_args","DebounceCache","config","debounceSingleton","debounceCache","_createDebouncedFunction","debouncedFunc","DebouncePromise","func","getDebouncedFunction","AwesomeDebouncePromise","finalOptions","AwesomeDebouncePromiseWrapper","debouncedFn","pickerCss","SEARCH_DEBOUNCE","CHIP_SET_TAG_NAME","Picker","constructor","hostRef","chipSetEditMode","getValueId","item","id","createChips","multiple","listItems","map","createChip","listItem","name","getIconName","icon","color","getIconFillColor","iconColor","valueId","text","removable","handleTextInput","handleInputKeyDown","handleDropdownKeyDown","handleInputFieldFocus","handleChange","handleInteract","handleListChange","handleActionListChange","handleStopEditAndBlur","createDebouncedSearcher","handleCloseMenu","onListKeyDown","portalId","createRandomString","componentWillLoad","chips","componentDidLoad","searcher","chipSet","host","shadowRoot","querySelector","async","getEditMode","render","props","maxItems","h","type","inputType","label","helperText","leadingIcon","disabled","invalid","delimiter","renderDelimiter","readonly","required","searchLabel","onInput","onKeyDown","onChange","onInteract","onStartEdit","onStopEdit","emptyInputOnBlur","clearAllButton","renderDropdown","onChangeValue","newValue","debouncedSearch","dropDownContent","getDropdownContent","content","shouldShowDropDownContent","actionContent","getActionContent","actionPosition","renderPortal","actionCount","_b","actions","class","actionScrollBehavior","badgeIcons","items","removeUnusedPropertiesOnAction","action","isFull","loading","renderSpinner","renderEmptyMessage","renderListResult","style","width","display","padding","limeBranded","emptyResultMessage","margin","event","keyFound","TAB","ESCAPE","ENTER","includes","keyCodeFound","TAB_KEY_CODE","ESCAPE_KEY_CODE","ENTER_KEY_CODE","keyCode","setFocus","dropdownZIndex","getComputedStyle","getPropertyValue","visible","containerId","inheritParentWidth","containerStyle","open","allowClicksElement","onDismiss","element","activeElement","document","portalElement","isDescendant","clearInputField","stopPropagation","query","detail","textValue","searchFn","handleSearchResult","change","emit","chip","find","interact","isForwardTab","altKey","metaKey","shiftKey","isUp","ARROW_UP","ARROW_UP_KEY_CODE","isDown","ARROW_DOWN","ARROW_DOWN_KEY_CODE","list","preventDefault","listElement","focus","isEscape","values","filter","emptyInput"],"sources":["./node_modules/debounce-promise/dist/index.js","./node_modules/awesome-imperative-promise/dist/index.es.js","./node_modules/awesome-only-resolves-last-promise/dist/index.es.js","./node_modules/awesome-debounce-promise/dist/index.es.js","./src/components/picker/picker.scss?tag=limel-picker&encapsulation=shadow","./src/components/picker/picker.tsx"],"sourcesContent":["'use strict';\n\n/* global setTimeout, clearTimeout */\n\nmodule.exports = function debounce(fn) {\n  var wait = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var lastCallAt = void 0;\n  var deferred = void 0;\n  var timer = void 0;\n  var pendingArgs = [];\n  return function debounced() {\n    var currentWait = getWait(wait);\n    var currentTime = new Date().getTime();\n\n    var isCold = !lastCallAt || currentTime - lastCallAt > currentWait;\n\n    lastCallAt = currentTime;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (isCold && options.leading) {\n      return options.accumulate ? Promise.resolve(fn.call(this, [args])).then(function (result) {\n        return result[0];\n      }) : Promise.resolve(fn.call.apply(fn, [this].concat(args)));\n    }\n\n    if (deferred) {\n      clearTimeout(timer);\n    } else {\n      deferred = defer();\n    }\n\n    pendingArgs.push(args);\n    timer = setTimeout(flush.bind(this), currentWait);\n\n    if (options.accumulate) {\n      var argsIndex = pendingArgs.length - 1;\n      return deferred.promise.then(function (results) {\n        return results[argsIndex];\n      });\n    }\n\n    return deferred.promise;\n  };\n\n  function flush() {\n    var thisDeferred = deferred;\n    clearTimeout(timer);\n\n    Promise.resolve(options.accumulate ? fn.call(this, pendingArgs) : fn.apply(this, pendingArgs[pendingArgs.length - 1])).then(thisDeferred.resolve, thisDeferred.reject);\n\n    pendingArgs = [];\n    deferred = null;\n  }\n};\n\nfunction getWait(wait) {\n  return typeof wait === 'function' ? wait() : wait;\n}\n\nfunction defer() {\n  var deferred = {};\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\n//# sourceMappingURL=index.js.map","function createImperativePromise(promiseArg) {\r\n    var resolve = null;\r\n    var reject = null;\r\n    var wrappedPromise = new Promise(function (_resolve, _reject) {\r\n        resolve = _resolve;\r\n        reject = _reject;\r\n    });\r\n    promiseArg && promiseArg.then(function (val) {\r\n        resolve && resolve(val);\r\n    }, function (error) {\r\n        reject && reject(error);\r\n    });\r\n    return {\r\n        promise: wrappedPromise,\r\n        resolve: function (value) {\r\n            resolve && resolve(value);\r\n        },\r\n        reject: function (reason) {\r\n            reject && reject(reason);\r\n        },\r\n        cancel: function () {\r\n            resolve = null;\r\n            reject = null;\r\n        }\r\n    };\r\n}\n\nexport { createImperativePromise };\n//# sourceMappingURL=index.es.js.map\n","import { createImperativePromise } from 'awesome-imperative-promise';\n\n// see https://stackoverflow.com/a/54825370/82609\r\nfunction onlyResolvesLast(asyncFunction) {\r\n    var cancelPrevious = null;\r\n    var wrappedFunction = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        cancelPrevious && cancelPrevious();\r\n        var initialPromise = asyncFunction.apply(void 0, args);\r\n        var _a = createImperativePromise(initialPromise), promise = _a.promise, cancel = _a.cancel;\r\n        cancelPrevious = cancel;\r\n        return promise;\r\n    };\r\n    return wrappedFunction; // TODO fix TS\r\n}\n\nexport { onlyResolvesLast };\n//# sourceMappingURL=index.es.js.map\n","import DebouncePromise from 'debounce-promise';\nimport { onlyResolvesLast } from 'awesome-only-resolves-last-promise';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar DefaultOptions = {\r\n    // One distinct debounced function is created per key and added to an internal cache\r\n    // By default, the key is null, which means that all the calls\r\n    // will share the same debounced function\r\n    key: function () {\r\n        var _args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            _args[_i] = arguments[_i];\r\n        }\r\n        return null;\r\n    },\r\n    // By default, a debounced function will only resolve\r\n    // the last promise it returned\r\n    // Former calls will stay unresolved, so that you don't have\r\n    // to handle concurrency issues in your code\r\n    // Setting this to false means all returned promises will resolve to the last result\r\n    onlyResolvesLast: true,\r\n};\r\n// We create a debouncing function cache, because when wrapping the original function,\r\n// we may actually want to route the function call to different debounced functions depending function paameters\r\nvar DebounceCache = /** @class */ (function () {\r\n    function DebounceCache(config) {\r\n        this.config = config;\r\n        this.debounceSingleton = null;\r\n        this.debounceCache = {}; // when key feature is used\r\n    }\r\n    DebounceCache.prototype._createDebouncedFunction = function () {\r\n        var debouncedFunc = DebouncePromise(this.config.func, this.config.wait, this.config.options); // TODO TS\r\n        if (this.config.options.onlyResolvesLast) {\r\n            debouncedFunc = onlyResolvesLast(debouncedFunc);\r\n        }\r\n        return {\r\n            func: debouncedFunc,\r\n        };\r\n    };\r\n    DebounceCache.prototype.getDebouncedFunction = function (args) {\r\n        var _a;\r\n        var key = (_a = this.config.options).key.apply(_a, args);\r\n        if (key === null || typeof key === 'undefined') {\r\n            if (!this.debounceSingleton) {\r\n                this.debounceSingleton = this._createDebouncedFunction();\r\n            }\r\n            return this.debounceSingleton;\r\n        }\r\n        else {\r\n            if (!this.debounceCache[key]) {\r\n                this.debounceCache[key] = this._createDebouncedFunction();\r\n            }\r\n            return this.debounceCache[key];\r\n        }\r\n    };\r\n    return DebounceCache;\r\n}());\r\nfunction AwesomeDebouncePromise(func, wait, options) {\r\n    var finalOptions = __assign({}, DefaultOptions, options);\r\n    var debounceCache = new DebounceCache({\r\n        func: func,\r\n        wait: wait,\r\n        options: finalOptions,\r\n    });\r\n    var AwesomeDebouncePromiseWrapper = (function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var debouncedFn = debounceCache.getDebouncedFunction(args).func;\r\n        return debouncedFn.apply(void 0, args);\r\n    }); // TODO fix TS\r\n    /*\r\n    AwesomeDebouncePromiseWrapper.cancel = (key?: string) => {\r\n  \n    };\r\n    */\r\n    return AwesomeDebouncePromiseWrapper;\r\n}\n\nexport default AwesomeDebouncePromise;\n//# sourceMappingURL=index.es.js.map\n","// Note! The `--dropdown-z-index` property is used from `picker.tsx`.\n/**\n  * @prop --dropdown-z-index: z-index of the dropdown menu.\n  */\n\n:host {\n    position: relative;\n    display: block;\n}\n\n:host([hidden]) {\n    display: none;\n}\n","import { Action } from '../collapsible-section/action';\nimport { ActionPosition, ActionScrollBehavior } from '../picker/actions.types';\nimport { Chip } from '../chip-set/chip.types';\nimport { ListItem } from '../list/list-item.types';\nimport { Searcher } from '../picker/searcher.types';\nimport {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    h,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport AwesomeDebouncePromise from 'awesome-debounce-promise';\nimport { isDescendant } from '../../util/dom';\nimport {\n    ARROW_DOWN,\n    ARROW_DOWN_KEY_CODE,\n    ARROW_UP,\n    ARROW_UP_KEY_CODE,\n    ENTER,\n    ENTER_KEY_CODE,\n    ESCAPE,\n    ESCAPE_KEY_CODE,\n    TAB,\n    TAB_KEY_CODE,\n} from '../../util/keycodes';\nimport { createRandomString } from '../../util/random-string';\nimport {\n    LimelChipSetCustomEvent,\n    LimelListCustomEvent,\n} from '../../components';\nimport { getIconFillColor, getIconName } from '../icon/get-icon-props';\nimport { PickerValue } from './value.types';\n\nconst SEARCH_DEBOUNCE = 500;\nconst CHIP_SET_TAG_NAME = 'limel-chip-set';\n\n/**\n * @exampleComponent limel-example-picker-single\n * @exampleComponent limel-example-picker-multiple\n * @exampleComponent limel-example-picker-icons\n * @exampleComponent limel-example-picker-value-as-object\n * @exampleComponent limel-example-picker-empty-suggestions\n * @exampleComponent limel-example-picker-leading-icon\n * @exampleComponent limel-example-picker-static-actions\n * @exampleComponent limel-example-picker-composite\n */\n@Component({\n    tag: 'limel-picker',\n    shadow: true,\n    styleUrl: 'picker.scss',\n})\nexport class Picker {\n    /**\n     * True if the picker should be disabled\n     */\n    @Prop()\n    public disabled: boolean = false;\n\n    /**\n     * Set to `true` to disable adding and removing items,\n     * but allow interaction with existing items.\n     */\n    @Prop({ reflect: true })\n    public readonly: boolean = false;\n\n    /**\n     * Text to display for the input field of the picker\n     */\n    @Prop()\n    public label: string;\n\n    /**\n     * Search label to display in the input field when searching\n     */\n    @Prop()\n    public searchLabel: string;\n\n    /**\n     * Optional helper text to display below the input field when it has focus\n     */\n    @Prop({ reflect: true })\n    public helperText: string;\n\n    /**\n     * Leading icon to show to the far left in the text field\n     */\n    @Prop()\n    public leadingIcon: string;\n\n    /**\n     * A message to display when the search returned an empty result\n     */\n    @Prop()\n    public emptyResultMessage: string;\n\n    /**\n     * True if the control requires a value\n     */\n    @Prop()\n    public required: boolean = false;\n\n    /**\n     * Set to `true` to indicate that the current value of the input field is\n     * invalid.\n     */\n    @Prop({ reflect: true })\n    public invalid = false;\n\n    /**\n     * Currently selected value or values. Where the value can be an object.\n     */\n    @Prop()\n    public value: ListItem<PickerValue> | Array<ListItem<PickerValue>>;\n\n    /**\n     * A search function that takes a search-string as an argument,\n     * and returns a promise that will eventually be resolved with\n     * an array of `ListItem`:s.\n     *\n     * See the docs for the type `Searcher` for type information on\n     * the searcher function itself.\n     */\n    @Prop()\n    public searcher: Searcher;\n\n    /**\n     * True if multiple values are allowed\n     */\n    @Prop()\n    public multiple: boolean = false;\n\n    /**\n     * Sets delimiters between chips. Works only when `multiple` is `true`.\n     */\n    @Prop({ reflect: true })\n    public delimiter: string = null;\n\n    /**\n     * Static actions that can be clicked by the user.\n     */\n    @Prop()\n    public actions: Array<ListItem<Action>> = [];\n\n    /**\n     * Position of the custom static actions in the picker's results dropdown.\n     * Can be set to `'top'` or `'bottom'`.\n     */\n    @Prop()\n    public actionPosition: ActionPosition = 'bottom';\n\n    /**\n     * Scroll behavior of the custom static actions, when user scrolls\n     * in the picker's results dropdown. Can be set to `'scroll'` which means\n     * the action items will scroll together with the list, or `'sticky'` which\n     * retains their position at the top or bottom of the drop down while\n     * scrolling.\n     */\n    @Prop()\n    public actionScrollBehavior: ActionScrollBehavior = 'sticky';\n\n    /**\n     * Whether badge icons should be used in the result list or not\n     */\n    @Prop({ reflect: true })\n    public badgeIcons: boolean = false;\n\n    /**\n     * Fired when a new value has been selected from the picker\n     */\n    @Event()\n    private change: EventEmitter<\n        ListItem<PickerValue> | Array<ListItem<PickerValue>>\n    >;\n\n    /**\n     * Fired when clicking on a selected value\n     */\n    @Event()\n    private interact: EventEmitter<ListItem<PickerValue>>;\n\n    /**\n     * Emitted when the user selects an action.\n     */\n    @Event()\n    private action: EventEmitter<Action>;\n\n    @State()\n    private items: Array<ListItem<number | string>>;\n\n    @State()\n    private textValue: string = '';\n\n    @State()\n    private loading: boolean = false;\n\n    @State()\n    private chips: Chip[] = [];\n\n    @Element()\n    private host: HTMLLimelPickerElement;\n\n    // Should NOT be decorated with State(), since this\n    // should not trigger a re-render by itself.\n    private chipSetEditMode = false;\n\n    private debouncedSearch: Searcher;\n    private chipSet: HTMLLimelChipSetElement;\n    private portalId: string;\n\n    constructor() {\n        this.handleTextInput = this.handleTextInput.bind(this);\n        this.handleInputKeyDown = this.handleInputKeyDown.bind(this);\n        this.handleDropdownKeyDown = this.handleDropdownKeyDown.bind(this);\n        this.handleInputFieldFocus = this.handleInputFieldFocus.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleInteract = this.handleInteract.bind(this);\n        this.handleListChange = this.handleListChange.bind(this);\n        this.handleActionListChange = this.handleActionListChange.bind(this);\n        this.handleStopEditAndBlur = this.handleStopEditAndBlur.bind(this);\n        this.createDebouncedSearcher = this.createDebouncedSearcher.bind(this);\n        this.handleCloseMenu = this.handleCloseMenu.bind(this);\n        this.onListKeyDown = this.onListKeyDown.bind(this);\n\n        this.portalId = createRandomString();\n    }\n\n    public componentWillLoad() {\n        this.chips = this.createChips(this.value);\n    }\n\n    public componentDidLoad() {\n        this.createDebouncedSearcher(this.searcher);\n        this.chipSet = this.host.shadowRoot.querySelector(CHIP_SET_TAG_NAME);\n    }\n\n    public async componentWillUpdate() {\n        this.chipSetEditMode = false;\n        if (this.chipSet) {\n            this.chipSetEditMode = await this.chipSet.getEditMode();\n        }\n    }\n\n    public render() {\n        const props: {\n            maxItems?: number;\n        } = {};\n\n        if (!this.multiple) {\n            props.maxItems = 1;\n        }\n\n        return [\n            <limel-chip-set\n                type=\"input\"\n                inputType=\"search\"\n                label={this.label}\n                helperText={this.helperText}\n                leadingIcon={this.leadingIcon}\n                value={this.chips}\n                disabled={this.disabled}\n                invalid={this.invalid}\n                delimiter={this.renderDelimiter()}\n                readonly={this.readonly}\n                required={this.required}\n                searchLabel={this.searchLabel}\n                onInput={this.handleTextInput}\n                onKeyDown={this.handleInputKeyDown}\n                onChange={this.handleChange}\n                onInteract={this.handleInteract}\n                onStartEdit={this.handleInputFieldFocus}\n                onStopEdit={this.handleStopEditAndBlur}\n                emptyInputOnBlur={false}\n                clearAllButton={this.multiple && !this.chipSetEditMode}\n                {...props}\n            />,\n            this.renderDropdown(),\n        ];\n    }\n\n    @Watch('value')\n    protected onChangeValue() {\n        this.chips = this.createChips(this.value);\n    }\n\n    @Watch('searcher')\n    protected createDebouncedSearcher(newValue: Searcher) {\n        if (typeof newValue !== 'function') {\n            return;\n        }\n\n        this.debouncedSearch = AwesomeDebouncePromise(\n            newValue,\n            SEARCH_DEBOUNCE,\n        );\n    }\n\n    private renderDelimiter() {\n        if (this.multiple) {\n            return this.delimiter;\n        }\n\n        return null;\n    }\n\n    private getValueId = (item: ListItem) => {\n        const value = item.value;\n        if (!!value && typeof value === 'object') {\n            return value.id;\n        }\n\n        return value;\n    };\n\n    private createChips = (value: ListItem | ListItem[]): Chip[] => {\n        if (!value) {\n            return [];\n        }\n\n        if (this.multiple) {\n            const listItems: ListItem[] = value as ListItem[];\n\n            return listItems.map(this.createChip);\n        }\n\n        const listItem: ListItem = value as ListItem;\n\n        return [this.createChip(listItem)];\n    };\n\n    private createChip = (listItem: ListItem): Chip => {\n        const name = getIconName(listItem.icon);\n        const color = getIconFillColor(listItem.icon, listItem.iconColor);\n        const valueId = this.getValueId(listItem);\n\n        return {\n            id: `${valueId}`,\n            text: listItem.text,\n            removable: true,\n            icon: name ? { name: name, color: color } : undefined,\n            value: listItem,\n        };\n    };\n\n    /**\n     * Renders the dropdown with the items to pick from, or a spinner if the picker\n     * is waiting for items to be received\n     *\n     * @returns picker dropdown\n     */\n    private renderDropdown() {\n        const dropDownContent = this.getDropdownContent();\n\n        const content = [];\n\n        if (this.shouldShowDropDownContent()) {\n            const actionContent = this.getActionContent();\n            if (this.actionPosition === 'top') {\n                content.push(actionContent);\n            }\n\n            if (dropDownContent) {\n                content.push(dropDownContent);\n            }\n\n            if (this.actionPosition === 'bottom') {\n                content.push(actionContent);\n            }\n        }\n\n        return this.renderPortal(content);\n    }\n\n    private getActionContent() {\n        const actionCount = this.actions?.length ?? 0;\n        if (actionCount === 0) {\n            return null;\n        }\n\n        return [\n            <limel-list\n                class={{\n                    'static-actions-list': true,\n                    'is-on-top': this.actionPosition === 'top',\n                    'is-at-bottom': this.actionPosition === 'bottom',\n                    'has-position-sticky':\n                        this.actionScrollBehavior === 'sticky',\n                }}\n                badgeIcons={true}\n                type={'selectable'}\n                onChange={this.handleActionListChange}\n                items={this.actions.map(this.removeUnusedPropertiesOnAction)}\n            />,\n        ];\n    }\n\n    private removeUnusedPropertiesOnAction(\n        action: ListItem<Action>,\n    ): ListItem<Action> {\n        return {\n            ...action,\n            actions: [],\n        };\n    }\n\n    private shouldShowDropDownContent() {\n        if (this.isFull()) {\n            return false;\n        }\n\n        return !!this.chipSetEditMode;\n    }\n\n    private getDropdownContent() {\n        if (!this.shouldShowDropDownContent()) {\n            return;\n        }\n\n        if (this.loading) {\n            return this.renderSpinner();\n        }\n\n        if (!this.items || !this.items.length) {\n            return this.renderEmptyMessage();\n        }\n\n        return this.renderListResult();\n    }\n\n    /**\n     * Returns true if the picker is \"full\"\n     * The picker is considered to be full if it has a value and only one is allowed\n     *\n     * @returns true if the picker is full\n     */\n    private isFull(): boolean {\n        return !this.multiple && !!this.value;\n    }\n\n    private renderSpinner() {\n        return (\n            <div\n                style={{\n                    width: '100%',\n                    display: 'flex',\n                    'align-items': 'center',\n                    'justify-content': 'center',\n                    padding: '1rem 0',\n                }}\n            >\n                <limel-spinner limeBranded={false} />\n            </div>\n        );\n    }\n\n    private renderEmptyMessage() {\n        if (!this.emptyResultMessage) {\n            return;\n        }\n\n        const style = {\n            color: 'rgb(var(--contrast-1100))',\n            'text-align': 'center',\n            margin: '0.5rem 1rem',\n        };\n\n        return <p style={style}>{this.emptyResultMessage}</p>;\n    }\n\n    private renderListResult() {\n        return (\n            <limel-list\n                badgeIcons={this.badgeIcons}\n                onChange={this.handleListChange}\n                onKeyDown={this.onListKeyDown}\n                type=\"selectable\"\n                items={this.items}\n            />\n        );\n    }\n\n    private onListKeyDown(event: KeyboardEvent) {\n        const keyFound = [TAB, ESCAPE, ENTER].includes(event.key);\n        const keyCodeFound = [\n            TAB_KEY_CODE,\n            ESCAPE_KEY_CODE,\n            ENTER_KEY_CODE,\n        ].includes(event.keyCode);\n        if (keyFound || keyCodeFound) {\n            this.chipSet.setFocus();\n        }\n    }\n\n    private renderPortal(content: any[] = []) {\n        const dropdownZIndex = getComputedStyle(this.host).getPropertyValue(\n            '--dropdown-z-index',\n        );\n\n        return (\n            <limel-portal\n                visible={content.length > 0}\n                containerId={this.portalId}\n                inheritParentWidth={true}\n                containerStyle={{ 'z-index': dropdownZIndex }}\n            >\n                <limel-menu-surface\n                    open={content.length > 0}\n                    allowClicksElement={this.host}\n                    style={{\n                        '--mdc-menu-min-width': '100%',\n                        'max-height': 'inherit',\n                        display: 'flex',\n                    }}\n                    onDismiss={this.handleCloseMenu}\n                >\n                    {content}\n                </limel-menu-surface>\n            </limel-portal>\n        );\n    }\n\n    /**\n     * Check if a descendant still has focus. If not, reset text value and search result.\n     */\n    private handleStopEditAndBlur() {\n        // In browsers where shadow DOM is not supported activeElement on shadowRoot will return null\n        // However, document.activeElement will return the actual focused element instead of the outermost shadow host\n        const element =\n            this.host.shadowRoot.activeElement || document.activeElement;\n        const portalElement = document.querySelector(`#${this.portalId}`);\n        if (\n            isDescendant(element as HTMLElement, this.host) ||\n            isDescendant(element as HTMLElement, portalElement as HTMLElement)\n        ) {\n            return;\n        }\n\n        this.clearInputField();\n    }\n\n    /**\n     * Input handler for the input field\n     *\n     * @param event - event\n     */\n    private async handleTextInput(event) {\n        event.stopPropagation();\n\n        const query = event.detail;\n        this.textValue = query;\n        this.loading = true;\n\n        // If the search-query is an empty string, bypass debouncing.\n        const searchFn = query === '' ? this.searcher : this.debouncedSearch;\n        const result = (await searchFn(query)) as Array<ListItem<PickerValue>>;\n        this.handleSearchResult(query, result);\n    }\n\n    /**\n     * Change handler for the list\n     *\n     * @param event - event\n     */\n    private handleListChange(\n        event: LimelListCustomEvent<ListItem<PickerValue>>,\n    ) {\n        event.stopPropagation();\n        if (!this.value || this.value !== event.detail) {\n            let newValue: ListItem<PickerValue> | Array<ListItem<PickerValue>> =\n                event.detail;\n            if (this.multiple) {\n                newValue = [\n                    ...(this.value as Array<ListItem<PickerValue>>),\n                    event.detail,\n                ];\n            }\n\n            this.change.emit(newValue);\n            this.items = [];\n        }\n\n        if (this.multiple) {\n            this.chipSet?.setFocus(true);\n        }\n    }\n\n    /**\n     * Change handler for the list\n     *\n     * @param event - event\n     */\n    private handleActionListChange(\n        event: LimelListCustomEvent<ListItem<Action>>,\n    ) {\n        event.stopPropagation();\n        if (!event.detail) {\n            return;\n        }\n\n        this.action.emit(event.detail.value);\n        this.items = [];\n    }\n\n    /**\n     * Focus handler for the chip set\n     * Prevent focus if the picker has a value and does not support multiple values\n     */\n    private async handleInputFieldFocus() {\n        this.loading = true;\n        const query = this.textValue;\n        const result = (await this.searcher(query)) as Array<\n            ListItem<PickerValue>\n        >;\n        this.handleSearchResult(query, result);\n    }\n\n    private handleChange(event: LimelChipSetCustomEvent<Chip | Chip[]>) {\n        event.stopPropagation();\n\n        let newValue = null;\n        if (this.multiple) {\n            const chips = event.detail as Chip[];\n            newValue = chips.map((chip) => {\n                return (this.value as ListItem[]).find((item) => {\n                    const valueId = this.getValueId(item);\n\n                    return `${valueId}` === chip.id;\n                });\n            });\n        }\n\n        this.change.emit(newValue);\n    }\n\n    private handleInteract(event: LimelChipSetCustomEvent<Chip>) {\n        event.stopPropagation();\n        this.interact.emit(event.detail ? event.detail.value : event.detail);\n    }\n\n    /**\n     * Key handler for the input field\n     * Will change focus to the first/last item in the dropdown list to enable selection with the keyboard\n     *\n     * @param event - event\n     */\n    private handleInputKeyDown(event: KeyboardEvent) {\n        const isForwardTab =\n            (event.key === TAB || event.keyCode === TAB_KEY_CODE) &&\n            !event.altKey &&\n            !event.metaKey &&\n            !event.shiftKey;\n        const isUp =\n            event.key === ARROW_UP || event.keyCode === ARROW_UP_KEY_CODE;\n        const isDown =\n            event.key === ARROW_DOWN || event.keyCode === ARROW_DOWN_KEY_CODE;\n\n        if (!isForwardTab && !isUp && !isDown) {\n            return;\n        }\n\n        const list = document.querySelector(` #${this.portalId} limel-list`);\n        if (!list) {\n            return;\n        }\n\n        event.preventDefault();\n\n        if (isForwardTab || isDown) {\n            const listElement: HTMLElement = list.shadowRoot.querySelector(\n                '.mdc-deprecated-list-item:first-child',\n            );\n            listElement.focus();\n\n            return;\n        }\n\n        if (isUp) {\n            const listElement: HTMLElement = list.shadowRoot.querySelector(\n                '.mdc-deprecated-list-item:last-child',\n            );\n            listElement.focus();\n        }\n    }\n\n    /**\n     * Key handler for the dropdown\n     *\n     * @param event - event\n     */\n    private handleDropdownKeyDown(event: KeyboardEvent) {\n        const isEscape =\n            event.key === ESCAPE || event.keyCode === ESCAPE_KEY_CODE;\n\n        if (isEscape) {\n            event.preventDefault();\n            this.textValue = '';\n            this.chipSet.setFocus(true);\n        }\n    }\n\n    private handleSearchResult(query: string, result: ListItem[]) {\n        if (query === this.textValue) {\n            this.items = result;\n            if (this.multiple) {\n                const values = this.value as ListItem[];\n                this.items = result.filter((item) => {\n                    return !values.includes(item);\n                });\n            }\n\n            this.loading = false;\n        }\n    }\n\n    private handleCloseMenu() {\n        if (this.items.length > 0) {\n            return;\n        }\n\n        this.clearInputField();\n    }\n\n    private clearInputField() {\n        this.chipSet.emptyInput();\n        this.textValue = '';\n        this.handleSearchResult('', []);\n    }\n}\n"],"mappings":"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"}