{"version":3,"names":["buttonCss","Button","componentWillLoad","makeEnterClickable","this","host","disconnectedCallback","removeEnterClickable","render","h","class","loading","justLoaded","loadingFailed","outlined","disabled","renderIcon","renderLabel","renderSpinner","viewBox","renderLoadingIcons","loadingWatcher","newValue","oldValue","TIMEOUT","justLoadedTimeout","window","setTimeout","clearTimeout","x1","y1","x2","y2","icon","name","label","limeBranded","spinnerCss","Spinner","xmlns","cx","cy","r","id","d"],"sources":["./src/components/button/button.scss?tag=limel-button&encapsulation=shadow","./src/components/button/button.tsx","./src/components/spinner/spinner.scss?tag=limel-spinner&encapsulation=shadow","./src/components/spinner/spinner.tsx"],"sourcesContent":["@use '../../style/functions';\n@use '../../style/mixins';\n\n@use '../../style/internal/lime-theme';\n\n:host {\n    display: inline-block;\n}\n\n:host([hidden]) {\n    display: none;\n}\n\n:host([disabled]) {\n    pointer-events: none;\n}\n\n@include mixins.visualize-aria-expanded('button');\n\nbutton.mdc-button {\n    // As long as this component is depended on MDC,\n    // we need to force it to be font-agnostic.\n    // When MDC-dependency is removed, this block can also be removed.\n    // However, on removal of MDC-dependency, we should also make sure to check\n    // other font-related styles that might be set by MDC,\n    // such as `letter-spacing` or `font-size`.\n    font-family: inherit;\n}\n\nbutton {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.125rem;\n\n    border: none;\n    border-radius: 0.4rem;\n    padding: {\n        top: 0;\n        right: var(--button-padding-right, 0.5rem);\n        bottom: 0;\n        left: var(--button-padding-left, 0.5rem);\n    }\n\n    min-height: 2.25rem;\n    width: 100%;\n\n    &:disabled {\n        &.outlined {\n            border-color: rgba(var(--contrast-1700), 0.2);\n        }\n    }\n\n    &:not(:disabled) {\n        @include mixins.visualize-keyboard-focus;\n        @include mixins.is-elevated-clickable();\n    }\n\n    :host(limel-button[primary]) & {\n        &:not(:disabled) {\n            color: var(--mdc-theme-on-primary, rgb(var(--color-white)));\n            background-color: var(\n                --mdc-theme-primary,\n                rgb(var(--color-teal-default))\n            );\n        }\n        &:disabled {\n            background-color: rgba(var(--contrast-1700), 0.15);\n        }\n    }\n\n    :host(limel-button:not([primary])) & {\n        &:not(:disabled) {\n            color: var(--mdc-theme-primary, rgb(var(--color-teal-default)));\n        }\n        &:disabled {\n            color: rgba(var(--contrast-1600), 0.37);\n            background-color: rgba(var(--contrast-1600), 0.1);\n        }\n    }\n}\n\n.icon {\n    width: 1.25rem;\n    flex-shrink: 0;\n}\n\n.label {\n    font-size: 0.875rem;\n    font-weight: 600;\n    letter-spacing: functions.pxToRem(0.5);\n    padding: 0 0.25rem;\n}\n\nlimel-spinner {\n    position: absolute;\n}\n\nlimel-icon {\n    vertical-align: top;\n}\n\nsvg {\n    height: functions.pxToRem(30);\n    opacity: 0;\n    pointer-events: none;\n    position: absolute;\n    width: functions.pxToRem(30);\n\n    line {\n        stroke: rgb(var(--color-white));\n        stroke-width: 2;\n    }\n}\n\nlimel-icon,\n.label,\nlimel-spinner,\nsvg {\n    transition: opacity 300ms ease-in-out;\n}\n\n.loading {\n    limel-icon,\n    .label {\n        opacity: 0;\n    }\n    limel-spinner {\n        opacity: 1;\n    }\n}\n\n.just-loaded,\n.just-failed {\n    limel-icon,\n    .label {\n        opacity: 0;\n    }\n    svg {\n        opacity: 1;\n    }\n}\n\n.just-failed {\n    background-color: var(--lime-error-text-color) !important;\n    animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;\n}\n\n.outlined {\n    border: 1px solid;\n    border-color: var(--mdc-theme-primary);\n}\n\n@keyframes shake {\n    10%,\n    90% {\n        transform: translate3d(#{functions.pxToRem(-1)}, 0, 0);\n    }\n\n    20%,\n    80% {\n        transform: translate3d(#{functions.pxToRem(2)}, 0, 0);\n    }\n\n    30%,\n    50%,\n    70% {\n        transform: translate3d(#{functions.pxToRem(-3)}, 0, 0);\n    }\n\n    40%,\n    60% {\n        transform: translate3d(#{functions.pxToRem(3)}, 0, 0);\n    }\n}\n\n@import './partial-styles/_has-reduced-presence';\n","import { Component, h, Prop, State, Watch, Element } from '@stencil/core';\nimport {\n    makeEnterClickable,\n    removeEnterClickable,\n} from '../../util/make-enter-clickable';\n\n/**\n * @exampleComponent limel-example-button-basic\n * @exampleComponent limel-example-button-primary\n * @exampleComponent limel-example-button-outlined\n * @exampleComponent limel-example-button-disabled\n * @exampleComponent limel-example-button-icon\n * @exampleComponent limel-example-button-loading\n * @exampleComponent limel-example-button-click-success\n * @exampleComponent limel-example-button-click-fail\n * @exampleComponent limel-example-button-reduce-presence\n * @exampleComponent limel-example-button-colors\n * @exampleComponent limel-example-button-composite\n */\n@Component({\n    tag: 'limel-button',\n    shadow: true,\n    styleUrl: 'button.scss',\n})\nexport class Button {\n    /**\n     * The text to show on the button.\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * Set to `true` to make the button primary.\n     */\n    @Prop({ reflect: true })\n    public primary = false;\n\n    /**\n     * Set to `true` to make the button outlined.\n     */\n    @Prop({ reflect: true })\n    public outlined = false;\n\n    /**\n     * Set icon for the button\n     */\n    @Prop({ reflect: true })\n    public icon: string;\n\n    /**\n     * Set to `true` to disable the button.\n     */\n    @Prop({ reflect: true })\n    public disabled = false;\n\n    /**\n     * Set to `true` to put the button in the `loading` state.\n     * This also disables the button.\n     */\n    @Prop({ reflect: true })\n    public loading = false;\n\n    /**\n     * Set to `true` to indicate failure instead of success when the button is\n     * no longer in the `loading` state.\n     */\n    @Prop({ reflect: true })\n    public loadingFailed = false;\n\n    @State()\n    private justLoaded = false;\n\n    @Element()\n    private host: HTMLElement;\n\n    private justLoadedTimeout?: number;\n\n    public componentWillLoad() {\n        makeEnterClickable(this.host);\n    }\n\n    public disconnectedCallback() {\n        removeEnterClickable(this.host);\n    }\n\n    public render() {\n        return (\n            <button\n                class={{\n                    loading: this.loading,\n                    'just-loaded': this.justLoaded && !this.loadingFailed,\n                    'just-failed': this.justLoaded && this.loadingFailed,\n                    outlined: this.outlined,\n                }}\n                disabled={this.disabled || this.loading}\n            >\n                {this.renderIcon()}\n                {this.renderLabel()}\n                {this.renderSpinner()}\n                <svg viewBox=\"0 0 30 30\">{this.renderLoadingIcons()}</svg>\n            </button>\n        );\n    }\n\n    @Watch('loading')\n    protected loadingWatcher(newValue: boolean, oldValue: boolean) {\n        if (oldValue && !newValue) {\n            this.justLoaded = true;\n            const TIMEOUT = 2000;\n            this.justLoadedTimeout = window.setTimeout(() => {\n                this.justLoaded = false;\n            }, TIMEOUT);\n        } else if (newValue) {\n            this.justLoaded = false;\n            window.clearTimeout(this.justLoadedTimeout);\n        }\n    }\n\n    private renderLoadingIcons() {\n        if (this.loadingFailed) {\n            return [\n                <line x1=\"9\" y1=\"9\" x2=\"21\" y2=\"21\" />,\n                <line x1=\"21\" y1=\"9\" x2=\"9\" y2=\"21\" />,\n            ];\n        }\n\n        return [\n            <line x1=\"8\" y1=\"14\" x2=\"15\" y2=\"20\" />,\n            <line x1=\"23\" y1=\"9\" x2=\"14\" y2=\"20\" />,\n        ];\n    }\n\n    private renderIcon() {\n        if (!this.icon) {\n            return;\n        }\n\n        return <limel-icon class=\"icon\" name={this.icon} />;\n    }\n\n    private renderLabel() {\n        if (!this.label) {\n            return;\n        }\n\n        return <span class=\"label\">{this.label}</span>;\n    }\n\n    private renderSpinner() {\n        if (!this.loading) {\n            return;\n        }\n\n        return <limel-spinner limeBranded={false} />;\n    }\n}\n","@use 'sass:math';\n@use '../../style/functions';\n@use '../../style/internal/lime-theme';\n\n/**\n * @prop --spinner-color-1: 1st animated stroke color, defaults to `--lime-brand-color-deep-red`.\n * @prop --spinner-color-2: 2nd animated stroke color, defaults to `--lime-brand-color-sellable-orange`.\n * @prop --spinner-color-3: 3rd animated stroke color, defaults to `--lime-brand-color-simple-blue`.\n * @prop --spinner-color-4: 4th animated stroke color, defaults to `--lime-brand-color-orange`.\n * @prop --spinner-color-5: 5th animated stroke color, defaults to `--lime-brand-color-lime-green`.\n * @prop --spinner-color-6: 6th animated stroke color, defaults to `--lime-brand-color-yellow`.\n * @prop --spinner-color-7: 7th animated stroke color, defaults to `--lime-brand-color-flexible-turquoise`.\n * @prop --spinner-color-8: 8th animated stroke color, defaults to `--lime-brand-color-loving-magenta`.\n * @prop --spinner-color-9: 9th animated stroke color, defaults to `--lime-brand-color-dark-blue`.\n * @prop --spinner-color-10: 10th animated stroke color, defaults to `--lime-brand-color-light-grey`.\n */\n\n$stroke-width-normal: 4;\n$stroke-width-thick: 10;\n$colors: var(--spinner-color-1, rgb(var(--lime-brand-color-deep-red))),\n    var(--spinner-color-2, rgb(var(--lime-brand-color-sellable-orange))),\n    var(--spinner-color-3, rgb(var(--lime-brand-color-simple-blue))),\n    var(--spinner-color-4, rgb(var(--lime-brand-color-orange))),\n    var(--spinner-color-5, rgb(var(--lime-brand-color-lime-green))),\n    var(--spinner-color-6, rgb(var(--lime-brand-color-yellow))),\n    var(--spinner-color-7, rgb(var(--lime-brand-color-flexible-turquoise))),\n    var(--spinner-color-8, rgb(var(--lime-brand-color-loving-magenta))),\n    var(--spinner-color-9, rgb(var(--lime-brand-color-dark-blue))),\n    var(--spinner-color-9, rgb(var(--lime-brand-color-light-grey)));\n$dash: 63;\n$duration: length($colors) * 1s;\n$duration-alt: math.div($duration, length($colors));\n$keyframe: math.div(1, length($colors) * 2) * 100;\n\n:host(limel-spinner) {\n    display: block;\n}\n\n@keyframes spin {\n    50% {\n        transform: rotate(180deg);\n    }\n    100% {\n        transform: rotate(720deg);\n    }\n}\n\n@keyframes fade-in-the-spinner {\n    0% {\n        transform: scale(0.7);\n        opacity: 0;\n    }\n    100% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n@keyframes animate-colored-circles {\n    #{$keyframe * 1%} {\n        stroke-dashoffset: 0;\n    }\n    #{$keyframe * 2%},\n    100% {\n        stroke-dashoffset: $dash;\n    }\n}\n\n:host([hidden]) {\n    display: none;\n}\n\n:host {\n    box-sizing: border-box;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    // size=mini is the default\n    height: functions.pxToRem(24);\n    width: functions.pxToRem(24);\n    transform: translate3d(0, 0, 0);\n    animation: fade-in-the-spinner 0.5s ease forwards;\n}\n\n:host([size='x-small']) {\n    height: functions.pxToRem(32);\n    width: functions.pxToRem(32);\n}\n\n:host([size='small']) {\n    height: functions.pxToRem(34);\n    width: functions.pxToRem(34);\n}\n\n:host([size='medium']) {\n    height: functions.pxToRem(44);\n    width: functions.pxToRem(44);\n}\n\n:host([size='large']) {\n    height: functions.pxToRem(64);\n    width: functions.pxToRem(64);\n}\n\n.spinner {\n    animation: spin $duration-alt linear infinite;\n    transform-origin: center;\n}\n\n.color {\n    animation: animate-colored-circles $duration linear infinite;\n    fill: none;\n    stroke-dasharray: $dash;\n    stroke-dashoffset: $dash;\n    stroke-linecap: round;\n    stroke-width: $stroke-width-normal;\n\n    &.thick {\n        stroke-width: $stroke-width-thick;\n    }\n\n    @for $i from 1 through length($colors) {\n        &:nth-child(#{$i}) {\n            stroke: nth($colors, $i);\n\n            @if $i > 1 {\n                animation-delay: ($i - 1) * $duration-alt;\n            }\n        }\n    }\n}\n\n.outline {\n    stroke: rgba(var(--lime-brand-color-light-grey), 0.3);\n    fill: none;\n    stroke-linecap: round;\n    stroke-width: $stroke-width-normal;\n\n    &.thick {\n        stroke-width: $stroke-width-thick;\n    }\n}\n","import { SpinnerSize } from './spinner.types';\nimport { Component, Prop, h } from '@stencil/core';\n\n/**\n * @exampleComponent limel-example-spinner\n * @exampleComponent limel-example-spinner-color\n * @exampleComponent limel-example-spinner-size\n */\n@Component({\n    tag: 'limel-spinner',\n    shadow: true,\n    styleUrl: 'spinner.scss',\n})\nexport class Spinner {\n    /**\n     * Determines the size of the spinner.\n     */\n    @Prop({ reflect: true })\n    public size: SpinnerSize = 'mini';\n\n    /**\n     * Gives the spinner the shape of Lime Technologies' logo\n     */\n    @Prop()\n    public limeBranded: boolean = true;\n\n    public render() {\n        return [\n            <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                {this.renderSpinner()}\n            </svg>,\n        ];\n    }\n\n    private renderSpinner() {\n        if (!this.limeBranded) {\n            return (\n                <g>\n                    <circle class=\"outline\" cx=\"12\" cy=\"12\" r=\"10\" />\n                    <g class=\"spinner\">\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                        <circle class=\"color\" cx=\"12\" cy=\"12\" r=\"10\" />\n                    </g>\n                </g>\n            );\n        }\n\n        return (\n            <g>\n                <g clip-path=\"url(#mask)\">\n                    <circle class=\"outline thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                    <g class=\"spinner\">\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                        <circle class=\"color thick\" cx=\"12\" cy=\"12\" r=\"12\" />\n                    </g>\n                </g>\n                <clipPath id=\"mask\">\n                    <path d=\"M2.166 11.248C2.166 5.04 7.058 0 13.083 0 19.108 0 24 5.04 24 11.248c0 3.229-1.307 6.548-4.533 9.306-3.908 3.343-9.15 3.8-17.254 3.249-2.405-.164-2.753-.588-1.51-1.533C4.61 19.3 2.165 17.025 2.165 11.248zm3.124 9.834c5.563.227 9.416-.246 12.397-2.76 2.432-2.05 3.482-4.56 3.51-7.074.05-4.613-3.636-8.36-8.114-8.36-4.478 0-8.114 3.746-8.114 8.36 0 2.793.607 4.737.726 6.345.092 1.252.03 2.388-.405 3.49z\" />\n                </clipPath>\n            </g>\n        );\n    }\n}\n"],"mappings":"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"}