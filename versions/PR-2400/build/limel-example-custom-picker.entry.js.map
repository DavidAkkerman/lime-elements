{"version":3,"names":["CustomPickerExample","this","heroes","text","value","icon","iconColor","handleChange","event","stopPropagation","change","emit","_a","detail","search","async","query","filter","hero","toLowerCase","includes","render","find","h","label","disabled","readonly","required","onChange","searcher","helperText"],"sources":["./src/components/form/examples/custom-component-picker.tsx"],"sourcesContent":["import { Component, h, Prop, EventEmitter, Event } from '@stencil/core';\nimport {\n    FormComponent,\n    LimelPickerCustomEvent,\n    ListItem,\n} from '@limetech/lime-elements';\n\n@Component({\n    tag: 'limel-example-custom-picker',\n    shadow: true,\n})\nexport class CustomPickerExample implements FormComponent<number> {\n    /**\n     * @inheritdoc\n     */\n    @Prop({ reflect: true })\n    public value: number;\n\n    /**\n     * @inheritdoc\n     */\n    @Prop({ reflect: true })\n    public label: string;\n\n    /**\n     * @inheritdoc\n     */\n    @Prop({ reflect: true })\n    public required: boolean;\n\n    /**\n     * @inheritdoc\n     */\n    @Prop({ reflect: true })\n    public readonly: boolean;\n\n    /**\n     * @inheritdoc\n     */\n    @Prop({ reflect: true })\n    public disabled: boolean;\n\n    /**\n     * @inheritdoc\n     */\n    @Prop({ reflect: true })\n    public helperText?: string;\n\n    /**\n     * Emitted when the value is changed\n     */\n    @Event()\n    public change: EventEmitter<number>;\n\n    private heroes: Array<ListItem<number>> = [\n        {\n            text: 'Superman',\n            value: 1001,\n            icon: 'superman',\n            iconColor: 'var(--lime-deep-red)',\n        },\n        {\n            text: 'Squirrel Girl',\n            value: 1002,\n            icon: 'squirrel',\n            iconColor: 'var(--lime-orange)',\n        },\n        {\n            text: 'Captain America',\n            value: 1003,\n            icon: 'captain_america',\n            iconColor: 'var(--lime-blue)',\n        },\n        {\n            text: 'Black Widow',\n            value: 1004,\n            icon: 'spider',\n            iconColor: 'var(--lime-dark-grey)',\n        },\n    ];\n\n    private handleChange = (\n        event: LimelPickerCustomEvent<ListItem<number>>\n    ) => {\n        event.stopPropagation();\n        this.change.emit(event.detail?.value);\n    };\n\n    private search = async (query: string): Promise<ListItem[]> => {\n        return this.heroes.filter((hero) => {\n            return hero.text.toLowerCase().includes(query.toLowerCase());\n        });\n    };\n\n    public render() {\n        const value = this.heroes.find((hero) => hero.value === this.value);\n\n        return (\n            <limel-picker\n                label={this.label}\n                value={value}\n                disabled={this.disabled}\n                readonly={this.readonly}\n                required={this.required}\n                onChange={this.handleChange}\n                searcher={this.search}\n                helperText={this.helperText}\n            />\n        );\n    }\n}\n"],"mappings":"4DAWaA,EAAmB,M,wDA2CpBC,KAAAC,OAAkC,CACtC,CACIC,KAAM,WACNC,MAAO,KACPC,KAAM,WACNC,UAAW,wBAEf,CACIH,KAAM,gBACNC,MAAO,KACPC,KAAM,WACNC,UAAW,sBAEf,CACIH,KAAM,kBACNC,MAAO,KACPC,KAAM,kBACNC,UAAW,oBAEf,CACIH,KAAM,cACNC,MAAO,KACPC,KAAM,SACNC,UAAW,0BAIXL,KAAAM,aACJC,I,MAEAA,EAAMC,kBACNR,KAAKS,OAAOC,MAAKC,EAAAJ,EAAMK,UAAM,MAAAD,SAAA,SAAAA,EAAER,MAAM,EAGjCH,KAAAa,OAASC,MAAOC,GACbf,KAAKC,OAAOe,QAAQC,GAChBA,EAAKf,KAAKgB,cAAcC,SAASJ,EAAMG,iB,4IAI/CE,SACH,MAAMjB,EAAQH,KAAKC,OAAOoB,MAAMJ,GAASA,EAAKd,QAAUH,KAAKG,QAE7D,OACImB,EAAA,gBACIC,MAAOvB,KAAKuB,MACZpB,MAAOA,EACPqB,SAAUxB,KAAKwB,SACfC,SAAUzB,KAAKyB,SACfC,SAAU1B,KAAK0B,SACfC,SAAU3B,KAAKM,aACfsB,SAAU5B,KAAKa,OACfgB,WAAY7B,KAAK6B,Y"}